[{"C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\PrivateLessones\\PL\\client\\gui\\src\\index.js":"1","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\PrivateLessones\\PL\\client\\gui\\src\\App.js":"2","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\PrivateLessones\\PL\\client\\gui\\src\\reportWebVitals.js":"3","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\PrivateLessones\\PL\\client\\gui\\src\\components\\AccountManagement\\login.js":"4","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\PrivateLessones\\PL\\client\\gui\\src\\components\\Teacher\\TeacherAbilities.js":"5","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\PrivateLessones\\PL\\client\\gui\\src\\components\\Calendar\\UserCalendar.js":"6","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\PrivateLessones\\PL\\client\\gui\\src\\components\\TableDetails\\TableDetails.js":"7","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\PrivateLessones\\PL\\client\\gui\\src\\components\\userDetails\\UserDetails.js":"8","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\PrivateLessones\\PL\\client\\gui\\src\\components\\AccountManagement\\choseType.js":"9","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\PrivateLessones\\PL\\client\\gui\\src\\components\\Menu\\Menu.js":"10","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\PrivateLessones\\PL\\client\\gui\\src\\components\\Student\\Search\\SearchFilters.js":"11","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\PrivateLessones\\PL\\client\\gui\\src\\components\\Student\\Search\\LessonOptionsList.js":"12","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\PrivateLessones\\PL\\client\\gui\\src\\components\\Student\\Search\\LessonItem.js":"13","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\PrivateLessones\\PL\\client\\gui\\src\\components\\Student\\Search\\TeacherSearch.js":"14","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\PrivateLessones\\PL\\client\\gui\\src\\components\\UserHome\\UserHomePage.js":"15","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\PrivateLessones\\PL\\client\\gui\\src\\components\\UserLessons\\Lessons.js":"16","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\PrivateLessones\\PL\\client\\gui\\src\\components\\Teacher\\NewAbilityModal.js":"17","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\PrivateLessones\\PL\\client\\gui\\src\\components\\Menu\\ResponsiveAppBar.js":"18","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\Patient-Management\\client\\src\\index.js":"19","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\Patient-Management\\client\\src\\App.js":"20","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\Patient-Management\\client\\src\\reportWebVitals.js":"21","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\Patient-Management\\client\\src\\components\\UserHome\\UserHomePage.js":"22","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\Patient-Management\\client\\src\\components\\Menu\\Menu.js":"23","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\Patient-Management\\client\\src\\components\\Menu\\ResponsiveAppBar.js":"24","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\Patient-Management\\client\\src\\components\\patients\\patients.js":"25","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\Patient-Management\\client\\src\\components\\patients\\newPatientModal.js":"26","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\Patient-Management\\client\\src\\components\\vaccinations\\vaccinations.js":"27"},{"size":775,"mtime":1706114745719,"results":"28","hashOfConfig":"29"},{"size":848,"mtime":1706126379808,"results":"30","hashOfConfig":"29"},{"size":375,"mtime":1703617386351,"results":"31","hashOfConfig":"29"},{"size":3477,"mtime":1706114242519,"results":"32","hashOfConfig":"29"},{"size":6328,"mtime":1706180499917,"results":"33","hashOfConfig":"29"},{"size":29290,"mtime":1706185850685,"results":"34","hashOfConfig":"29"},{"size":5724,"mtime":1706116380198,"results":"35","hashOfConfig":"29"},{"size":4443,"mtime":1706116849319,"results":"36","hashOfConfig":"29"},{"size":2068,"mtime":1706114280020,"results":"37","hashOfConfig":"29"},{"size":1790,"mtime":1706190163717,"results":"38","hashOfConfig":"29"},{"size":4865,"mtime":1706125756296,"results":"39","hashOfConfig":"29"},{"size":590,"mtime":1706122631428,"results":"40","hashOfConfig":"29"},{"size":1723,"mtime":1706123559497,"results":"41","hashOfConfig":"29"},{"size":6292,"mtime":1706125353406,"results":"42","hashOfConfig":"29"},{"size":1350,"mtime":1706189924159,"results":"43","hashOfConfig":"29"},{"size":2237,"mtime":1706126862361,"results":"44","hashOfConfig":"29"},{"size":2388,"mtime":1706131629858,"results":"45","hashOfConfig":"29"},{"size":6037,"mtime":1706190293529,"results":"46","hashOfConfig":"29"},{"size":574,"mtime":1710973044539,"results":"47","hashOfConfig":"48"},{"size":548,"mtime":1710973044527,"results":"49","hashOfConfig":"48"},{"size":375,"mtime":1710973044542,"results":"50","hashOfConfig":"48"},{"size":260,"mtime":1710973044533,"results":"51","hashOfConfig":"48"},{"size":689,"mtime":1710973044530,"results":"52","hashOfConfig":"48"},{"size":5157,"mtime":1710973044531,"results":"53","hashOfConfig":"48"},{"size":8299,"mtime":1711452152062,"results":"54","hashOfConfig":"48"},{"size":10167,"mtime":1711457864326,"results":"55","hashOfConfig":"48"},{"size":7420,"mtime":1711026277944,"results":"56","hashOfConfig":"48"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"145agh",{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},"tyxriq",{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"123"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"123"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"123"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"123"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"123"},"C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\PrivateLessones\\PL\\client\\gui\\src\\index.js",[],[],[],"C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\PrivateLessones\\PL\\client\\gui\\src\\App.js",["153"],[],"import React from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport Login from \"./components/AccountManagement/login\";\r\nimport ChoseType from \"./components/AccountManagement/choseType\";\r\nimport UserHomePage from \"./components/UserHome/UserHomePage\";\r\n\r\nfunction App() {\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    navigate(\"/login\");\r\n  }, []);\r\n\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/\" element={<Login />}></Route>\r\n      <Route path=\"/login\" element={<Login />} />\r\n      <Route path=\"/choseAccount/:userid\" element={<ChoseType />} />\r\n      <Route path=\"/teacher/:userid\" element={<UserHomePage />} />\r\n      <Route path=\"/student/:userid\" element={<UserHomePage />} />\r\n    </Routes>\r\n  );\r\n}\r\nexport default App;\r\n","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\PrivateLessones\\PL\\client\\gui\\src\\reportWebVitals.js",[],[],"C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\PrivateLessones\\PL\\client\\gui\\src\\components\\AccountManagement\\login.js",["154","155","156","157"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { googleLogout, useGoogleLogin } from \"@react-oauth/google\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { GoogleLogin } from \"@react-oauth/google\";\r\n\r\nexport default function Login() {\r\n  const [user, setUser] = useState(null);\r\n  const [connectedFails, setConnectedFails] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  async function getUserInfo() {\r\n    const localUser = JSON.parse(localStorage.getItem(\"connected_user\"));\r\n    if (localUser != null) {\r\n      // If user connected try to get full info from server\r\n      //TODO: Add timout\r\n      try {\r\n        const response = await fetch(\r\n          `https://privatelessonsserver.azurewebsites.net/api/users/${localUser.user_id}`,\r\n          {\r\n            method: \"GET\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n        if (!response.ok) {\r\n          setConnectedFails(true);\r\n        } else {\r\n          if (response.status === 200) {\r\n            const user = await response.json();\r\n            if (user) {\r\n              //create user with full data in localStoarge\r\n              localStorage.setItem(\"connected_user\", JSON.stringify(user));\r\n              setUser(user);\r\n              //In case of exist user\r\n              user.user_type === \"\" || user.user_type === null\r\n                ? navigate(`/choseAccount/${user.user_id}`)\r\n                : navigate(`/${user.user_type}/${user.user_id}`);\r\n            }\r\n          }\r\n        }\r\n      } catch (error) {\r\n        // console.log(\"ERROR\", error);\r\n      }\r\n    }\r\n  }\r\n\r\n  const createSession = async (JWT_token) => {\r\n    // google login\r\n    try {\r\n      const response = await fetch(\r\n        `https://privatelessonsserver.azurewebsites.net/api/users/googleLogin/${JWT_token}`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (!response.ok) {\r\n        setConnectedFails(true);\r\n      } else {\r\n        if (response.status === 200) {\r\n          const { user } = await response.json();\r\n          //create user in localStoarge\r\n          localStorage.setItem(\"connected_user\", JSON.stringify(user));\r\n          setUser(user);\r\n          // exist user\r\n          user.user_type === \"\" || user.user_type === null\r\n            ? navigate(`/choseAccount/${user.user_id}`)\r\n            : navigate(`/${user.user_type}/${user.user_id}`);\r\n        } else if (response.status === 201) {\r\n          const { user } = await response.json();\r\n          localStorage.setItem(\"connected_user\", JSON.stringify(user));\r\n          setUser(user);\r\n          // new user\r\n          navigate(`/choseAccount/${user.user_id}`);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      // console.log(\"ERROR\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUserInfo();\r\n  }, []);\r\n\r\n  const login = (token) => {\r\n    // request to server - create session and then navigat to details screen\r\n    createSession(token);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <GoogleLogin\r\n          onSuccess={(credentialResponse) => {\r\n            login(credentialResponse.credential);\r\n          }}\r\n          onError={() => {\r\n            // console.log(\"Login Failed\");\r\n          }}\r\n        />\r\n        {connectedFails && <h3>User connection failed, please try again.</h3>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\PrivateLessones\\PL\\client\\gui\\src\\components\\Teacher\\TeacherAbilities.js",["158"],[],"import React, { useState, useEffect } from \"react\";\r\nimport NewAbilityModal from \"./NewAbilityModal\";\r\nconst TeacherAbilities = ({ userDetails }) => {\r\n  const URL = \"https://privatelessonsserver.azurewebsites.net/api/abilities/\";\r\n  const [abilities, setAbilities] = useState([]);\r\n\r\n  const defaultAbility = { subject_name: \"\", type: \"\", units: 3, cost: 0 };\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const [newAbility, setNewAbility] = useState(defaultAbility);\r\n  const [editingIndex, setEditingIndex] = useState(-1); // -1 means adding a new subject\r\n  const [user] = useState(userDetails);\r\n\r\n  const openModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setEditingIndex(-1);\r\n    setNewAbility(defaultAbility);\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const saveAbility = async () => {\r\n    if (editingIndex === -1) {\r\n      fetch(`${URL}${user.user_id}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(newAbility),\r\n      })\r\n        .then((response) => {\r\n          if (response.ok) {\r\n            setAbilities((prevabilities) => [...prevabilities, newAbility]);\r\n          } else {\r\n            // Handle duplicate entry error\r\n            if (response.status === 409) {\r\n              alert(\"This ability already exists.\");\r\n            } else {\r\n              // Handle other server-side errors\r\n              alert(\r\n                \"An error occurred while adding the ability. Please try again.\"\r\n              );\r\n            }\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          // console.error(\"Fetch error:\", error);\r\n          // Handle network error\r\n          alert(\r\n            \"A network error occurred. Please check your internet connection and try again.\"\r\n          );\r\n        });\r\n    } else {\r\n      // Edit existing subject locally\r\n      const updatedAbilities = [...abilities];\r\n      updatedAbilities[editingIndex] = newAbility;\r\n      setAbilities(updatedAbilities);\r\n      if (newAbility.lesson_ability_id) {\r\n        // Send a request to the server to update the ability\r\n        fetch(`${URL}ability/${newAbility.lesson_ability_id}`, {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(newAbility),\r\n        })\r\n          .then((response) => {\r\n            if (response.ok) {\r\n            } else {\r\n              // console.error(\r\n              //   \"Error updating ability on the server:\",\r\n              //   response.statusText\r\n              // );\r\n              // Handle error by showing feedback to the user or reverting changes in UI\r\n              alert(\r\n                \"An error occurred while updating the ability. Please try again.\"\r\n              );\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            // console.error(\"Fetch error:\", error);\r\n            // Handle network error\r\n            alert(\r\n              \"A network error occurred. Please check your internet connection and try again.\"\r\n            );\r\n          })\r\n          .finally(() => {\r\n            // Reset states after both successful and failed update\r\n            setNewAbility(defaultAbility);\r\n            setEditingIndex(-1);\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Get teacher abilities from the server\r\n    fetch(`${URL}${user.user_id}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setAbilities(data); // Update the state with the fetched data\r\n      })\r\n      .catch((error) => {\r\n        // console.error(\"Error fetching teacher abilities:\", error);\r\n      });\r\n  }, []);\r\n\r\n  const deleteAbility = (ability_id, index) => {\r\n    // Send a DELETE request to the server\r\n    fetch(`${URL}ability/${ability_id}`, {\r\n      method: \"DELETE\",\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          // Remove ability from local state as well\r\n          const newAbilities = [...abilities];\r\n          newAbilities.splice(index, 1);\r\n          setAbilities(newAbilities);\r\n        } else if (response.status === 500) {\r\n          alert(\"You still have existing lessons that contain this ability\");\r\n        } else {\r\n          // console.error(\r\n          //   \"Error deleting ability on the server:\",\r\n          //   response.statusText\r\n          // );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        // console.error(\"Fetch error:\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Teacher Abilities</h1>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Subject</th>\r\n            <th>Level</th>\r\n            <th>Units</th>\r\n            <th>Cost</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {abilities &&\r\n            Array.isArray(abilities) &&\r\n            abilities.map((ability, index) => {\r\n              return (\r\n                <tr key={index}>\r\n                  <td>{ability.subject_name}</td>\r\n                  <td>{ability.type}</td>\r\n                  <td>{ability.units}</td>\r\n                  <td>{ability.cost}</td>\r\n                  <td>\r\n                    <button\r\n                      onClick={() => {\r\n                        setEditingIndex(index);\r\n                        openModal();\r\n                      }}\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                    <button\r\n                      onClick={() =>\r\n                        deleteAbility(ability.lesson_ability_id, index)\r\n                      }\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n        </tbody>\r\n      </table>\r\n      {/* Button to open the modal */}\r\n      <button onClick={() => openModal()}>Add New Ability</button>\r\n      {/* Open NewAbility Modal */}\r\n      {isModalOpen && (\r\n        <NewAbilityModal\r\n          isOpen={isModalOpen}\r\n          onClose={closeModal}\r\n          saveAbility={saveAbility}\r\n          newAbility={newAbility}\r\n          setNewAbility={setNewAbility}\r\n        ></NewAbilityModal>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default TeacherAbilities;\r\n","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\PrivateLessones\\PL\\client\\gui\\src\\components\\Calendar\\UserCalendar.js",["159","160"],[],"C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\PrivateLessones\\PL\\client\\gui\\src\\components\\TableDetails\\TableDetails.js",["161","162"],[],"import React, { useEffect, useState } from \"react\";\r\n\r\nconst TableDetails = ({ user, lessons, setLessons }) => {\r\n\r\n  const handleLessonStatusUpdate = async (lessonIndex, status, lesson) => {\r\n    // update lesson in server, then ger auto real-time update to the list.\r\n    try {\r\n      const response = await fetch(\r\n        `https://privatelessonsserver.azurewebsites.net/api/lessons/${lesson.lesson_id}`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ paid_up: lesson.paid_up, status: status }),\r\n        }\r\n      );\r\n      if (!response.ok) {\r\n        // console.log(\"lesson update fails\");\r\n      } else {\r\n        if (response.status === 200) {\r\n          // console.log(`lesson with lesson_id: ${lesson.lesson_id} update`);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      // console.log(\"ERROR\", error);\r\n    }\r\n\r\n    // Clone the current lessons array\r\n    const updatedLessons = [...lessons];\r\n\r\n    // Update the status of the specific lesson\r\n    updatedLessons[lessonIndex].status = status;\r\n\r\n    // Set the updated lessons array as the new state\r\n    setLessons(updatedLessons);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Phone</th>\r\n            <th>Email</th>\r\n            <th>Subject</th>\r\n            <th>Level</th>\r\n            <th>Units</th>\r\n            <th>Date</th>\r\n            <th>Time</th>\r\n            {/* <th>Paid Up</th> */}\r\n            {/* <th>Frontal</th>\r\n            <th>Zoom</th> */}\r\n            <th>Status</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {lessons &&\r\n            lessons.map((lesson, index) => (\r\n              <tr key={lesson.lesson_id}>\r\n                {user.user_type === \"teacher\" ? (\r\n                  <td>{lesson.student_name}</td>\r\n                ) : (\r\n                  <td>{lesson.teacher_name}</td>\r\n                )}\r\n                {user.user_type === \"teacher\" ? (\r\n                  <td>\r\n                    <a href={`tel:${lesson.student_phone}`}>\r\n                      {lesson.student_phone}\r\n                    </a>\r\n                  </td>\r\n                ) : (\r\n                  <td>\r\n                    <a href={`tel:${lesson.teacher_phone}`}>\r\n                      {lesson.teacher_phone}\r\n                    </a>\r\n                  </td>\r\n                )}\r\n                {user.user_type === \"teacher\" ? (\r\n                  <td>\r\n                    <a href={`mailto:${lesson.student_email}`}>\r\n                      {lesson.student_email}\r\n                    </a>\r\n                  </td>\r\n                ) : (\r\n                  <td>\r\n                    <a href={`mailto:${lesson.teacher_email}`}>\r\n                      {lesson.teacher_email}\r\n                    </a>\r\n                  </td>\r\n                )}\r\n                <td>{lesson.subject}</td>\r\n                <td>{lesson.subject_type}</td>\r\n                <td>{lesson.subject_units}</td>\r\n                <td>{new Date(lesson.b_time).toLocaleDateString()}</td>\r\n                <td>\r\n                  {new Date(lesson.b_time)\r\n                    .toLocaleTimeString()\r\n                    .split(\":\")\r\n                    .slice(0, 2)\r\n                    .join(\":\")}\r\n                  -\r\n                  {new Date(lesson.e_time)\r\n                    .toLocaleTimeString()\r\n                    .split(\":\")\r\n                    .slice(0, 2)\r\n                    .join(\":\")}\r\n                </td>\r\n\r\n                {/* {lesson.paid_up ? <td>V</td> : <td></td>} */}\r\n                {/* {lesson.zoom ? <td>V</td> : <td></td>}\r\n                {lesson.frontal ? <td>V</td> : <td></td>} */}\r\n                <td>{lesson.status}</td>\r\n                {user.user_type === \"teacher\" &&\r\n                  lesson.status === \"Pending\" && (\r\n                    <td>\r\n                      <button\r\n                        onClick={() =>\r\n                          handleLessonStatusUpdate(index, \"Approved\", lesson)\r\n                        }\r\n                      >\r\n                        Approve\r\n                      </button>\r\n                      <button\r\n                        onClick={() =>\r\n                          handleLessonStatusUpdate(index, \"Denied\", lesson)\r\n                        }\r\n                      >\r\n                        Deny\r\n                      </button>\r\n                    </td>\r\n                  )}\r\n                {(lesson.status === \"Approved\" ||\r\n                  (lesson.status === \"Pending\" &&\r\n                    user.user_type === \"student\")) &&\r\n                  new Date(lesson.b_time) > new Date() && (\r\n                    <td>\r\n                      <button\r\n                        onClick={() =>\r\n                          handleLessonStatusUpdate(index, \"Cancelled\", lesson)\r\n                        }\r\n                      >\r\n                        Cancel\r\n                      </button>\r\n                    </td>\r\n                  )}\r\n                {lesson.status === \"Approved\" &&\r\n                  user.user_type !== \"student\" &&\r\n                  new Date(lesson.e_time) < new Date() && (\r\n                    <td>\r\n                      <button\r\n                        onClick={() =>\r\n                          handleLessonStatusUpdate(index, \"Done\", lesson)\r\n                        }\r\n                      >\r\n                        Done\r\n                      </button>\r\n                    </td>\r\n                  )}\r\n              </tr>\r\n            ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\nexport default TableDetails;\r\n","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\PrivateLessones\\PL\\client\\gui\\src\\components\\userDetails\\UserDetails.js",[],[],"C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\PrivateLessones\\PL\\client\\gui\\src\\components\\AccountManagement\\choseType.js",["163"],[],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nconst ChoseType = () => {\r\n  const [type, setType] = useState(\"\");\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const commitChange = useCallback(async () => {\r\n    // update userType\r\n    const userid = params.userid;\r\n    try {\r\n      const response = await fetch(\r\n        `https://privatelessonsserver.azurewebsites.net/api/users/${userid}/${type}`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (!response.ok) {\r\n        //setConnectedFails(true);\r\n      } else {\r\n        if (response.status === 200) {\r\n          const { user, newRecordId } = await response.json();\r\n          if (user) {\r\n            //create user with full data in localStoarge\r\n            localStorage.setItem(\"connected_user\", JSON.stringify(user));\r\n            //In case of exist user\r\n            if (user.userType !== \"\") {\r\n              navigate(`/${user.user_type}/${user.user_id}`);\r\n            } else {\r\n              // console.log(\r\n              //   \"some errore occurred when user update in DB (userType did not updata as expected)\"\r\n              // );\r\n            }\r\n          } else {\r\n            // console.log(\"user is null\");\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      // console.log(\"ERROR\", error);\r\n    }\r\n  }, [params, type, navigate]);\r\n\r\n  useEffect(() => {\r\n    if (type) commitChange();\r\n  }, [type, commitChange]);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h1>Hi : ), what are you here for?</h1>\r\n      </div>\r\n      <div>\r\n        <button\r\n          onClick={() => {\r\n            setType(\"student\");\r\n          }}\r\n        >\r\n          Student\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            setType(\"teacher\");\r\n          }}\r\n        >\r\n          Teacher\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChoseType;\r\n","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\PrivateLessones\\PL\\client\\gui\\src\\components\\Menu\\Menu.js",[],[],"C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\PrivateLessones\\PL\\client\\gui\\src\\components\\Student\\Search\\SearchFilters.js",["164","165"],[],"import React, { useState, useEffect } from \"react\";\r\n\r\nconst SearchFilters = ({\r\n  searchCriteria,\r\n  setSearchCriteria,\r\n  sortCriteria,\r\n  setSortCriteria,\r\n  sortDirection,\r\n  setSortDirection,\r\n  handleSearch\r\n}) => {\r\n  let currentDate = new Date();\r\n  currentDate =\r\n    currentDate.toISOString().split(\"T\")[0] +\r\n    \"T\" +\r\n    currentDate.toTimeString().slice(0, 5);\r\n\r\n  const subjects = [\r\n    \"Math\",\r\n    \"English\",\r\n    \"Computer Science\",\r\n    \"Physics\",\r\n    \"Science\",\r\n  ];\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setSearchCriteria((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <div>\r\n        <strong>Educational Level:</strong>\r\n        <select\r\n          name=\"subject_type\"\r\n          value={searchCriteria.subject_type}\r\n          onChange={handleInputChange}\r\n        >\r\n          <option value=\"School\">School</option>\r\n          <option value=\"High School\">High School</option>\r\n          <option value=\"University\">University</option>\r\n        </select>\r\n      </div>\r\n      <div>\r\n        <strong>Subjects:</strong>\r\n        <div>\r\n          {subjects.map((sub) => (\r\n            <div key={sub}>\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"subject\"\r\n                  value={sub}\r\n                  checked={searchCriteria.subject.includes(sub)}\r\n                  onChange={(e) => {\r\n                    if (e.target.checked) {\r\n                      setSearchCriteria((prev) => ({\r\n                        ...prev,\r\n                        subject: [...prev.subject, sub],\r\n                      }));\r\n                    } else {\r\n                      setSearchCriteria((prev) => ({\r\n                        ...prev,\r\n                        subject: prev.subject.filter((s) => s !== sub),\r\n                      }));\r\n                    }\r\n                  }}\r\n                />\r\n              </label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <strong>Units:</strong>\r\n        <input\r\n          type=\"number\"\r\n          name=\"units\"\r\n          value={searchCriteria.units}\r\n          min={0}\r\n          onChange={handleInputChange}\r\n        ></input>\r\n      </div>\r\n      <div>\r\n        <div>\r\n          <label>\r\n            <strong>from:</strong>\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"datetime-local\"\r\n            min={currentDate}\r\n            value={searchCriteria.start_time}\r\n            onChange={(e) =>\r\n              setSearchCriteria((prev) => ({\r\n                ...prev,\r\n                start_time: e.target.value,\r\n              }))\r\n            }\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>\r\n            <strong>To:</strong>\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"datetime-local\"\r\n            min={currentDate}\r\n            value={searchCriteria.end_time}\r\n            onChange={(e) =>\r\n              setSearchCriteria((prev) => ({\r\n                ...prev,\r\n                end_time: e.target.value,\r\n              }))\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <label>\r\n          <strong> Teacher Name:</strong>\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"teacher_name\"\r\n          value={searchCriteria.teacher_name}\r\n          onChange={handleInputChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>\r\n          <strong>Maximum Price</strong>\r\n        </label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"price\"\r\n          min={0}\r\n          value={searchCriteria.lesson_cost}\r\n          onChange={(e) => {\r\n            const { value } = e.target;\r\n            const numericValue = parseFloat(value);\r\n            setSearchCriteria((prev) => ({\r\n              ...prev,\r\n              lesson_cost: numericValue,\r\n            }));\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>\r\n          <strong>Sort by:</strong>\r\n        </label>\r\n        <div>\r\n          <select\r\n            value={sortCriteria}\r\n            onChange={(e) => setSortCriteria(e.target.value)}\r\n          >\r\n            <option value=\"date\">Date</option>\r\n            <option value=\"teacher_name\">Name</option>\r\n            <option value=\"lesson_cost\">Cost</option>\r\n          </select>\r\n          <select\r\n            value={sortDirection}\r\n            onChange={(e) => setSortDirection(e.target.value)}\r\n          >\r\n            <option value=\"asc\">Low to High</option>\r\n            <option value=\"desc\">High to Low</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <button onClick={handleSearch}>Filter</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default SearchFilters;\r\n","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\PrivateLessones\\PL\\client\\gui\\src\\components\\Student\\Search\\LessonOptionsList.js",[],[],"C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\PrivateLessones\\PL\\client\\gui\\src\\components\\Student\\Search\\LessonItem.js",[],[],"C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\PrivateLessones\\PL\\client\\gui\\src\\components\\Student\\Search\\TeacherSearch.js",["166","167"],[],"import React, { useState, useEffect } from \"react\";\r\nimport LessonOptionsList from \"./LessonOptionsList\";\r\nimport SearchFilters from \"./SearchFilters\";\r\n\r\nconst TeacherSearch = () => {\r\n  const [lessonOptions, setLessoneOptions] = useState(null);\r\n  const [filteredLessons, setFilteredLessons] = useState(null);\r\n\r\n  let currentDate = new Date();\r\n  currentDate =\r\n    currentDate.toISOString().split(\"T\")[0] +\r\n    \"T\" +\r\n    currentDate.toTimeString().slice(0, 5);\r\n  let endDate = new Date();\r\n  endDate.setDate(new Date().getDate() + 14);\r\n  endDate =\r\n    endDate.toISOString().split(\"T\")[0] +\r\n    \"T\" +\r\n    endDate.toTimeString().slice(0, 5);\r\n\r\n  const [searchCriteria, setSearchCriteria] = useState({\r\n    subject: [],\r\n    zoom: false,\r\n    frontal: false,\r\n    start_time: currentDate,\r\n    end_time: endDate,\r\n    subject_type: \"High School\",\r\n    units: 3,\r\n  });\r\n\r\n  const [sortCriteria, setSortCriteria] = useState(\"date\");\r\n  const [sortDirection, setSortDirection] = useState(\"asc\"); // 'asc' for ascending, 'desc' for descending\r\n\r\n  const getTeachersLessonOptions = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        \"https://privatelessonsserver.azurewebsites.net/api/timeAbilities\",\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        const responseData = await response.json();\r\n        if (responseData.length > 0) {\r\n          // Use length to check if the array is not empty\r\n          setLessoneOptions([...responseData]);\r\n        }\r\n      } else {\r\n        setLessoneOptions(null);\r\n      }\r\n    } catch (error) {\r\n      // console.log(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleRegister = async (lessonAbility) => {\r\n    const user = JSON.parse(localStorage.getItem(\"connected_user\"));\r\n    if (user) {\r\n      try {\r\n        // Make POST request to create a lesson\r\n        const response = await fetch(\r\n          \"https://privatelessonsserver.azurewebsites.net/api/lessons\",\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n              user_id: user.user_id,\r\n              time_ability_id: lessonAbility.time_ability_id,\r\n              paid_up: false,\r\n              status: \"Pending\",\r\n            }),\r\n          }\r\n        );\r\n\r\n        // Check if the request was successful\r\n        if (!response.ok) {\r\n          const responseData = await response.json();\r\n          throw new Error(responseData.error || \"Failed to create lesson\");\r\n        } else {\r\n          //TODO: add alert\r\n          setFilteredLessons((prevLessons) =>\r\n            prevLessons.filter(\r\n              (l) => l.time_ability_id !== lessonAbility.time_ability_id\r\n            )\r\n          );\r\n        }\r\n      } catch (error) {\r\n        // console.error(\"Error fetching data:\", error);\r\n      }\r\n    } else {\r\n      // console.log(\"can't find connected user to the website\");\r\n    }\r\n  };\r\n\r\n  const getSortedLessones = (lessones) => {\r\n    return [...lessones].sort((a, b) => {\r\n      let comparison = 0;\r\n      switch (sortCriteria) {\r\n        case \"teacher_name\":\r\n          comparison = a.teacher_name.localeCompare(b.teacher_name);\r\n          break;\r\n        case \"lesson_cost\":\r\n          comparison = a.lesson_cost - b.lesson_cost;\r\n          break;\r\n        case \"date\":\r\n          comparison = new Date(a.start_time) - new Date(b.start_time);\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n\r\n      return sortDirection === \"desc\" ? -comparison : comparison;\r\n    });\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    const criteriaStartDate = new Date(searchCriteria.start_time);\r\n    const criteriaEndDate = new Date(searchCriteria.end_time);\r\n\r\n    if (lessonOptions) {\r\n      const filtered = lessonOptions.filter((lesson) => {\r\n        if (lesson.subject_type !== searchCriteria.subject_type) return false;\r\n        if (\r\n          searchCriteria.teacher_name &&\r\n          searchCriteria.teacher_name.length > 0 &&\r\n          !lesson.teacher_name\r\n            .toLowerCase()\r\n            .includes(searchCriteria.teacher_name.toLowerCase())\r\n        )\r\n          return false;\r\n        if (\r\n          searchCriteria.subject.length > 0 &&\r\n          !searchCriteria.subject.includes(lesson.subject)\r\n        )\r\n          return false;\r\n\r\n        if (\r\n          searchCriteria.lesson_cost &&\r\n          parseFloat(lesson.lesson_cost) > searchCriteria.lesson_cost\r\n        )\r\n          return false;\r\n        const lessonStartTime = new Date(lesson.start_time);\r\n        const lessonEndTime = new Date(lesson.end_time);\r\n        if (\r\n          lessonStartTime < criteriaStartDate ||\r\n          lessonEndTime > criteriaEndDate\r\n        ) {\r\n          return false;\r\n        }\r\n\r\n        if (\r\n          (searchCriteria.zoom && !lesson.zoom) ||\r\n          (searchCriteria.frontal && !lesson.frontal)\r\n        )\r\n          return false;\r\n\r\n        if (Number(searchCriteria.units) > lesson.units) return false;\r\n        return true;\r\n      });\r\n      // Set search list in the filteredList\r\n      setFilteredLessons(getSortedLessones(filtered));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (lessonOptions !== null) {\r\n      handleSearch();\r\n    }\r\n  }, [lessonOptions, searchCriteria, sortCriteria, sortDirection]);\r\n\r\n  useEffect(() => {\r\n    if (lessonOptions === null) {\r\n      getTeachersLessonOptions();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h1>Search a Lesson</h1>\r\n        <div>\r\n          <SearchFilters\r\n            searchCriteria={searchCriteria}\r\n            setSearchCriteria={setSearchCriteria}\r\n            sortCriteria={sortCriteria}\r\n            setSortCriteria={setSortCriteria}\r\n            sortDirection={sortDirection}\r\n            setSortDirection={setSortDirection}\r\n            handleSearch={handleSearch}\r\n          ></SearchFilters>\r\n          {filteredLessons !== null && (\r\n            <LessonOptionsList\r\n              lessonOptions={filteredLessons}\r\n              onRegister={handleRegister}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeacherSearch;\r\n","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\PrivateLessones\\PL\\client\\gui\\src\\components\\UserHome\\UserHomePage.js",["168","169"],[],"C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\PrivateLessones\\PL\\client\\gui\\src\\components\\UserLessons\\Lessons.js",["170"],[],"import React, { useEffect, useState } from \"react\";\r\nimport TableDetails from \"../TableDetails/TableDetails\";\r\n\r\nconst Lessons = ({ userDetails }) => {\r\n  const [user] = useState(userDetails);\r\n  const [lessons, setLessons] = useState(null);\r\n  const [historylessons, setHistorylessons] = useState(null);\r\n\r\n  const getUserLessons = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://privatelessonsserver.azurewebsites.net/api/lessons/optional/${user.user_id}/${user.user_type}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        const responseData = await response.json();\r\n        if (responseData.length > 0) {\r\n          setLessons(responseData);\r\n        }\r\n      } else {\r\n        // console.log(\"Failed to load userLessons\");\r\n      }\r\n    } catch (error) {\r\n      // console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const getUserHistory = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://privatelessonsserver.azurewebsites.net/api/lessons/history/${user.user_id}/${user.user_type}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        const responseData = await response.json();\r\n        if (responseData.length > 0) {\r\n          setHistorylessons(responseData);\r\n        }\r\n      } else {\r\n        // console.log(\"Failed to load userHistory\");\r\n      }\r\n    } catch (error) {\r\n      // console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (lessons === null) {\r\n      getUserLessons();\r\n    }\r\n    if (historylessons === null) {\r\n      getUserHistory();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Lessons</h1>\r\n      <TableDetails\r\n        user={user}\r\n        lessons={lessons}\r\n        setLessons={setLessons}\r\n      ></TableDetails>\r\n      <h1>History</h1>\r\n      <TableDetails\r\n        user={user}\r\n        lessons={historylessons}\r\n        setLessons={setHistorylessons}\r\n      ></TableDetails>\r\n    </div>\r\n  );\r\n};\r\nexport default Lessons;\r\n","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\PrivateLessones\\PL\\client\\gui\\src\\components\\Teacher\\NewAbilityModal.js",[],[],"C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\PrivateLessones\\PL\\client\\gui\\src\\components\\Menu\\ResponsiveAppBar.js",["171"],[],"C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\Patient-Management\\client\\src\\index.js",[],[],[],"C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\Patient-Management\\client\\src\\App.js",["172"],[],"import React from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport UserHomePage from \"./components/UserHome/UserHomePage\";\r\n\r\nfunction App() {\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    navigate(\"/\");\r\n  }, []);\r\n\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/\" element={<UserHomePage></UserHomePage>} />\r\n      <Route path=\"/patients/:id\" />\r\n      <Route path=\"/statistics\" />\r\n    </Routes>\r\n  );\r\n}\r\nexport default App;\r\n","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\Patient-Management\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\Patient-Management\\client\\src\\components\\UserHome\\UserHomePage.js",["173","174","175"],[],"import React, { useState, useEffect } from \"react\";\r\nimport Menu from \"../Menu/Menu\";\r\n\r\nconst UserHomePage = () => {\r\n  const [user, setUser] = useState(null);\r\n  return (\r\n    <div>\r\n      <Menu></Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserHomePage;\r\n","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\Patient-Management\\client\\src\\components\\Menu\\Menu.js",["176"],[],"import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ResponsiveAppBar from \"./ResponsiveAppBar\";\r\nimport Patients from \"../patients/patients\";\r\n\r\nconst Menu = () => {\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div>\r\n      {/* Tabs navigation */}\r\n      <div>\r\n        {<ResponsiveAppBar setActiveTab={setActiveTab}></ResponsiveAppBar>}\r\n      </div>\r\n      {/* Tab content */}\r\n      <div>\r\n        {activeTab === 0}\r\n        {activeTab === 1 && <Patients></Patients>}\r\n        {activeTab === 2}\r\n        {activeTab === 3}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Menu;\r\n","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\Patient-Management\\client\\src\\components\\Menu\\ResponsiveAppBar.js",["177"],[],"import * as React from \"react\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport AdbIcon from \"@mui/icons-material/Adb\";\r\n\r\nconst menu = [\"User Details\", \"Patients\", \"Statistics\"];\r\nconst settings = [\"Logout\"];\r\n\r\nconst ResponsiveAppBar = ({ setActiveTab }) => {\r\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\r\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\r\n\r\n  const handleOpenNavMenu = (event) => {\r\n    setAnchorElNav(event.currentTarget);\r\n  };\r\n  const handleOpenUserMenu = (event) => {\r\n    setAnchorElUser(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseNavMenu = () => {\r\n    setAnchorElNav(null);\r\n  };\r\n\r\n  const handleCloseUserMenu = () => {\r\n    setAnchorElUser(null);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Container maxWidth=\"xl\">\r\n        <Toolbar disableGutters>\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"a\"\r\n            href=\"#app-bar-with-responsive-menu\"\r\n            sx={{\r\n              mr: 2,\r\n              display: { xs: \"none\", md: \"flex\" },\r\n              fontFamily: \"monospace\",\r\n              fontWeight: 700,\r\n              letterSpacing: \".3rem\",\r\n              color: \"inherit\",\r\n              textDecoration: \"none\",\r\n            }}\r\n          >\r\n            Patient-Management\r\n          </Typography>\r\n\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleOpenNavMenu}\r\n              color=\"inherit\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElNav}\r\n              anchorOrigin={{\r\n                vertical: \"bottom\",\r\n                horizontal: \"left\",\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"left\",\r\n              }}\r\n              open={Boolean(anchorElNav)}\r\n              onClose={handleCloseNavMenu}\r\n              sx={{\r\n                display: { xs: \"block\", md: \"none\" },\r\n              }}\r\n            >\r\n              {menu.map((page, index) => (\r\n                <MenuItem key={page} onClick={() => setActiveTab(index)}>\r\n                  <Typography textAlign=\"center\">{page}</Typography>\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </Box>\r\n\r\n          <Typography\r\n            variant=\"h5\"\r\n            noWrap\r\n            component=\"a\"\r\n            href=\"#app-bar-with-responsive-menu\"\r\n            sx={{\r\n              mr: 2,\r\n              display: { xs: \"flex\", md: \"none\" },\r\n              flexGrow: 1,\r\n              fontFamily: \"monospace\",\r\n              fontWeight: 700,\r\n              letterSpacing: \".3rem\",\r\n              color: \"inherit\",\r\n              textDecoration: \"none\",\r\n            }}\r\n          >\r\n            Patient-Management\r\n          </Typography>\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }}>\r\n            {menu.map((page, index) => (\r\n              <Button\r\n                key={page}\r\n                onClick={() => setActiveTab(index)}\r\n                sx={{ my: 2, color: \"white\", display: \"block\" }}\r\n              >\r\n                {page}\r\n              </Button>\r\n            ))}\r\n          </Box>\r\n\r\n          <Box sx={{ flexGrow: 0 }}>\r\n            <Tooltip title=\"Open settings\">\r\n              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\r\n                <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/2.jpg\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n              sx={{ mt: \"45px\" }}\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElUser}\r\n              anchorOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n              open={Boolean(anchorElUser)}\r\n              onClose={handleCloseUserMenu}\r\n            >\r\n              {settings.map((setting) => (\r\n                <MenuItem key={setting}>\r\n                  <Typography textAlign=\"center\">{setting}</Typography>\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </Box>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n};\r\nexport default ResponsiveAppBar;\r\n","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\Patient-Management\\client\\src\\components\\patients\\patients.js",[],[],"C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\Patient-Management\\client\\src\\components\\patients\\newPatientModal.js",[],[],"C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\Patient-Management\\client\\src\\components\\vaccinations\\vaccinations.js",["178","179","180","181"],[],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\n\r\nconst Vaccinations = ({ patient }) => {\r\n  const URL = \"http://localhost:3500/api/vaccinations/\";\r\n  const [vaccinationAddingMode, setVaccinationAddingMode] = useState(false);\r\n  const [newVaccination, setNewVaccination] = useState({\r\n    vac_date: \"\",\r\n    vac_manufacturer: \"\",\r\n  });\r\n  const [vaccinationList, setVaccinationList] = useState([]);\r\n\r\n  const getVaccinations = async () => {\r\n    if (patient.id != undefined) {\r\n      try {\r\n        const response = await fetch(`${URL}/${patient.id}`, {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n\r\n        if (response.ok) {\r\n          const responseData = await response.json();\r\n          if (responseData.length > 0) {\r\n            setVaccinationList([...responseData]);\r\n          }\r\n        } else {\r\n          setVaccinationList(null);\r\n        }\r\n      } catch (error) {\r\n        alert(\r\n          `Error fetching Vaccinations's list of patient with id: ${patient.id}`\r\n        );\r\n      }\r\n    } else {\r\n      setVaccinationList(null);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Get patients from the server\r\n    getVaccinations();\r\n  }, [patient]);\r\n\r\n  const handleInputChangeVac = (event) => {\r\n    const { name, value } = event.target;\r\n    const finalValue = value;\r\n    setNewVaccination((prev) => ({ ...prev, [name]: finalValue }));\r\n  };\r\n\r\n  const addVaccination = async () => {\r\n    if (patient.id == undefined) {\r\n      alert(\"Please fill the personal details first\");\r\n      return;\r\n    }\r\n    try {\r\n      const response = await fetch(`${URL}/${patient.id}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(newVaccination),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setVaccinationList((prevVaccinationList) => [\r\n          ...prevVaccinationList,\r\n          newVaccination,\r\n        ]);\r\n        setVaccinationAddingMode(false);\r\n      } else {\r\n        // Handle duplicate entry error\r\n        if (response.status === 409) {\r\n          alert(\"Vaccination is already exists\");\r\n        } else {\r\n          // Handle other server-side errors\r\n          alert(\r\n            \"An error occurred while adding the new Vaccination. Please try again.\"\r\n          );\r\n        }\r\n      }\r\n    } catch (error) {\r\n      alert(\r\n        \"A network error occurred. Please check your internet connection and try again.\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const deleteVaccination = async (id, index) => {\r\n    try {\r\n      const response = await fetch(`${URL}/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        // Remove ability from local state as well\r\n        const newVaccinationsList = [...vaccinationList];\r\n        newVaccinationsList.splice(index, 1);\r\n        setVaccinationList(newVaccinationsList);\r\n      } else {\r\n        alert(\r\n          \"An error occurred while deleting the patient. Please try again.\"\r\n        );\r\n      }\r\n    } catch (error) {\r\n      alert(\r\n        \"A network error occurred. Please check your internet connection and try again.\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const formattedDate = (date) => {\r\n    return new Date(date).toLocaleDateString(\"en-US\", {\r\n      year: \"numeric\",\r\n      month: \"2-digit\",\r\n      day: \"2-digit\",\r\n    });\r\n  };\r\n\r\n  const legalDate = (inputDate) => {\r\n    const date = new Date(inputDate);\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, \"0\"); // Months are 0-indexed, so we add 1\r\n    const day = String(date.getDate()).padStart(2, \"0\");\r\n    return `${year}-${month}-${day}`;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h2>{\"Vaccinations List\"}</h2>\r\n        <TableContainer sx={{ maxWidth: 850 }} component={Paper}>\r\n          <Table sx={{ maxWidth: 850 }} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"left\">Received on</TableCell>\r\n                <TableCell align=\"left\">Manufacturer</TableCell>\r\n                <TableCell align=\"left\">Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {vaccinationList &&\r\n                Array.isArray(vaccinationList) &&\r\n                vaccinationList.map((vaccination, index) => {\r\n                  return (\r\n                    <TableRow\r\n                      key={index}\r\n                      sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                    >\r\n                      <TableCell align=\"left\">\r\n                        {formattedDate(vaccination.vac_date)}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        {vaccination.vac_manufacturer}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        <IconButton\r\n                          aria-label=\"delete\"\r\n                          color=\"error\"\r\n                          onClick={() => {\r\n                            deleteVaccination(vaccination.id, index);\r\n                          }}\r\n                        >\r\n                          <DeleteIcon />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <div>\r\n          {vaccinationAddingMode && (\r\n            <div>\r\n              <div>\r\n                <label>Received on:</label>\r\n                <input\r\n                  name=\"vac_date\"\r\n                  type=\"date\"\r\n                  value={newVaccination.vac_date}\r\n                  onChange={handleInputChangeVac}\r\n                />\r\n              </div>\r\n              <div>\r\n                <label>Manufacturer:</label>\r\n                <input\r\n                  name=\"vac_manufacturer\"\r\n                  type=\"text\"\r\n                  value={newVaccination.vac_manufacturer}\r\n                  onChange={handleInputChangeVac}\r\n                />\r\n              </div>\r\n              <div>\r\n                <button\r\n                  onClick={() => {\r\n                    addVaccination();\r\n                  }}\r\n                >\r\n                  +\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <IconButton\r\n            aria-label=\"cancel\"\r\n            color=\"primary\"\r\n            disabled={vaccinationList && vaccinationList.length >= 4}\r\n            onClick={() => {\r\n              setVaccinationAddingMode(true);\r\n            }}\r\n          >\r\n            <AddIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Vaccinations;\r\n",{"ruleId":"182","severity":1,"message":"183","line":13,"column":6,"nodeType":"184","endLine":13,"endColumn":8,"suggestions":"185"},{"ruleId":"186","severity":1,"message":"187","line":2,"column":10,"nodeType":"188","messageId":"189","endLine":2,"endColumn":22},{"ruleId":"186","severity":1,"message":"190","line":2,"column":24,"nodeType":"188","messageId":"189","endLine":2,"endColumn":38},{"ruleId":"186","severity":1,"message":"191","line":7,"column":10,"nodeType":"188","messageId":"189","endLine":7,"endColumn":14},{"ruleId":"182","severity":1,"message":"192","line":87,"column":6,"nodeType":"184","endLine":87,"endColumn":8,"suggestions":"193"},{"ruleId":"182","severity":1,"message":"194","line":108,"column":6,"nodeType":"184","endLine":108,"endColumn":8,"suggestions":"195"},{"ruleId":"182","severity":1,"message":"196","line":225,"column":6,"nodeType":"184","endLine":225,"endColumn":8,"suggestions":"197"},{"ruleId":"182","severity":1,"message":"198","line":690,"column":5,"nodeType":"184","endLine":690,"endColumn":17,"suggestions":"199"},{"ruleId":"186","severity":1,"message":"200","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":26},{"ruleId":"186","severity":1,"message":"201","line":1,"column":28,"nodeType":"188","messageId":"189","endLine":1,"endColumn":36},{"ruleId":"186","severity":1,"message":"202","line":26,"column":25,"nodeType":"188","messageId":"189","endLine":26,"endColumn":36},{"ruleId":"186","severity":1,"message":"201","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":25},{"ruleId":"186","severity":1,"message":"200","line":1,"column":27,"nodeType":"188","messageId":"189","endLine":1,"endColumn":36},{"ruleId":"182","severity":1,"message":"203","line":176,"column":6,"nodeType":"184","endLine":176,"endColumn":66,"suggestions":"204"},{"ruleId":"182","severity":1,"message":"205","line":182,"column":6,"nodeType":"184","endLine":182,"endColumn":8,"suggestions":"206"},{"ruleId":"186","severity":1,"message":"207","line":3,"column":8,"nodeType":"188","messageId":"189","endLine":3,"endColumn":24},{"ruleId":"182","severity":1,"message":"208","line":33,"column":6,"nodeType":"184","endLine":33,"endColumn":8,"suggestions":"209"},{"ruleId":"182","severity":1,"message":"210","line":66,"column":6,"nodeType":"184","endLine":66,"endColumn":8,"suggestions":"211"},{"ruleId":"186","severity":1,"message":"212","line":14,"column":8,"nodeType":"188","messageId":"189","endLine":14,"endColumn":15},{"ruleId":"182","severity":1,"message":"183","line":11,"column":6,"nodeType":"184","endLine":11,"endColumn":8,"suggestions":"213"},{"ruleId":"186","severity":1,"message":"200","line":1,"column":27,"nodeType":"188","messageId":"189","endLine":1,"endColumn":36},{"ruleId":"186","severity":1,"message":"191","line":5,"column":10,"nodeType":"188","messageId":"189","endLine":5,"endColumn":14},{"ruleId":"186","severity":1,"message":"214","line":5,"column":16,"nodeType":"188","messageId":"189","endLine":5,"endColumn":23},{"ruleId":"186","severity":1,"message":"215","line":8,"column":9,"nodeType":"188","messageId":"189","endLine":8,"endColumn":17},{"ruleId":"186","severity":1,"message":"212","line":14,"column":8,"nodeType":"188","messageId":"189","endLine":14,"endColumn":15},{"ruleId":"216","severity":1,"message":"217","line":24,"column":20,"nodeType":"218","messageId":"219","endLine":24,"endColumn":22},{"ruleId":"182","severity":1,"message":"220","line":54,"column":6,"nodeType":"184","endLine":54,"endColumn":15,"suggestions":"221"},{"ruleId":"216","severity":1,"message":"222","line":63,"column":20,"nodeType":"218","messageId":"219","endLine":63,"endColumn":22},{"ruleId":"186","severity":1,"message":"223","line":134,"column":9,"nodeType":"188","messageId":"189","endLine":134,"endColumn":18},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["224"],"no-unused-vars","'googleLogout' is defined but never used.","Identifier","unusedVar","'useGoogleLogin' is defined but never used.","'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUserInfo'. Either include it or remove the dependency array.",["225"],"React Hook useEffect has a missing dependency: 'user.user_id'. Either include it or remove the dependency array.",["226"],"React Hook useEffect has missing dependencies: 'fetchLessonAbilities', 'fetchLessonsData', 'fetchTimeAbilities', 'lessonAbilityInitialLoadComplete', 'lessonInitialLoadComplete', 'timeAbilityInitialLoadComplete', and 'user.user_type'. Either include them or remove the dependency array.",["227"],"React Hook useCallback has an unnecessary dependency: 'isReadOnly'. Either exclude it or remove the dependency array.",["228"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'newRecordId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleSearch'. Either include it or remove the dependency array.",["229"],"React Hook useEffect has a missing dependency: 'lessonOptions'. Either include it or remove the dependency array.",["230"],"'ResponsiveAppBar' is defined but never used.","React Hook useEffect has a missing dependency: 'initialLoadComplete'. Either include it or remove the dependency array.",["231"],"React Hook useEffect has missing dependencies: 'getUserHistory', 'getUserLessons', 'historylessons', and 'lessons'. Either include them or remove the dependency array.",["232"],"'AdbIcon' is defined but never used.",["233"],"'setUser' is assigned a value but never used.","'navigate' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'getVaccinations'. Either include it or remove the dependency array.",["234"],"Expected '===' and instead saw '=='.","'legalDate' is assigned a value but never used.",{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"235","fix":"253"},{"desc":"254","fix":"255"},"Update the dependencies array to be: [navigate]",{"range":"256","text":"257"},"Update the dependencies array to be: [getUserInfo]",{"range":"258","text":"259"},"Update the dependencies array to be: [user.user_id]",{"range":"260","text":"261"},"Update the dependencies array to be: [fetchLessonAbilities, fetchLessonsData, fetchTimeAbilities, lessonAbilityInitialLoadComplete, lessonInitialLoadComplete, timeAbilityInitialLoadComplete, user.user_type]",{"range":"262","text":"263"},"Update the dependencies array to be: []",{"range":"264","text":"265"},"Update the dependencies array to be: [handleSearch, lessonOptions, searchCriteria, sortCriteria, sortDirection]",{"range":"266","text":"267"},"Update the dependencies array to be: [lessonOptions]",{"range":"268","text":"269"},"Update the dependencies array to be: [initialLoadComplete]",{"range":"270","text":"271"},"Update the dependencies array to be: [getUserHistory, getUserLessons, historylessons, lessons]",{"range":"272","text":"273"},{"range":"274","text":"257"},"Update the dependencies array to be: [getVaccinations, patient]",{"range":"275","text":"276"},[460,462],"[navigate]",[2941,2943],"[getUserInfo]",[3734,3736],"[user.user_id]",[7613,7615],"[fetchLessonAbilities, fetchLessonsData, fetchTimeAbilities, lessonAbilityInitialLoadComplete, lessonInitialLoadComplete, timeAbilityInitialLoadComplete, user.user_type]",[23318,23330],"[]",[5379,5439],"[handleSearch, lessonOptions, searchCriteria, sortCriteria, sortDirection]",[5548,5550],"[lessonOptions]",[1243,1245],"[initialLoadComplete]",[1845,1847],"[getUserHistory, getUserLessons, historylessons, lessons]",[329,331],[1735,1744],"[getVaccinations, patient]"]