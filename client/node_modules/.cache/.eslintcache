[{"C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\Patient-Management\\client\\src\\index.js":"1","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\Patient-Management\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\Patient-Management\\client\\src\\App.js":"3","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\Patient-Management\\client\\src\\components\\UserHome\\UserHomePage.js":"4","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\Patient-Management\\client\\src\\components\\Menu\\Menu.js":"5","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\Patient-Management\\client\\src\\components\\Menu\\ResponsiveAppBar.js":"6","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\Patient-Management\\client\\src\\components\\patients\\patients.js":"7","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\Patient-Management\\client\\src\\components\\patients\\newPatientModal.js":"8","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\Patient-Management\\client\\src\\components\\vaccinations\\vaccinations.js":"9","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\Patient-Management\\client\\src\\components\\statistics\\BasicLineChart.js":"10","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\Patient-Management\\client\\src\\components\\statistics\\Statistics.js":"11"},{"size":574,"mtime":1711472139684,"results":"12","hashOfConfig":"13"},{"size":375,"mtime":1711472139684,"results":"14","hashOfConfig":"13"},{"size":548,"mtime":1711472139680,"results":"15","hashOfConfig":"13"},{"size":260,"mtime":1711472139682,"results":"16","hashOfConfig":"13"},{"size":770,"mtime":1711501372745,"results":"17","hashOfConfig":"13"},{"size":5157,"mtime":1711472139682,"results":"18","hashOfConfig":"13"},{"size":8299,"mtime":1711501372747,"results":"19","hashOfConfig":"13"},{"size":13307,"mtime":1711501372746,"results":"20","hashOfConfig":"13"},{"size":7432,"mtime":1711501372750,"results":"21","hashOfConfig":"13"},{"size":1654,"mtime":1711501372748,"results":"22","hashOfConfig":"13"},{"size":381,"mtime":1711501372749,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tyxriq",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},"C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\Patient-Management\\client\\src\\index.js",[],[],"C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\Patient-Management\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\Patient-Management\\client\\src\\App.js",["64"],[],"import React from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport UserHomePage from \"./components/UserHome/UserHomePage\";\r\n\r\nfunction App() {\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    navigate(\"/\");\r\n  }, []);\r\n\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/\" element={<UserHomePage></UserHomePage>} />\r\n      <Route path=\"/patients/:id\" />\r\n      <Route path=\"/statistics\" />\r\n    </Routes>\r\n  );\r\n}\r\nexport default App;\r\n","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\Patient-Management\\client\\src\\components\\UserHome\\UserHomePage.js",["65","66","67"],[],"import React, { useState, useEffect } from \"react\";\r\nimport Menu from \"../Menu/Menu\";\r\n\r\nconst UserHomePage = () => {\r\n  const [user, setUser] = useState(null);\r\n  return (\r\n    <div>\r\n      <Menu></Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserHomePage;\r\n","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\Patient-Management\\client\\src\\components\\Menu\\Menu.js",["68"],[],"import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ResponsiveAppBar from \"./ResponsiveAppBar\";\r\nimport Patients from \"../patients/patients\";\r\nimport Statistics from \"../statistics/Statistics\";\r\n\r\nconst Menu = () => {\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div>\r\n      {/* Tabs navigation */}\r\n      <div>\r\n        {<ResponsiveAppBar setActiveTab={setActiveTab}></ResponsiveAppBar>}\r\n      </div>\r\n      {/* Tab content */}\r\n      <div>\r\n        {activeTab === 0}\r\n        {activeTab === 1 && <Patients></Patients>}\r\n        {activeTab === 2 && <Statistics></Statistics>}\r\n        {activeTab === 3}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Menu;\r\n","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\Patient-Management\\client\\src\\components\\Menu\\ResponsiveAppBar.js",["69"],[],"import * as React from \"react\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport AdbIcon from \"@mui/icons-material/Adb\";\r\n\r\nconst menu = [\"User Details\", \"Patients\", \"Statistics\"];\r\nconst settings = [\"Logout\"];\r\n\r\nconst ResponsiveAppBar = ({ setActiveTab }) => {\r\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\r\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\r\n\r\n  const handleOpenNavMenu = (event) => {\r\n    setAnchorElNav(event.currentTarget);\r\n  };\r\n  const handleOpenUserMenu = (event) => {\r\n    setAnchorElUser(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseNavMenu = () => {\r\n    setAnchorElNav(null);\r\n  };\r\n\r\n  const handleCloseUserMenu = () => {\r\n    setAnchorElUser(null);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Container maxWidth=\"xl\">\r\n        <Toolbar disableGutters>\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"a\"\r\n            href=\"#app-bar-with-responsive-menu\"\r\n            sx={{\r\n              mr: 2,\r\n              display: { xs: \"none\", md: \"flex\" },\r\n              fontFamily: \"monospace\",\r\n              fontWeight: 700,\r\n              letterSpacing: \".3rem\",\r\n              color: \"inherit\",\r\n              textDecoration: \"none\",\r\n            }}\r\n          >\r\n            Patient-Management\r\n          </Typography>\r\n\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleOpenNavMenu}\r\n              color=\"inherit\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElNav}\r\n              anchorOrigin={{\r\n                vertical: \"bottom\",\r\n                horizontal: \"left\",\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"left\",\r\n              }}\r\n              open={Boolean(anchorElNav)}\r\n              onClose={handleCloseNavMenu}\r\n              sx={{\r\n                display: { xs: \"block\", md: \"none\" },\r\n              }}\r\n            >\r\n              {menu.map((page, index) => (\r\n                <MenuItem key={page} onClick={() => setActiveTab(index)}>\r\n                  <Typography textAlign=\"center\">{page}</Typography>\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </Box>\r\n\r\n          <Typography\r\n            variant=\"h5\"\r\n            noWrap\r\n            component=\"a\"\r\n            href=\"#app-bar-with-responsive-menu\"\r\n            sx={{\r\n              mr: 2,\r\n              display: { xs: \"flex\", md: \"none\" },\r\n              flexGrow: 1,\r\n              fontFamily: \"monospace\",\r\n              fontWeight: 700,\r\n              letterSpacing: \".3rem\",\r\n              color: \"inherit\",\r\n              textDecoration: \"none\",\r\n            }}\r\n          >\r\n            Patient-Management\r\n          </Typography>\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }}>\r\n            {menu.map((page, index) => (\r\n              <Button\r\n                key={page}\r\n                onClick={() => setActiveTab(index)}\r\n                sx={{ my: 2, color: \"white\", display: \"block\" }}\r\n              >\r\n                {page}\r\n              </Button>\r\n            ))}\r\n          </Box>\r\n\r\n          <Box sx={{ flexGrow: 0 }}>\r\n            <Tooltip title=\"Open settings\">\r\n              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\r\n                <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/2.jpg\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n              sx={{ mt: \"45px\" }}\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElUser}\r\n              anchorOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n              open={Boolean(anchorElUser)}\r\n              onClose={handleCloseUserMenu}\r\n            >\r\n              {settings.map((setting) => (\r\n                <MenuItem key={setting}>\r\n                  <Typography textAlign=\"center\">{setting}</Typography>\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </Box>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n};\r\nexport default ResponsiveAppBar;\r\n","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\Patient-Management\\client\\src\\components\\patients\\patients.js",[],[],"C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\Patient-Management\\client\\src\\components\\patients\\newPatientModal.js",[],[],"C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\Patient-Management\\client\\src\\components\\vaccinations\\vaccinations.js",["70","71","72","73"],[],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\n\r\nconst Vaccinations = ({ patient }) => {\r\n  const URL = \"http://localhost:3500/api/vaccinations/\";\r\n  const [vaccinationAddingMode, setVaccinationAddingMode] = useState(false);\r\n  const [newVaccination, setNewVaccination] = useState({\r\n    vac_date: \"\",\r\n    vac_manufacturer: \"\",\r\n  });\r\n  const [vaccinationList, setVaccinationList] = useState([]);\r\n\r\n  const getVaccinations = async () => {\r\n    if (patient.id != undefined) {\r\n      try {\r\n        const response = await fetch(`${URL}/${patient.id}`, {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n\r\n        if (response.ok) {\r\n          const responseData = await response.json();\r\n          if (responseData.length > 0) {\r\n            setVaccinationList([...responseData]);\r\n          }\r\n        } else {\r\n          setVaccinationList(null);\r\n        }\r\n      } catch (error) {\r\n        alert(\r\n          `Error fetching Vaccinations's list of patient with id: ${patient.id}`\r\n        );\r\n      }\r\n    } else {\r\n      setVaccinationList(null);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Get patients from the server\r\n    getVaccinations();\r\n  }, [patient]);\r\n\r\n  const handleInputChangeVac = (event) => {\r\n    const { name, value } = event.target;\r\n    const finalValue = value;\r\n    setNewVaccination((prev) => ({ ...prev, [name]: finalValue }));\r\n  };\r\n\r\n  const addVaccination = async () => {\r\n    if (patient.id == undefined) {\r\n      alert(\"Please fill the personal details first\");\r\n      return;\r\n    }\r\n    try {\r\n      const response = await fetch(`${URL}/${patient.id}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(newVaccination),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setVaccinationList((prevVaccinationList) => [\r\n          ...prevVaccinationList,\r\n          newVaccination,\r\n        ]);\r\n        setVaccinationAddingMode(false);\r\n      } else {\r\n        // Handle duplicate entry error\r\n        if (response.status === 409) {\r\n          alert(\"Vaccination is already exists\");\r\n        } else {\r\n          // Handle other server-side errors\r\n          alert(\r\n            \"An error occurred while adding the new Vaccination. Please try again.\"\r\n          );\r\n        }\r\n      }\r\n    } catch (error) {\r\n      alert(\r\n        \"A network error occurred. Please check your internet connection and try again.\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const deleteVaccination = async (id, index) => {\r\n    try {\r\n      const response = await fetch(`${URL}/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        // Remove ability from local state as well\r\n        const newVaccinationsList = [...vaccinationList];\r\n        newVaccinationsList.splice(index, 1);\r\n        setVaccinationList(newVaccinationsList);\r\n      } else {\r\n        alert(\r\n          \"An error occurred while deleting the patient. Please try again.\"\r\n        );\r\n      }\r\n    } catch (error) {\r\n      alert(\r\n        \"A network error occurred. Please check your internet connection and try again.\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const formattedDate = (date) => {\r\n    return new Date(date).toLocaleDateString(\"en-US\", {\r\n      year: \"numeric\",\r\n      month: \"2-digit\",\r\n      day: \"2-digit\",\r\n    });\r\n  };\r\n\r\n  const legalDate = (inputDate) => {\r\n    const date = new Date(inputDate);\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, \"0\"); // Months are 0-indexed, so we add 1\r\n    const day = String(date.getDate()).padStart(2, \"0\");\r\n    return `${year}-${month}-${day}`;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h2>{\"Vaccinations List\"}</h2>\r\n        <TableContainer sx={{ maxWidth: 850 }} component={Paper}>\r\n          <Table sx={{ maxWidth: 850 }} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"left\">Received on</TableCell>\r\n                <TableCell align=\"left\">Manufacturer</TableCell>\r\n                <TableCell align=\"left\">Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {vaccinationList &&\r\n                Array.isArray(vaccinationList) &&\r\n                vaccinationList.map((vaccination, index) => {\r\n                  return (\r\n                    <TableRow\r\n                      key={index}\r\n                      sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                    >\r\n                      <TableCell align=\"left\">\r\n                        {formattedDate(vaccination.vac_date)}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        {vaccination.vac_manufacturer}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        <IconButton\r\n                          aria-label=\"delete\"\r\n                          color=\"error\"\r\n                          onClick={() => {\r\n                            deleteVaccination(vaccination.id, index);\r\n                          }}\r\n                        >\r\n                          <DeleteIcon />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <div>\r\n          {vaccinationAddingMode && (\r\n            <div>\r\n              <div>\r\n                <label>Received on:</label>\r\n                <input\r\n                  name=\"vac_date\"\r\n                  type=\"date\"\r\n                  value={newVaccination.vac_date}\r\n                  onChange={handleInputChangeVac}\r\n                />\r\n              </div>\r\n              <div>\r\n                <label>Manufacturer:</label>\r\n                <input\r\n                  name=\"vac_manufacturer\"\r\n                  type=\"text\"\r\n                  value={newVaccination.vac_manufacturer}\r\n                  onChange={handleInputChangeVac}\r\n                />\r\n              </div>\r\n              <div>\r\n                <button\r\n                  onClick={() => {\r\n                    addVaccination();\r\n                  }}\r\n                >\r\n                  Save\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <IconButton\r\n            aria-label=\"Add Vaccination\"\r\n            color=\"primary\"\r\n            disabled={vaccinationList && vaccinationList.length >= 4}\r\n            onClick={() => {\r\n              setVaccinationAddingMode(true);\r\n            }}\r\n          >\r\n            <AddIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Vaccinations;\r\n","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\Patient-Management\\client\\src\\components\\statistics\\BasicLineChart.js",["74"],[],"import { useState, useEffect } from \"react\";\r\nimport { LineChart } from \"@mui/x-charts/LineChart\";\r\n\r\nconst BasicLineChart = () => {\r\n  const URL = \"http://localhost:3500/api/statistics/activePatients\";\r\n  const [xVals, setXVals] = useState(null);\r\n  const [yVals, setYVals] = useState(null);\r\n\r\n  const getLegalDates = (datesList) => {\r\n    const newList = [];\r\n    datesList.forEach((element) => {\r\n      const date = new Date(element);\r\n      const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n      const day = String(date.getDate()).padStart(2, \"0\");\r\n      newList.push(`${day}/${month}`);\r\n    });\r\n    console.log(newList);\r\n    return newList;\r\n  };\r\n\r\n  const getActivePatients = async () => {\r\n    try {\r\n      const response = await fetch(`${URL}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      if (response.ok) {\r\n        const responseData = await response.json();\r\n        setXVals(getLegalDates(responseData.dates));\r\n        setYVals(responseData.activePatientsCount);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error fetching data\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getActivePatients();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {xVals != null && yVals != null && (\r\n        <LineChart\r\n          xAxis={[{ scaleType: \"point\", data: xVals, label: \"Day In Month\" }]}\r\n          series={[\r\n            {\r\n              data: yVals,\r\n              label: \"Active Patients\",\r\n            },\r\n          ]}\r\n          width={800}\r\n          height={500}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default BasicLineChart;\r\n","C:\\Users\\Michal Abargel\\Desktop\\FULLSTACK_PROJECTS\\Patient-Management\\client\\src\\components\\statistics\\Statistics.js",["75","76"],[],"import React, { useState, useEffect } from \"react\";\r\nimport BasicLineChart from \"./BasicLineChart\";\r\nimport { Typography } from \"@mui/material\";\r\n\r\nconst Statistics = () => {\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h3\" align=\"center\">\r\n        Statistics\r\n      </Typography>\r\n      <BasicLineChart></BasicLineChart>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n",{"ruleId":"77","severity":1,"message":"78","line":11,"column":6,"nodeType":"79","endLine":11,"endColumn":8,"suggestions":"80"},{"ruleId":"81","severity":1,"message":"82","line":1,"column":27,"nodeType":"83","messageId":"84","endLine":1,"endColumn":36},{"ruleId":"81","severity":1,"message":"85","line":5,"column":10,"nodeType":"83","messageId":"84","endLine":5,"endColumn":14},{"ruleId":"81","severity":1,"message":"86","line":5,"column":16,"nodeType":"83","messageId":"84","endLine":5,"endColumn":23},{"ruleId":"81","severity":1,"message":"87","line":9,"column":9,"nodeType":"83","messageId":"84","endLine":9,"endColumn":17},{"ruleId":"81","severity":1,"message":"88","line":14,"column":8,"nodeType":"83","messageId":"84","endLine":14,"endColumn":15},{"ruleId":"89","severity":1,"message":"90","line":24,"column":20,"nodeType":"91","messageId":"92","endLine":24,"endColumn":22},{"ruleId":"77","severity":1,"message":"93","line":54,"column":6,"nodeType":"79","endLine":54,"endColumn":15,"suggestions":"94"},{"ruleId":"89","severity":1,"message":"95","line":63,"column":20,"nodeType":"91","messageId":"92","endLine":63,"endColumn":22},{"ruleId":"81","severity":1,"message":"96","line":134,"column":9,"nodeType":"83","messageId":"84","endLine":134,"endColumn":18},{"ruleId":"77","severity":1,"message":"97","line":41,"column":6,"nodeType":"79","endLine":41,"endColumn":8,"suggestions":"98"},{"ruleId":"81","severity":1,"message":"99","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":25},{"ruleId":"81","severity":1,"message":"82","line":1,"column":27,"nodeType":"83","messageId":"84","endLine":1,"endColumn":36},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["100"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'navigate' is assigned a value but never used.","'AdbIcon' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'getVaccinations'. Either include it or remove the dependency array.",["101"],"Expected '===' and instead saw '=='.","'legalDate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getActivePatients'. Either include it or remove the dependency array.",["102"],"'useState' is defined but never used.",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [navigate]",{"range":"109","text":"110"},"Update the dependencies array to be: [getVaccinations, patient]",{"range":"111","text":"112"},"Update the dependencies array to be: [getActivePatients]",{"range":"113","text":"114"},[329,331],"[navigate]",[1735,1744],"[getVaccinations, patient]",[1223,1225],"[getActivePatients]"]