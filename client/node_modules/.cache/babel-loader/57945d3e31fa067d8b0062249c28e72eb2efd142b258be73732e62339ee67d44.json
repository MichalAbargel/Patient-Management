{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/scheduler/resources/m_agenda_resource_processor.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { wrapToArray } from \"../../../core/utils/array\";\nimport { Deferred, when } from \"../../../core/utils/deferred\";\nimport { getDisplayExpr, getFieldExpr, getValueExpr, getWrappedDataSource } from \"./m_utils\";\nclass PromiseItem {\n  constructor(rawAppointment, promise) {\n    this.rawAppointment = rawAppointment;\n    this.promise = promise;\n  }\n}\nexport class AgendaResourceProcessor {\n  constructor() {\n    var resourceDeclarations = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];\n    this._resourceDeclarations = resourceDeclarations;\n    this.isLoaded = false;\n    this.isLoading = false;\n    this.resourceMap = new Map();\n    this.appointmentPromiseQueue = [];\n  }\n  get resourceDeclarations() {\n    return this._resourceDeclarations;\n  }\n  set resourceDeclarations(value) {\n    this._resourceDeclarations = value;\n    this.isLoaded = false;\n    this.isLoading = false;\n    this.resourceMap.clear();\n    this.appointmentPromiseQueue = [];\n  }\n  _pushAllResources() {\n    this.appointmentPromiseQueue.forEach(_ref => {\n      var {\n        promise: promise,\n        rawAppointment: rawAppointment\n      } = _ref;\n      var result = [];\n      this.resourceMap.forEach((resource, fieldName) => {\n        var item = {\n          label: resource.label,\n          values: []\n        };\n        if (fieldName in rawAppointment) {\n          wrapToArray(rawAppointment[fieldName]).forEach(value => item.values.push(resource.map.get(value)));\n        }\n        if (item.values.length) {\n          result.push(item);\n        }\n      });\n      promise.resolve(result);\n    });\n    this.appointmentPromiseQueue = [];\n  }\n  _onPullResource(fieldName, valueName, displayName, label, items) {\n    var map = new Map();\n    items.forEach(item => map.set(item[valueName], item[displayName]));\n    this.resourceMap.set(fieldName, {\n      label: label,\n      map: map\n    });\n  }\n  _hasResourceDeclarations(resources) {\n    if (0 === resources.length) {\n      this.appointmentPromiseQueue.forEach(_ref2 => {\n        var {\n          promise: promise\n        } = _ref2;\n        return promise.resolve([]);\n      });\n      this.appointmentPromiseQueue = [];\n      return false;\n    }\n    return true;\n  }\n  _tryPullResources(resources, resultAsync) {\n    if (!this.isLoading) {\n      this.isLoading = true;\n      var promises = [];\n      resources.forEach(resource => {\n        var promise = new Deferred().done(items => this._onPullResource(getFieldExpr(resource), getValueExpr(resource), getDisplayExpr(resource), resource.label, items));\n        promises.push(promise);\n        var dataSource = getWrappedDataSource(resource.dataSource);\n        if (dataSource.isLoaded()) {\n          promise.resolve(dataSource.items());\n        } else {\n          dataSource.load().done(list => promise.resolve(list)).fail(() => promise.reject());\n        }\n      });\n      when.apply(null, promises).done(() => {\n        this.isLoaded = true;\n        this.isLoading = false;\n        this._pushAllResources();\n      }).fail(() => resultAsync.reject());\n    }\n  }\n  initializeState() {\n    var resourceDeclarations = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];\n    this.resourceDeclarations = resourceDeclarations;\n  }\n  createListAsync(rawAppointment) {\n    var resultAsync = new Deferred();\n    this.appointmentPromiseQueue.push(new PromiseItem(rawAppointment, resultAsync));\n    if (this._hasResourceDeclarations(this.resourceDeclarations)) {\n      if (this.isLoaded) {\n        this._pushAllResources();\n      } else {\n        this._tryPullResources(this.resourceDeclarations, resultAsync);\n      }\n    }\n    return resultAsync.promise();\n  }\n}","map":{"version":3,"names":["wrapToArray","Deferred","when","getDisplayExpr","getFieldExpr","getValueExpr","getWrappedDataSource","PromiseItem","constructor","rawAppointment","promise","AgendaResourceProcessor","resourceDeclarations","arguments","length","_resourceDeclarations","isLoaded","isLoading","resourceMap","Map","appointmentPromiseQueue","value","clear","_pushAllResources","forEach","_ref","result","resource","fieldName","item","label","values","push","map","get","resolve","_onPullResource","valueName","displayName","items","set","_hasResourceDeclarations","resources","_ref2","_tryPullResources","resultAsync","promises","done","dataSource","load","list","fail","reject","apply","initializeState","createListAsync"],"sources":["C:/Users/Michal Abargel/Desktop/FULLSTACK_PROJECTS/PrivateLessones/F(x)/client/gui/node_modules/devextreme/esm/__internal/scheduler/resources/m_agenda_resource_processor.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/scheduler/resources/m_agenda_resource_processor.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    wrapToArray\r\n} from \"../../../core/utils/array\";\r\nimport {\r\n    Deferred,\r\n    when\r\n} from \"../../../core/utils/deferred\";\r\nimport {\r\n    getDisplayExpr,\r\n    getFieldExpr,\r\n    getValueExpr,\r\n    getWrappedDataSource\r\n} from \"./m_utils\";\r\nclass PromiseItem {\r\n    constructor(rawAppointment, promise) {\r\n        this.rawAppointment = rawAppointment;\r\n        this.promise = promise\r\n    }\r\n}\r\nexport class AgendaResourceProcessor {\r\n    constructor() {\r\n        var resourceDeclarations = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];\r\n        this._resourceDeclarations = resourceDeclarations;\r\n        this.isLoaded = false;\r\n        this.isLoading = false;\r\n        this.resourceMap = new Map;\r\n        this.appointmentPromiseQueue = []\r\n    }\r\n    get resourceDeclarations() {\r\n        return this._resourceDeclarations\r\n    }\r\n    set resourceDeclarations(value) {\r\n        this._resourceDeclarations = value;\r\n        this.isLoaded = false;\r\n        this.isLoading = false;\r\n        this.resourceMap.clear();\r\n        this.appointmentPromiseQueue = []\r\n    }\r\n    _pushAllResources() {\r\n        this.appointmentPromiseQueue.forEach(_ref => {\r\n            var {\r\n                promise: promise,\r\n                rawAppointment: rawAppointment\r\n            } = _ref;\r\n            var result = [];\r\n            this.resourceMap.forEach((resource, fieldName) => {\r\n                var item = {\r\n                    label: resource.label,\r\n                    values: []\r\n                };\r\n                if (fieldName in rawAppointment) {\r\n                    wrapToArray(rawAppointment[fieldName]).forEach(value => item.values.push(resource.map.get(value)))\r\n                }\r\n                if (item.values.length) {\r\n                    result.push(item)\r\n                }\r\n            });\r\n            promise.resolve(result)\r\n        });\r\n        this.appointmentPromiseQueue = []\r\n    }\r\n    _onPullResource(fieldName, valueName, displayName, label, items) {\r\n        var map = new Map;\r\n        items.forEach(item => map.set(item[valueName], item[displayName]));\r\n        this.resourceMap.set(fieldName, {\r\n            label: label,\r\n            map: map\r\n        })\r\n    }\r\n    _hasResourceDeclarations(resources) {\r\n        if (0 === resources.length) {\r\n            this.appointmentPromiseQueue.forEach(_ref2 => {\r\n                var {\r\n                    promise: promise\r\n                } = _ref2;\r\n                return promise.resolve([])\r\n            });\r\n            this.appointmentPromiseQueue = [];\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n    _tryPullResources(resources, resultAsync) {\r\n        if (!this.isLoading) {\r\n            this.isLoading = true;\r\n            var promises = [];\r\n            resources.forEach(resource => {\r\n                var promise = (new Deferred).done(items => this._onPullResource(getFieldExpr(resource), getValueExpr(resource), getDisplayExpr(resource), resource.label, items));\r\n                promises.push(promise);\r\n                var dataSource = getWrappedDataSource(resource.dataSource);\r\n                if (dataSource.isLoaded()) {\r\n                    promise.resolve(dataSource.items())\r\n                } else {\r\n                    dataSource.load().done(list => promise.resolve(list)).fail(() => promise.reject())\r\n                }\r\n            });\r\n            when.apply(null, promises).done(() => {\r\n                this.isLoaded = true;\r\n                this.isLoading = false;\r\n                this._pushAllResources()\r\n            }).fail(() => resultAsync.reject())\r\n        }\r\n    }\r\n    initializeState() {\r\n        var resourceDeclarations = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];\r\n        this.resourceDeclarations = resourceDeclarations\r\n    }\r\n    createListAsync(rawAppointment) {\r\n        var resultAsync = new Deferred;\r\n        this.appointmentPromiseQueue.push(new PromiseItem(rawAppointment, resultAsync));\r\n        if (this._hasResourceDeclarations(this.resourceDeclarations)) {\r\n            if (this.isLoaded) {\r\n                this._pushAllResources()\r\n            } else {\r\n                this._tryPullResources(this.resourceDeclarations, resultAsync)\r\n            }\r\n        }\r\n        return resultAsync.promise()\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}