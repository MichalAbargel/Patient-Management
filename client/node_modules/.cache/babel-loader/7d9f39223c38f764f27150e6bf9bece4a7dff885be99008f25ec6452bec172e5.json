{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Michal Abargel\\\\Desktop\\\\FULLSTACK_PROJECTS\\\\Patient-Management\\\\client\\\\src\\\\components\\\\statistics\\\\BasicLineChart.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { LineChart } from \"@mui/x-charts/LineChart\";\nimport { Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BasicLineChart = () => {\n  _s();\n  const URL = \"http://localhost:3500/api/statistics/activePatients\";\n  const [xVals, setXVals] = useState(null);\n  const [yVals, setYVals] = useState(null);\n  const getLegalDates = datesList => {\n    const newList = [];\n    datesList.forEach(element => {\n      const date = new Date(element);\n      const month = String(date.getMonth() + 1).padStart(2, \"0\"); // Months are 0-indexed, so we add 1\n      const day = String(date.getDate()).padStart(2, \"0\");\n      return `${year}-${month}-${day}`;\n      newList.push(date.toDateString());\n    });\n    console.log(newList);\n    return newList;\n  };\n  const getActivePatients = async () => {\n    try {\n      const response = await fetch(`${URL}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (response.ok) {\n        const responseData = await response.json();\n        setXVals(getLegalDates(responseData.dates));\n        setYVals(responseData.activePatientsCount);\n      }\n    } catch (error) {\n      console.log(\"Error fetching data\", error);\n    }\n  };\n  useEffect(() => {\n    getActivePatients();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [xVals != null && yVals != null && /*#__PURE__*/_jsxDEV(LineChart, {\n      xAxis: [{\n        data: xVals\n      }],\n      series: [{\n        data: yVals\n      }],\n      width: 800,\n      height: 500\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      align: \"center\",\n      children: \"X-Axis Label\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      align: \"center\",\n      children: \"Y-Axis Label\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(BasicLineChart, \"B5d0qJCWE349QrWkWBhIc2y8Nq8=\");\n_c = BasicLineChart;\nexport default BasicLineChart;\nvar _c;\n$RefreshReg$(_c, \"BasicLineChart\");","map":{"version":3,"names":["useState","useEffect","LineChart","Typography","jsxDEV","_jsxDEV","BasicLineChart","_s","URL","xVals","setXVals","yVals","setYVals","getLegalDates","datesList","newList","forEach","element","date","Date","month","String","getMonth","padStart","day","getDate","year","push","toDateString","console","log","getActivePatients","response","fetch","method","headers","ok","responseData","json","dates","activePatientsCount","error","children","xAxis","data","series","width","height","fileName","_jsxFileName","lineNumber","columnNumber","variant","align","_c","$RefreshReg$"],"sources":["C:/Users/Michal Abargel/Desktop/FULLSTACK_PROJECTS/Patient-Management/client/src/components/statistics/BasicLineChart.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { LineChart } from \"@mui/x-charts/LineChart\";\r\nimport { Typography } from \"@mui/material\";\r\n\r\nconst BasicLineChart = () => {\r\n  const URL = \"http://localhost:3500/api/statistics/activePatients\";\r\n  const [xVals, setXVals] = useState(null);\r\n  const [yVals, setYVals] = useState(null);\r\n\r\n  const getLegalDates = (datesList) => {\r\n    const newList = [];\r\n    datesList.forEach((element) => {\r\n      const date = new Date(element);\r\n    const month = String(date.getMonth() + 1).padStart(2, \"0\"); // Months are 0-indexed, so we add 1\r\n    const day = String(date.getDate()).padStart(2, \"0\");\r\n    return `${year}-${month}-${day}`;\r\n      newList.push(date.toDateString());\r\n    });\r\n    console.log(newList);\r\n    return newList;\r\n  };\r\n\r\n  const getActivePatients = async () => {\r\n    try {\r\n      const response = await fetch(`${URL}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      if (response.ok) {\r\n        const responseData = await response.json();\r\n        setXVals(getLegalDates(responseData.dates));\r\n        setYVals(responseData.activePatientsCount);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error fetching data\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getActivePatients();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {xVals != null && yVals != null && (\r\n        <LineChart\r\n          xAxis={[{ data: xVals }]}\r\n          series={[\r\n            {\r\n              data: yVals,\r\n            },\r\n          ]}\r\n          width={800}\r\n          height={500}\r\n        />\r\n      )}\r\n      <Typography variant=\"subtitle1\" align=\"center\">\r\n        X-Axis Label\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" align=\"center\">\r\n        Y-Axis Label\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\nexport default BasicLineChart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}