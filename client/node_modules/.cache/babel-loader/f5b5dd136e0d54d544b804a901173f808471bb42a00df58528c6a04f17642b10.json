{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/scheduler/utils/data.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { replaceWrongEndDate } from \"../../../../__internal/scheduler/appointments/data_provider/m_utils\";\nimport { createAppointmentAdapter } from \"../../../../ui/scheduler/appointmentAdapter\";\nimport { isDefined } from \"../../../../core/utils/type\";\nvar RECURRENCE_FREQ = \"freq\";\nexport var getPreparedDataItems = (dataItems, dataAccessors, cellDurationInMinutes, timeZoneCalculator) => {\n  var result = [];\n  null === dataItems || void 0 === dataItems ? void 0 : dataItems.forEach(rawAppointment => {\n    var _recurrenceRule$match;\n    var startDate = new Date(dataAccessors.getter.startDate(rawAppointment));\n    var endDate = new Date(dataAccessors.getter.endDate(rawAppointment));\n    replaceWrongEndDate(rawAppointment, startDate, endDate, cellDurationInMinutes, dataAccessors);\n    var adapter = createAppointmentAdapter(rawAppointment, dataAccessors, timeZoneCalculator);\n    var comparableStartDate = adapter.startDate && adapter.calculateStartDate(\"toGrid\");\n    var comparableEndDate = adapter.endDate && adapter.calculateEndDate(\"toGrid\");\n    var regex = new RegExp(RECURRENCE_FREQ, \"gi\");\n    var recurrenceRule = adapter.recurrenceRule;\n    var hasRecurrenceRule = !!(null !== recurrenceRule && void 0 !== recurrenceRule && null !== (_recurrenceRule$match = recurrenceRule.match(regex)) && void 0 !== _recurrenceRule$match && _recurrenceRule$match.length);\n    var visible = isDefined(rawAppointment.visible) ? !!rawAppointment.visible : true;\n    if (comparableStartDate && comparableEndDate) {\n      result.push({\n        allDay: !!adapter.allDay,\n        startDate: comparableStartDate,\n        startDateTimeZone: rawAppointment.startDateTimeZone,\n        endDate: comparableEndDate,\n        endDateTimeZone: rawAppointment.endDateTimeZone,\n        recurrenceRule: adapter.recurrenceRule,\n        recurrenceException: adapter.recurrenceException,\n        hasRecurrenceRule: hasRecurrenceRule,\n        visible: visible,\n        rawAppointment: rawAppointment\n      });\n    }\n  });\n  return result;\n};\nexport var resolveDataItems = options => Array.isArray(options) ? options : options.data;","map":{"version":3,"names":["replaceWrongEndDate","createAppointmentAdapter","isDefined","RECURRENCE_FREQ","getPreparedDataItems","dataItems","dataAccessors","cellDurationInMinutes","timeZoneCalculator","result","forEach","rawAppointment","_recurrenceRule$match","startDate","Date","getter","endDate","adapter","comparableStartDate","calculateStartDate","comparableEndDate","calculateEndDate","regex","RegExp","recurrenceRule","hasRecurrenceRule","match","length","visible","push","allDay","startDateTimeZone","endDateTimeZone","recurrenceException","resolveDataItems","options","Array","isArray","data"],"sources":["C:/Users/Michal Abargel/Desktop/FULLSTACK_PROJECTS/PrivateLessones/PL/client/gui/node_modules/devextreme/esm/renovation/ui/scheduler/utils/data.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/scheduler/utils/data.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    replaceWrongEndDate\r\n} from \"../../../../__internal/scheduler/appointments/data_provider/m_utils\";\r\nimport {\r\n    createAppointmentAdapter\r\n} from \"../../../../ui/scheduler/appointmentAdapter\";\r\nimport {\r\n    isDefined\r\n} from \"../../../../core/utils/type\";\r\nvar RECURRENCE_FREQ = \"freq\";\r\nexport var getPreparedDataItems = (dataItems, dataAccessors, cellDurationInMinutes, timeZoneCalculator) => {\r\n    var result = [];\r\n    null === dataItems || void 0 === dataItems ? void 0 : dataItems.forEach(rawAppointment => {\r\n        var _recurrenceRule$match;\r\n        var startDate = new Date(dataAccessors.getter.startDate(rawAppointment));\r\n        var endDate = new Date(dataAccessors.getter.endDate(rawAppointment));\r\n        replaceWrongEndDate(rawAppointment, startDate, endDate, cellDurationInMinutes, dataAccessors);\r\n        var adapter = createAppointmentAdapter(rawAppointment, dataAccessors, timeZoneCalculator);\r\n        var comparableStartDate = adapter.startDate && adapter.calculateStartDate(\"toGrid\");\r\n        var comparableEndDate = adapter.endDate && adapter.calculateEndDate(\"toGrid\");\r\n        var regex = new RegExp(RECURRENCE_FREQ, \"gi\");\r\n        var recurrenceRule = adapter.recurrenceRule;\r\n        var hasRecurrenceRule = !!(null !== recurrenceRule && void 0 !== recurrenceRule && null !== (_recurrenceRule$match = recurrenceRule.match(regex)) && void 0 !== _recurrenceRule$match && _recurrenceRule$match.length);\r\n        var visible = isDefined(rawAppointment.visible) ? !!rawAppointment.visible : true;\r\n        if (comparableStartDate && comparableEndDate) {\r\n            result.push({\r\n                allDay: !!adapter.allDay,\r\n                startDate: comparableStartDate,\r\n                startDateTimeZone: rawAppointment.startDateTimeZone,\r\n                endDate: comparableEndDate,\r\n                endDateTimeZone: rawAppointment.endDateTimeZone,\r\n                recurrenceRule: adapter.recurrenceRule,\r\n                recurrenceException: adapter.recurrenceException,\r\n                hasRecurrenceRule: hasRecurrenceRule,\r\n                visible: visible,\r\n                rawAppointment: rawAppointment\r\n            })\r\n        }\r\n    });\r\n    return result\r\n};\r\nexport var resolveDataItems = options => Array.isArray(options) ? options : options.data;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,mBAAmB,QAChB,qEAAqE;AAC5E,SACIC,wBAAwB,QACrB,6CAA6C;AACpD,SACIC,SAAS,QACN,6BAA6B;AACpC,IAAIC,eAAe,GAAG,MAAM;AAC5B,OAAO,IAAIC,oBAAoB,GAAGA,CAACC,SAAS,EAAEC,aAAa,EAAEC,qBAAqB,EAAEC,kBAAkB,KAAK;EACvG,IAAIC,MAAM,GAAG,EAAE;EACf,IAAI,KAAKJ,SAAS,IAAI,KAAK,CAAC,KAAKA,SAAS,GAAG,KAAK,CAAC,GAAGA,SAAS,CAACK,OAAO,CAACC,cAAc,IAAI;IACtF,IAAIC,qBAAqB;IACzB,IAAIC,SAAS,GAAG,IAAIC,IAAI,CAACR,aAAa,CAACS,MAAM,CAACF,SAAS,CAACF,cAAc,CAAC,CAAC;IACxE,IAAIK,OAAO,GAAG,IAAIF,IAAI,CAACR,aAAa,CAACS,MAAM,CAACC,OAAO,CAACL,cAAc,CAAC,CAAC;IACpEX,mBAAmB,CAACW,cAAc,EAAEE,SAAS,EAAEG,OAAO,EAAET,qBAAqB,EAAED,aAAa,CAAC;IAC7F,IAAIW,OAAO,GAAGhB,wBAAwB,CAACU,cAAc,EAAEL,aAAa,EAAEE,kBAAkB,CAAC;IACzF,IAAIU,mBAAmB,GAAGD,OAAO,CAACJ,SAAS,IAAII,OAAO,CAACE,kBAAkB,CAAC,QAAQ,CAAC;IACnF,IAAIC,iBAAiB,GAAGH,OAAO,CAACD,OAAO,IAAIC,OAAO,CAACI,gBAAgB,CAAC,QAAQ,CAAC;IAC7E,IAAIC,KAAK,GAAG,IAAIC,MAAM,CAACpB,eAAe,EAAE,IAAI,CAAC;IAC7C,IAAIqB,cAAc,GAAGP,OAAO,CAACO,cAAc;IAC3C,IAAIC,iBAAiB,GAAG,CAAC,EAAE,IAAI,KAAKD,cAAc,IAAI,KAAK,CAAC,KAAKA,cAAc,IAAI,IAAI,MAAMZ,qBAAqB,GAAGY,cAAc,CAACE,KAAK,CAACJ,KAAK,CAAC,CAAC,IAAI,KAAK,CAAC,KAAKV,qBAAqB,IAAIA,qBAAqB,CAACe,MAAM,CAAC;IACtN,IAAIC,OAAO,GAAG1B,SAAS,CAACS,cAAc,CAACiB,OAAO,CAAC,GAAG,CAAC,CAACjB,cAAc,CAACiB,OAAO,GAAG,IAAI;IACjF,IAAIV,mBAAmB,IAAIE,iBAAiB,EAAE;MAC1CX,MAAM,CAACoB,IAAI,CAAC;QACRC,MAAM,EAAE,CAAC,CAACb,OAAO,CAACa,MAAM;QACxBjB,SAAS,EAAEK,mBAAmB;QAC9Ba,iBAAiB,EAAEpB,cAAc,CAACoB,iBAAiB;QACnDf,OAAO,EAAEI,iBAAiB;QAC1BY,eAAe,EAAErB,cAAc,CAACqB,eAAe;QAC/CR,cAAc,EAAEP,OAAO,CAACO,cAAc;QACtCS,mBAAmB,EAAEhB,OAAO,CAACgB,mBAAmB;QAChDR,iBAAiB,EAAEA,iBAAiB;QACpCG,OAAO,EAAEA,OAAO;QAChBjB,cAAc,EAAEA;MACpB,CAAC,CAAC;IACN;EACJ,CAAC,CAAC;EACF,OAAOF,MAAM;AACjB,CAAC;AACD,OAAO,IAAIyB,gBAAgB,GAAGC,OAAO,IAAIC,KAAK,CAACC,OAAO,CAACF,OAAO,CAAC,GAAGA,OAAO,GAAGA,OAAO,CAACG,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}