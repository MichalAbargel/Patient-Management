{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/table_creator.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport $ from \"../../core/renderer\";\nimport domAdapter from \"../../core/dom_adapter\";\nimport { data as elementData } from \"../../core/element_data\";\nimport { isFunction } from \"../../core/utils/type\";\nimport { getPublicElement } from \"../../core/element\";\nvar ROW_SELECTOR = \"tr\";\nclass SchedulerTableCreator {\n  constructor() {\n    this.VERTICAL = \"vertical\";\n    this.HORIZONTAL = \"horizontal\";\n  }\n  insertAllDayRow(allDayElements, tableBody, index) {\n    if (allDayElements[index]) {\n      var row = allDayElements[index].find(ROW_SELECTOR);\n      if (!row.length) {\n        row = $(domAdapter.createElement(ROW_SELECTOR));\n        row.append(allDayElements[index].get(0));\n      }\n      tableBody.appendChild(row.get ? row.get(0) : row);\n    }\n  }\n  makeTable(options) {\n    var tableBody = domAdapter.createElement(\"tbody\");\n    var templateCallbacks = [];\n    var row;\n    var rowCountInGroup = options.groupCount ? options.rowCount / options.groupCount : options.rowCount;\n    var allDayElementIndex = 0;\n    var allDayElements = options.allDayElements;\n    var groupIndex = options.groupIndex;\n    var rowCount = options.rowCount;\n    $(options.container).append(tableBody);\n    if (allDayElements) {\n      this.insertAllDayRow(allDayElements, tableBody, 0);\n      allDayElementIndex++;\n    }\n    for (var rowIndex = 0; rowIndex < rowCount; rowIndex++) {\n      row = domAdapter.createElement(ROW_SELECTOR);\n      tableBody.appendChild(row);\n      var isLastRowInGroup = (rowIndex + 1) % rowCountInGroup === 0;\n      if (options.rowClass) {\n        row.className = options.rowClass;\n      }\n      for (var columnIndex = 0; columnIndex < options.cellCount; columnIndex++) {\n        var _options$setAdditiona;\n        var td = domAdapter.createElement(\"td\");\n        row.appendChild(td);\n        if (options.cellClass) {\n          if (isFunction(options.cellClass)) {\n            td.className = options.cellClass(rowIndex, columnIndex);\n          } else {\n            td.className = options.cellClass;\n          }\n        }\n        var cellDataObject = void 0;\n        var dataKey = void 0;\n        var dataValue = void 0;\n        if (options.getCellData) {\n          cellDataObject = options.getCellData(td, rowIndex, columnIndex, groupIndex);\n          dataKey = cellDataObject.key;\n          dataValue = cellDataObject.value;\n          dataKey && elementData(td, dataKey, dataValue);\n        }\n        null === (_options$setAdditiona = options.setAdditionalClasses) || void 0 === _options$setAdditiona ? void 0 : _options$setAdditiona.call(options, $(td), dataValue);\n        if (options.cellTemplate && options.cellTemplate.render) {\n          var additionalTemplateData = options.getTemplateData ? options.getTemplateData(rowIndex) : {};\n          var templateOptions = {\n            model: _extends({\n              text: options.getCellText ? options.getCellText(rowIndex, columnIndex) : \"\",\n              date: options.getCellDate ? options.getCellDate(rowIndex) : void 0\n            }, additionalTemplateData),\n            container: getPublicElement($(td)),\n            index: rowIndex * options.cellCount + columnIndex\n          };\n          if (dataValue) {\n            if (dataValue.startDate) {\n              templateOptions.model.startDate = dataValue.startDate;\n            }\n            if (dataValue.endDate) {\n              templateOptions.model.endDate = dataValue.endDate;\n            }\n            if (dataValue.groups) {\n              templateOptions.model.groups = dataValue.groups;\n            }\n            if (dataValue.allDay) {\n              templateOptions.model.allDay = dataValue.allDay;\n            }\n          }\n          templateCallbacks.push(options.cellTemplate.render.bind(options.cellTemplate, templateOptions));\n        } else if (options.getCellText) {\n          $(\"<div>\").text(options.getCellText(rowIndex, columnIndex)).addClass(options.getCellTextClass).appendTo($(td));\n        }\n      }\n      if (allDayElements && isLastRowInGroup) {\n        this.insertAllDayRow(allDayElements, tableBody, allDayElementIndex);\n        allDayElementIndex++;\n      }\n    }\n    return templateCallbacks;\n  }\n  makeGroupedTable(type, groups, cssClasses, cellCount, cellTemplate, rowCount, groupByDate) {\n    var rows = [];\n    if (type === this.VERTICAL) {\n      rows = this._makeVerticalGroupedRows(groups, cssClasses, cellTemplate, rowCount);\n    } else {\n      rows = this._makeHorizontalGroupedRows(groups, cssClasses, cellCount, cellTemplate, groupByDate);\n    }\n    return rows;\n  }\n  makeGroupedTableFromJSON(type, data, config) {\n    var table;\n    var cellStorage = [];\n    var rowIndex = 0;\n    config = config || {};\n    var cellTag = config.cellTag || \"td\";\n    var childrenField = config.childrenField || \"children\";\n    var titleField = config.titleField || \"title\";\n    var groupTableClass = config.groupTableClass;\n    var groupRowClass = config.groupRowClass;\n    var groupCellClass = config.groupCellClass;\n    var groupCellCustomContent = config.groupCellCustomContent;\n    function getChildCount(item) {\n      if (item[childrenField]) {\n        return item[childrenField].length;\n      }\n      return 0;\n    }\n    function createCell(text, childCount, index, data) {\n      var cell = {\n        element: domAdapter.createElement(cellTag),\n        childCount: childCount\n      };\n      if (groupCellClass) {\n        cell.element.className = groupCellClass;\n      }\n      var cellText = domAdapter.createTextNode(text);\n      if (\"function\" === typeof groupCellCustomContent) {\n        groupCellCustomContent(cell.element, cellText, index, data);\n      } else {\n        cell.element.appendChild(cellText);\n      }\n      return cell;\n    }\n    !function () {\n      table = domAdapter.createElement(\"table\");\n      if (groupTableClass) {\n        table.className = groupTableClass;\n      }\n    }();\n    !function generateCells(data) {\n      for (var i = 0; i < data.length; i++) {\n        var childCount = getChildCount(data[i]);\n        var cell = createCell(data[i][titleField], childCount, i, data[i]);\n        if (!cellStorage[rowIndex]) {\n          cellStorage[rowIndex] = [];\n        }\n        cellStorage[rowIndex].push(cell);\n        if (childCount) {\n          generateCells(data[i][childrenField]);\n        } else {\n          rowIndex++;\n        }\n      }\n    }(data);\n    void cellStorage.forEach(function (cells) {\n      var row = domAdapter.createElement(ROW_SELECTOR);\n      if (groupRowClass) {\n        row.className = groupRowClass;\n      }\n      var rowspans = [];\n      for (var i = cells.length - 1; i >= 0; i--) {\n        var prev = cells[i + 1];\n        var rowspan = cells[i].childCount;\n        if (prev && prev.childCount) {\n          rowspan *= prev.childCount;\n        }\n        rowspans.push(rowspan);\n      }\n      rowspans.reverse();\n      cells.forEach(function (cell, index) {\n        if (rowspans[index]) {\n          cell.element.setAttribute(\"rowSpan\", rowspans[index]);\n        }\n        row.appendChild(cell.element);\n      });\n      table.appendChild(row);\n    });\n    return table;\n  }\n  _makeFlexGroupedRowCells(group, repeatCount, cssClasses, cellTemplate) {\n    var repeatByDate = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 1;\n    var cells = [];\n    var items = group.items;\n    var itemCount = items.length;\n    for (var i = 0; i < repeatCount * repeatByDate; i++) {\n      for (var j = 0; j < itemCount; j++) {\n        var $container = $(\"<div>\");\n        var cell = {};\n        if (cellTemplate && cellTemplate.render) {\n          var templateOptions = {\n            model: items[j],\n            container: getPublicElement($container),\n            index: i * itemCount + j\n          };\n          if (group.data) {\n            templateOptions.model.data = group.data[j];\n          }\n          cell.template = cellTemplate.render.bind(cellTemplate, templateOptions);\n        } else {\n          $container.text(items[j].text).attr(\"title\", items[j].text).addClass(\"dx-scheduler-group-header-content\");\n          $container = $(\"<div>\").append($container);\n        }\n        var cssClass = isFunction(cssClasses.groupHeaderClass) ? cssClasses.groupHeaderClass(j) : cssClasses.groupHeaderClass;\n        cell.element = $container.addClass(cssClass);\n        cells.push(cell);\n      }\n    }\n    return cells;\n  }\n  _makeVerticalGroupedRows(groups, cssClasses, cellTemplate) {\n    var cellTemplates = [];\n    var repeatCount = 1;\n    var cellsArray = [];\n    var cellIterator = function (cell) {\n      if (cell.template) {\n        cellTemplates.push(cell.template);\n      }\n    };\n    for (var i = 0; i < groups.length; i++) {\n      if (i > 0) {\n        repeatCount = groups[i - 1].items.length * repeatCount;\n      }\n      var cells = this._makeFlexGroupedRowCells(groups[i], repeatCount, cssClasses, cellTemplate);\n      cells.forEach(cellIterator);\n      cellsArray.push(cells);\n    }\n    var rows = [];\n    var groupCount = cellsArray.length;\n    for (var _i = 0; _i < groupCount; _i++) {\n      rows.push($(\"<div>\").addClass(cssClasses.groupHeaderRowClass));\n    }\n    for (var _i2 = groupCount - 1; _i2 >= 0; _i2--) {\n      var currentColumnLength = cellsArray[_i2].length;\n      for (var j = 0; j < currentColumnLength; j++) {\n        rows[_i2].append(cellsArray[_i2][j].element);\n      }\n    }\n    return {\n      elements: $(\"<div>\").addClass(\"dx-scheduler-group-flex-container\").append(rows),\n      cellTemplates: cellTemplates\n    };\n  }\n  _makeHorizontalGroupedRows(groups, cssClasses, cellCount, cellTemplate, groupByDate) {\n    var repeatCount = 1;\n    var groupCount = groups.length;\n    var rows = [];\n    var cellTemplates = [];\n    var repeatByDate = groupByDate ? cellCount : 1;\n    var cellIterator = function (cell) {\n      if (cell.template) {\n        cellTemplates.push(cell.template);\n      }\n      return cell.element;\n    };\n    for (var i = 0; i < groupCount; i++) {\n      if (i > 0) {\n        repeatCount = groups[i - 1].items.length * repeatCount;\n      }\n      var cells = this._makeGroupedRowCells(groups[i], repeatCount, cssClasses, cellTemplate, repeatByDate);\n      rows.push($(\"<tr>\").addClass(cssClasses.groupRowClass).append(cells.map(cellIterator)));\n    }\n    var maxCellCount = rows[groupCount - 1].find(\"th\").length;\n    for (var j = 0; j < groupCount; j++) {\n      var $cell = rows[j].find(\"th\");\n      var colspan = maxCellCount / $cell.length;\n      if (!groupByDate) {\n        colspan *= cellCount;\n      }\n      if (colspan > 1 && 1 === repeatByDate || groupByDate && groupCount > 1) {\n        $cell.attr(\"colSpan\", colspan);\n      }\n    }\n    return {\n      elements: rows,\n      cellTemplates: cellTemplates\n    };\n  }\n  _makeGroupedRowCells(group, repeatCount, cssClasses, cellTemplate, repeatByDate) {\n    repeatByDate = repeatByDate || 1;\n    repeatCount *= repeatByDate;\n    var cells = [];\n    var items = group.items;\n    var itemCount = items.length;\n    for (var i = 0; i < repeatCount; i++) {\n      for (var j = 0; j < itemCount; j++) {\n        var $container = $(\"<div>\");\n        var cell = {};\n        if (cellTemplate && cellTemplate.render) {\n          var templateOptions = {\n            model: items[j],\n            container: getPublicElement($container),\n            index: i * itemCount + j\n          };\n          if (group.data) {\n            templateOptions.model.data = group.data[j];\n          }\n          cell.template = cellTemplate.render.bind(cellTemplate, templateOptions);\n        } else {\n          $container.text(items[j].text);\n          $container = $(\"<div>\").append($container);\n        }\n        $container.addClass(cssClasses.groupHeaderContentClass);\n        var cssClass = void 0;\n        if (isFunction(cssClasses.groupHeaderClass)) {\n          cssClass = cssClasses.groupHeaderClass(j);\n        } else {\n          cssClass = cssClasses.groupHeaderClass;\n        }\n        cell.element = $(\"<th>\").addClass(cssClass).append($container);\n        cells.push(cell);\n      }\n    }\n    return cells;\n  }\n}\nexport default {\n  tableCreator: new SchedulerTableCreator()\n};","map":{"version":3,"names":["_extends","$","domAdapter","data","elementData","isFunction","getPublicElement","ROW_SELECTOR","SchedulerTableCreator","constructor","VERTICAL","HORIZONTAL","insertAllDayRow","allDayElements","tableBody","index","row","find","length","createElement","append","get","appendChild","makeTable","options","templateCallbacks","rowCountInGroup","groupCount","rowCount","allDayElementIndex","groupIndex","container","rowIndex","isLastRowInGroup","rowClass","className","columnIndex","cellCount","_options$setAdditiona","td","cellClass","cellDataObject","dataKey","dataValue","getCellData","key","value","setAdditionalClasses","call","cellTemplate","render","additionalTemplateData","getTemplateData","templateOptions","model","text","getCellText","date","getCellDate","startDate","endDate","groups","allDay","push","bind","addClass","getCellTextClass","appendTo","makeGroupedTable","type","cssClasses","groupByDate","rows","_makeVerticalGroupedRows","_makeHorizontalGroupedRows","makeGroupedTableFromJSON","config","table","cellStorage","cellTag","childrenField","titleField","groupTableClass","groupRowClass","groupCellClass","groupCellCustomContent","getChildCount","item","createCell","childCount","cell","element","cellText","createTextNode","generateCells","i","forEach","cells","rowspans","prev","rowspan","reverse","setAttribute","_makeFlexGroupedRowCells","group","repeatCount","repeatByDate","arguments","items","itemCount","j","$container","template","attr","cssClass","groupHeaderClass","cellTemplates","cellsArray","cellIterator","_i","groupHeaderRowClass","_i2","currentColumnLength","elements","_makeGroupedRowCells","map","maxCellCount","$cell","colspan","groupHeaderContentClass","tableCreator"],"sources":["C:/Users/Michal Abargel/Desktop/FULLSTACK_PROJECTS/PrivateLessones/F(x)/client/gui/node_modules/devextreme/esm/ui/scheduler/table_creator.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/table_creator.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport {\r\n    data as elementData\r\n} from \"../../core/element_data\";\r\nimport {\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nvar ROW_SELECTOR = \"tr\";\r\nclass SchedulerTableCreator {\r\n    constructor() {\r\n        this.VERTICAL = \"vertical\";\r\n        this.HORIZONTAL = \"horizontal\"\r\n    }\r\n    insertAllDayRow(allDayElements, tableBody, index) {\r\n        if (allDayElements[index]) {\r\n            var row = allDayElements[index].find(ROW_SELECTOR);\r\n            if (!row.length) {\r\n                row = $(domAdapter.createElement(ROW_SELECTOR));\r\n                row.append(allDayElements[index].get(0))\r\n            }\r\n            tableBody.appendChild(row.get ? row.get(0) : row)\r\n        }\r\n    }\r\n    makeTable(options) {\r\n        var tableBody = domAdapter.createElement(\"tbody\");\r\n        var templateCallbacks = [];\r\n        var row;\r\n        var rowCountInGroup = options.groupCount ? options.rowCount / options.groupCount : options.rowCount;\r\n        var allDayElementIndex = 0;\r\n        var allDayElements = options.allDayElements;\r\n        var groupIndex = options.groupIndex;\r\n        var rowCount = options.rowCount;\r\n        $(options.container).append(tableBody);\r\n        if (allDayElements) {\r\n            this.insertAllDayRow(allDayElements, tableBody, 0);\r\n            allDayElementIndex++\r\n        }\r\n        for (var rowIndex = 0; rowIndex < rowCount; rowIndex++) {\r\n            row = domAdapter.createElement(ROW_SELECTOR);\r\n            tableBody.appendChild(row);\r\n            var isLastRowInGroup = (rowIndex + 1) % rowCountInGroup === 0;\r\n            if (options.rowClass) {\r\n                row.className = options.rowClass\r\n            }\r\n            for (var columnIndex = 0; columnIndex < options.cellCount; columnIndex++) {\r\n                var _options$setAdditiona;\r\n                var td = domAdapter.createElement(\"td\");\r\n                row.appendChild(td);\r\n                if (options.cellClass) {\r\n                    if (isFunction(options.cellClass)) {\r\n                        td.className = options.cellClass(rowIndex, columnIndex)\r\n                    } else {\r\n                        td.className = options.cellClass\r\n                    }\r\n                }\r\n                var cellDataObject = void 0;\r\n                var dataKey = void 0;\r\n                var dataValue = void 0;\r\n                if (options.getCellData) {\r\n                    cellDataObject = options.getCellData(td, rowIndex, columnIndex, groupIndex);\r\n                    dataKey = cellDataObject.key;\r\n                    dataValue = cellDataObject.value;\r\n                    dataKey && elementData(td, dataKey, dataValue)\r\n                }\r\n                null === (_options$setAdditiona = options.setAdditionalClasses) || void 0 === _options$setAdditiona ? void 0 : _options$setAdditiona.call(options, $(td), dataValue);\r\n                if (options.cellTemplate && options.cellTemplate.render) {\r\n                    var additionalTemplateData = options.getTemplateData ? options.getTemplateData(rowIndex) : {};\r\n                    var templateOptions = {\r\n                        model: _extends({\r\n                            text: options.getCellText ? options.getCellText(rowIndex, columnIndex) : \"\",\r\n                            date: options.getCellDate ? options.getCellDate(rowIndex) : void 0\r\n                        }, additionalTemplateData),\r\n                        container: getPublicElement($(td)),\r\n                        index: rowIndex * options.cellCount + columnIndex\r\n                    };\r\n                    if (dataValue) {\r\n                        if (dataValue.startDate) {\r\n                            templateOptions.model.startDate = dataValue.startDate\r\n                        }\r\n                        if (dataValue.endDate) {\r\n                            templateOptions.model.endDate = dataValue.endDate\r\n                        }\r\n                        if (dataValue.groups) {\r\n                            templateOptions.model.groups = dataValue.groups\r\n                        }\r\n                        if (dataValue.allDay) {\r\n                            templateOptions.model.allDay = dataValue.allDay\r\n                        }\r\n                    }\r\n                    templateCallbacks.push(options.cellTemplate.render.bind(options.cellTemplate, templateOptions))\r\n                } else if (options.getCellText) {\r\n                    $(\"<div>\").text(options.getCellText(rowIndex, columnIndex)).addClass(options.getCellTextClass).appendTo($(td))\r\n                }\r\n            }\r\n            if (allDayElements && isLastRowInGroup) {\r\n                this.insertAllDayRow(allDayElements, tableBody, allDayElementIndex);\r\n                allDayElementIndex++\r\n            }\r\n        }\r\n        return templateCallbacks\r\n    }\r\n    makeGroupedTable(type, groups, cssClasses, cellCount, cellTemplate, rowCount, groupByDate) {\r\n        var rows = [];\r\n        if (type === this.VERTICAL) {\r\n            rows = this._makeVerticalGroupedRows(groups, cssClasses, cellTemplate, rowCount)\r\n        } else {\r\n            rows = this._makeHorizontalGroupedRows(groups, cssClasses, cellCount, cellTemplate, groupByDate)\r\n        }\r\n        return rows\r\n    }\r\n    makeGroupedTableFromJSON(type, data, config) {\r\n        var table;\r\n        var cellStorage = [];\r\n        var rowIndex = 0;\r\n        config = config || {};\r\n        var cellTag = config.cellTag || \"td\";\r\n        var childrenField = config.childrenField || \"children\";\r\n        var titleField = config.titleField || \"title\";\r\n        var groupTableClass = config.groupTableClass;\r\n        var groupRowClass = config.groupRowClass;\r\n        var groupCellClass = config.groupCellClass;\r\n        var groupCellCustomContent = config.groupCellCustomContent;\r\n\r\n        function getChildCount(item) {\r\n            if (item[childrenField]) {\r\n                return item[childrenField].length\r\n            }\r\n            return 0\r\n        }\r\n\r\n        function createCell(text, childCount, index, data) {\r\n            var cell = {\r\n                element: domAdapter.createElement(cellTag),\r\n                childCount: childCount\r\n            };\r\n            if (groupCellClass) {\r\n                cell.element.className = groupCellClass\r\n            }\r\n            var cellText = domAdapter.createTextNode(text);\r\n            if (\"function\" === typeof groupCellCustomContent) {\r\n                groupCellCustomContent(cell.element, cellText, index, data)\r\n            } else {\r\n                cell.element.appendChild(cellText)\r\n            }\r\n            return cell\r\n        }! function() {\r\n            table = domAdapter.createElement(\"table\");\r\n            if (groupTableClass) {\r\n                table.className = groupTableClass\r\n            }\r\n        }();\r\n        ! function generateCells(data) {\r\n            for (var i = 0; i < data.length; i++) {\r\n                var childCount = getChildCount(data[i]);\r\n                var cell = createCell(data[i][titleField], childCount, i, data[i]);\r\n                if (!cellStorage[rowIndex]) {\r\n                    cellStorage[rowIndex] = []\r\n                }\r\n                cellStorage[rowIndex].push(cell);\r\n                if (childCount) {\r\n                    generateCells(data[i][childrenField])\r\n                } else {\r\n                    rowIndex++\r\n                }\r\n            }\r\n        }(data);\r\n        void cellStorage.forEach((function(cells) {\r\n            var row = domAdapter.createElement(ROW_SELECTOR);\r\n            if (groupRowClass) {\r\n                row.className = groupRowClass\r\n            }\r\n            var rowspans = [];\r\n            for (var i = cells.length - 1; i >= 0; i--) {\r\n                var prev = cells[i + 1];\r\n                var rowspan = cells[i].childCount;\r\n                if (prev && prev.childCount) {\r\n                    rowspan *= prev.childCount\r\n                }\r\n                rowspans.push(rowspan)\r\n            }\r\n            rowspans.reverse();\r\n            cells.forEach((function(cell, index) {\r\n                if (rowspans[index]) {\r\n                    cell.element.setAttribute(\"rowSpan\", rowspans[index])\r\n                }\r\n                row.appendChild(cell.element)\r\n            }));\r\n            table.appendChild(row)\r\n        }));\r\n        return table\r\n    }\r\n    _makeFlexGroupedRowCells(group, repeatCount, cssClasses, cellTemplate) {\r\n        var repeatByDate = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 1;\r\n        var cells = [];\r\n        var items = group.items;\r\n        var itemCount = items.length;\r\n        for (var i = 0; i < repeatCount * repeatByDate; i++) {\r\n            for (var j = 0; j < itemCount; j++) {\r\n                var $container = $(\"<div>\");\r\n                var cell = {};\r\n                if (cellTemplate && cellTemplate.render) {\r\n                    var templateOptions = {\r\n                        model: items[j],\r\n                        container: getPublicElement($container),\r\n                        index: i * itemCount + j\r\n                    };\r\n                    if (group.data) {\r\n                        templateOptions.model.data = group.data[j]\r\n                    }\r\n                    cell.template = cellTemplate.render.bind(cellTemplate, templateOptions)\r\n                } else {\r\n                    $container.text(items[j].text).attr(\"title\", items[j].text).addClass(\"dx-scheduler-group-header-content\");\r\n                    $container = $(\"<div>\").append($container)\r\n                }\r\n                var cssClass = isFunction(cssClasses.groupHeaderClass) ? cssClasses.groupHeaderClass(j) : cssClasses.groupHeaderClass;\r\n                cell.element = $container.addClass(cssClass);\r\n                cells.push(cell)\r\n            }\r\n        }\r\n        return cells\r\n    }\r\n    _makeVerticalGroupedRows(groups, cssClasses, cellTemplate) {\r\n        var cellTemplates = [];\r\n        var repeatCount = 1;\r\n        var cellsArray = [];\r\n        var cellIterator = function(cell) {\r\n            if (cell.template) {\r\n                cellTemplates.push(cell.template)\r\n            }\r\n        };\r\n        for (var i = 0; i < groups.length; i++) {\r\n            if (i > 0) {\r\n                repeatCount = groups[i - 1].items.length * repeatCount\r\n            }\r\n            var cells = this._makeFlexGroupedRowCells(groups[i], repeatCount, cssClasses, cellTemplate);\r\n            cells.forEach(cellIterator);\r\n            cellsArray.push(cells)\r\n        }\r\n        var rows = [];\r\n        var groupCount = cellsArray.length;\r\n        for (var _i = 0; _i < groupCount; _i++) {\r\n            rows.push($(\"<div>\").addClass(cssClasses.groupHeaderRowClass))\r\n        }\r\n        for (var _i2 = groupCount - 1; _i2 >= 0; _i2--) {\r\n            var currentColumnLength = cellsArray[_i2].length;\r\n            for (var j = 0; j < currentColumnLength; j++) {\r\n                rows[_i2].append(cellsArray[_i2][j].element)\r\n            }\r\n        }\r\n        return {\r\n            elements: $(\"<div>\").addClass(\"dx-scheduler-group-flex-container\").append(rows),\r\n            cellTemplates: cellTemplates\r\n        }\r\n    }\r\n    _makeHorizontalGroupedRows(groups, cssClasses, cellCount, cellTemplate, groupByDate) {\r\n        var repeatCount = 1;\r\n        var groupCount = groups.length;\r\n        var rows = [];\r\n        var cellTemplates = [];\r\n        var repeatByDate = groupByDate ? cellCount : 1;\r\n        var cellIterator = function(cell) {\r\n            if (cell.template) {\r\n                cellTemplates.push(cell.template)\r\n            }\r\n            return cell.element\r\n        };\r\n        for (var i = 0; i < groupCount; i++) {\r\n            if (i > 0) {\r\n                repeatCount = groups[i - 1].items.length * repeatCount\r\n            }\r\n            var cells = this._makeGroupedRowCells(groups[i], repeatCount, cssClasses, cellTemplate, repeatByDate);\r\n            rows.push($(\"<tr>\").addClass(cssClasses.groupRowClass).append(cells.map(cellIterator)))\r\n        }\r\n        var maxCellCount = rows[groupCount - 1].find(\"th\").length;\r\n        for (var j = 0; j < groupCount; j++) {\r\n            var $cell = rows[j].find(\"th\");\r\n            var colspan = maxCellCount / $cell.length;\r\n            if (!groupByDate) {\r\n                colspan *= cellCount\r\n            }\r\n            if (colspan > 1 && 1 === repeatByDate || groupByDate && groupCount > 1) {\r\n                $cell.attr(\"colSpan\", colspan)\r\n            }\r\n        }\r\n        return {\r\n            elements: rows,\r\n            cellTemplates: cellTemplates\r\n        }\r\n    }\r\n    _makeGroupedRowCells(group, repeatCount, cssClasses, cellTemplate, repeatByDate) {\r\n        repeatByDate = repeatByDate || 1;\r\n        repeatCount *= repeatByDate;\r\n        var cells = [];\r\n        var items = group.items;\r\n        var itemCount = items.length;\r\n        for (var i = 0; i < repeatCount; i++) {\r\n            for (var j = 0; j < itemCount; j++) {\r\n                var $container = $(\"<div>\");\r\n                var cell = {};\r\n                if (cellTemplate && cellTemplate.render) {\r\n                    var templateOptions = {\r\n                        model: items[j],\r\n                        container: getPublicElement($container),\r\n                        index: i * itemCount + j\r\n                    };\r\n                    if (group.data) {\r\n                        templateOptions.model.data = group.data[j]\r\n                    }\r\n                    cell.template = cellTemplate.render.bind(cellTemplate, templateOptions)\r\n                } else {\r\n                    $container.text(items[j].text);\r\n                    $container = $(\"<div>\").append($container)\r\n                }\r\n                $container.addClass(cssClasses.groupHeaderContentClass);\r\n                var cssClass = void 0;\r\n                if (isFunction(cssClasses.groupHeaderClass)) {\r\n                    cssClass = cssClasses.groupHeaderClass(j)\r\n                } else {\r\n                    cssClass = cssClasses.groupHeaderClass\r\n                }\r\n                cell.element = $(\"<th>\").addClass(cssClass).append($container);\r\n                cells.push(cell)\r\n            }\r\n        }\r\n        return cells\r\n    }\r\n}\r\nexport default {\r\n    tableCreator: new SchedulerTableCreator\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}