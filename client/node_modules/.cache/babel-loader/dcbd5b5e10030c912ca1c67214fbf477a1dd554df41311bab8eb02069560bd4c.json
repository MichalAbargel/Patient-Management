{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/calendar/ui.calendar.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { getWidth } from \"../../core/utils/size\";\nimport $ from \"../../core/renderer\";\nimport Guid from \"../../core/guid\";\nimport registerComponent from \"../../core/component_registrator\";\nimport { noop } from \"../../core/utils/common\";\nimport { isNumeric, isString, isFunction, isDefined } from \"../../core/utils/type\";\nimport { inRange } from \"../../core/utils/math\";\nimport { extend } from \"../../core/utils/extend\";\nimport Button from \"../button\";\nimport Editor from \"../editor/editor\";\nimport Swipeable from \"../../events/gesture/swipeable\";\nimport Navigator from \"./ui.calendar.navigator\";\nimport Views from \"./ui.calendar.views\";\nimport { move } from \"../../animation/translator\";\nimport dateUtils from \"../../core/utils/date\";\nimport dateSerialization from \"../../core/utils/date_serialization\";\nimport devices from \"../../core/devices\";\nimport fx from \"../../animation/fx\";\nimport { hasWindow } from \"../../core/utils/window\";\nimport messageLocalization from \"../../localization/message\";\nimport dateLocalization from \"../../localization/date\";\nimport { FunctionTemplate } from \"../../core/templates/function_template\";\nimport { isCommandKeyPressed, addNamespace } from \"../../events/utils/index\";\nimport CalendarSingleSelectionStrategy from \"./ui.calendar.single.selection.strategy\";\nimport CalendarMultiSelectionStrategy from \"./ui.calendar.multi.selection.strategy\";\nimport CalendarRangeSelectionStrategy from \"./ui.calendar.range.selection.strategy\";\nimport { end as hoverEndEventName } from \"../../events/hover\";\nimport eventsEngine from \"../../events/core/events_engine\";\nvar CALENDAR_CLASS = \"dx-calendar\";\nvar CALENDAR_BODY_CLASS = \"dx-calendar-body\";\nvar CALENDAR_CELL_CLASS = \"dx-calendar-cell\";\nvar CALENDAR_FOOTER_CLASS = \"dx-calendar-footer\";\nvar CALENDAR_TODAY_BUTTON_CLASS = \"dx-calendar-today-button\";\nvar CALENDAR_HAS_FOOTER_CLASS = \"dx-calendar-with-footer\";\nvar CALENDAR_VIEWS_WRAPPER_CLASS = \"dx-calendar-views-wrapper\";\nvar CALENDAR_VIEW_CLASS = \"dx-calendar-view\";\nvar CALENDAR_MULTIVIEW_CLASS = \"dx-calendar-multiview\";\nvar CALENDAR_RANGE_CLASS = \"dx-calendar-range\";\nvar FOCUSED_STATE_CLASS = \"dx-state-focused\";\nvar GESTURE_COVER_CLASS = \"dx-gesture-cover\";\nvar ANIMATION_DURATION_SHOW_VIEW = 250;\nvar POP_ANIMATION_FROM = .6;\nvar POP_ANIMATION_TO = 1;\nvar CALENDAR_INPUT_STANDARD_PATTERN = \"yyyy-MM-dd\";\nvar CALENDAR_DATE_VALUE_KEY = \"dxDateValueKey\";\nvar CALENDAR_DXHOVEREND_EVENT_NAME = addNamespace(hoverEndEventName, \"dxCalendar\");\nvar LEVEL_COMPARE_MAP = {\n  month: 3,\n  year: 2,\n  decade: 1,\n  century: 0\n};\nvar ZOOM_LEVEL = {\n  MONTH: \"month\",\n  YEAR: \"year\",\n  DECADE: \"decade\",\n  CENTURY: \"century\"\n};\nvar SELECTION_STRATEGIES = {\n  SingleSelection: CalendarSingleSelectionStrategy,\n  MultiSelection: CalendarMultiSelectionStrategy,\n  RangeSelection: CalendarRangeSelectionStrategy\n};\nfunction elementHasFocus(element) {\n  return element.hasClass(FOCUSED_STATE_CLASS);\n}\nvar Calendar = Editor.inherit({\n  _activeStateUnit: \".\" + CALENDAR_CELL_CLASS,\n  _getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      hoverStateEnabled: true,\n      activeStateEnabled: true,\n      currentDate: new Date(),\n      value: null,\n      values: [],\n      dateSerializationFormat: void 0,\n      min: new Date(1e3, 0),\n      max: new Date(3e3, 0),\n      firstDayOfWeek: void 0,\n      viewsCount: 1,\n      zoomLevel: ZOOM_LEVEL.MONTH,\n      maxZoomLevel: ZOOM_LEVEL.MONTH,\n      minZoomLevel: ZOOM_LEVEL.CENTURY,\n      selectionMode: \"single\",\n      showTodayButton: false,\n      showWeekNumbers: false,\n      weekNumberRule: \"auto\",\n      cellTemplate: \"cell\",\n      disabledDates: null,\n      onCellClick: null,\n      onContouredChanged: null,\n      skipFocusCheck: false,\n      _todayDate: () => new Date()\n    });\n  },\n  _defaultOptionsRules: function () {\n    return this.callBase().concat([{\n      device: function () {\n        return \"desktop\" === devices.real().deviceType && !devices.isSimulator();\n      },\n      options: {\n        focusStateEnabled: true\n      }\n    }]);\n  },\n  _supportedKeys: function () {\n    return extend(this.callBase(), {\n      rightArrow: function (e) {\n        e.preventDefault();\n        if (isCommandKeyPressed(e)) {\n          this._waitRenderView(1);\n        } else {\n          this._moveCurrentDateByOffset(1 * this._getRtlCorrection());\n        }\n      },\n      leftArrow: function (e) {\n        e.preventDefault();\n        if (isCommandKeyPressed(e)) {\n          this._waitRenderView(-1);\n        } else {\n          this._moveCurrentDateByOffset(-1 * this._getRtlCorrection());\n        }\n      },\n      upArrow: function (e) {\n        e.preventDefault();\n        if (isCommandKeyPressed(e)) {\n          this._navigateUp();\n        } else {\n          if (fx.isAnimating(this._view.$element())) {\n            return;\n          }\n          this._moveCurrentDateByOffset(-1 * this._view.option(\"colCount\"));\n        }\n      },\n      downArrow: function (e) {\n        e.preventDefault();\n        if (isCommandKeyPressed(e)) {\n          this._navigateDown();\n        } else {\n          if (fx.isAnimating(this._view.$element())) {\n            return;\n          }\n          this._moveCurrentDateByOffset(1 * this._view.option(\"colCount\"));\n        }\n      },\n      home: function (e) {\n        e.preventDefault();\n        var zoomLevel = this.option(\"zoomLevel\");\n        var currentDate = this.option(\"currentDate\");\n        var min = this._dateOption(\"min\");\n        if (this._view.isDateDisabled(currentDate)) {\n          return;\n        }\n        var date = dateUtils.sameView(zoomLevel, currentDate, min) ? min : dateUtils.getViewFirstCellDate(zoomLevel, currentDate);\n        this._moveToClosestAvailableDate(date);\n      },\n      end: function (e) {\n        e.preventDefault();\n        var zoomLevel = this.option(\"zoomLevel\");\n        var currentDate = this.option(\"currentDate\");\n        var max = this._dateOption(\"max\");\n        if (this._view.isDateDisabled(currentDate)) {\n          return;\n        }\n        var date = dateUtils.sameView(zoomLevel, currentDate, max) ? max : dateUtils.getViewLastCellDate(zoomLevel, currentDate);\n        this._moveToClosestAvailableDate(date);\n      },\n      pageUp: function (e) {\n        e.preventDefault();\n        this._waitRenderView(-1 * this._getRtlCorrection());\n      },\n      pageDown: function (e) {\n        e.preventDefault();\n        this._waitRenderView(1 * this._getRtlCorrection());\n      },\n      tab: noop,\n      enter: this._enterKeyHandler\n    });\n  },\n  _enterKeyHandler: function (e) {\n    if (!this._isMaxZoomLevel()) {\n      this._navigateDown();\n    } else if (!this._view.isDateDisabled(this.option(\"currentDate\"))) {\n      var value = this._updateTimeComponent(this.option(\"currentDate\"));\n      this._selectionStrategy.selectValue(value, e);\n    }\n  },\n  _getSerializationFormat: function (optionName) {\n    var value = this.option(optionName || \"value\");\n    if (this.option(\"dateSerializationFormat\")) {\n      return this.option(\"dateSerializationFormat\");\n    }\n    if (isNumeric(value)) {\n      return \"number\";\n    }\n    if (!isString(value)) {\n      return;\n    }\n    return dateSerialization.getDateSerializationFormat(value);\n  },\n  _convertToDate: function (value) {\n    return dateSerialization.deserializeDate(value);\n  },\n  _dateValue: function (value, event) {\n    var optionName = Array.isArray(value) ? \"values\" : \"value\";\n    if (event) {\n      if (\"keydown\" === event.type) {\n        var cellElement = this._view._getContouredCell().get(0);\n        event.target = cellElement;\n      }\n      this._saveValueChangeEvent(event);\n    }\n    this._dateOption(optionName, value);\n  },\n  _dateOption: function (optionName, optionValue) {\n    if (1 === arguments.length) {\n      var _this$option;\n      var values = null !== (_this$option = this.option(\"values\")) && void 0 !== _this$option ? _this$option : [];\n      return \"values\" === optionName ? values.map(value => this._convertToDate(value)) : this._convertToDate(this.option(optionName));\n    }\n    var serializationFormat = this._getSerializationFormat(optionName);\n    var serializedValue = \"values\" === optionName ? (null === optionValue || void 0 === optionValue ? void 0 : optionValue.map(value => dateSerialization.serializeDate(value, serializationFormat))) || [] : dateSerialization.serializeDate(optionValue, serializationFormat);\n    this.option(optionName, serializedValue);\n  },\n  _shiftDate: function (zoomLevel, date, offset, reverse) {\n    switch (zoomLevel) {\n      case ZOOM_LEVEL.MONTH:\n        date.setDate(date.getDate() + offset * reverse);\n        break;\n      case ZOOM_LEVEL.YEAR:\n        date.setMonth(date.getMonth() + offset * reverse);\n        break;\n      case ZOOM_LEVEL.DECADE:\n        date.setFullYear(date.getFullYear() + offset * reverse);\n        break;\n      case ZOOM_LEVEL.CENTURY:\n        date.setFullYear(date.getFullYear() + 10 * offset * reverse);\n    }\n  },\n  _moveCurrentDateByOffset: function (offset) {\n    var baseDate = this.option(\"currentDate\");\n    var currentDate = new Date(baseDate);\n    var zoomLevel = this.option(\"zoomLevel\");\n    this._shiftDate(zoomLevel, currentDate, offset, 1);\n    var maxDate = this._getMaxDate();\n    var minDate = this._getMinDate();\n    var isDateForwardInNeighborView = this._areDatesInNeighborView(zoomLevel, currentDate, baseDate);\n    var isDateForwardInRange = inRange(currentDate, minDate, maxDate) && isDateForwardInNeighborView;\n    var dateForward = new Date(currentDate);\n    while (isDateForwardInRange) {\n      if (!this._view.isDateDisabled(dateForward)) {\n        currentDate = dateForward;\n        break;\n      }\n      this._shiftDate(zoomLevel, dateForward, offset, 1);\n      isDateForwardInNeighborView = this._areDatesInNeighborView(zoomLevel, dateForward, baseDate);\n      isDateForwardInRange = inRange(dateForward, minDate, maxDate) && isDateForwardInNeighborView;\n    }\n    if (this._view.isDateDisabled(baseDate) || this._view.isDateDisabled(currentDate)) {\n      this._waitRenderView(offset > 0 ? 1 : -1);\n    } else {\n      this._skipNavigate = true;\n      this.option(\"currentDate\", currentDate);\n    }\n  },\n  _areDatesInSameView(zoomLevel, date1, date2) {\n    switch (zoomLevel) {\n      case ZOOM_LEVEL.MONTH:\n        return date1.getMonth() === date2.getMonth();\n      case ZOOM_LEVEL.YEAR:\n        return date1.getYear() === date2.getYear();\n      case ZOOM_LEVEL.DECADE:\n        return parseInt(date1.getYear() / 10) === parseInt(date2.getYear() / 10);\n      case ZOOM_LEVEL.CENTURY:\n        return parseInt(date1.getYear() / 100) === parseInt(date2.getYear() / 100);\n    }\n  },\n  _areDatesInNeighborView(zoomLevel, date1, date2) {\n    switch (zoomLevel) {\n      case ZOOM_LEVEL.MONTH:\n        return (a = date1.getMonth(), b = date2.getMonth(), abs = Math.abs(a - b), Math.min(abs, 12 - abs)) <= 1;\n      case ZOOM_LEVEL.YEAR:\n        return Math.abs(date1.getYear() - date2.getYear()) <= 1;\n      case ZOOM_LEVEL.DECADE:\n        return Math.abs(date1.getYear() - date2.getYear()) <= 10;\n      case ZOOM_LEVEL.CENTURY:\n        return Math.abs(date1.getYear() - date2.getYear()) <= 100;\n    }\n    var a, b, abs;\n  },\n  _moveToClosestAvailableDate: function () {\n    var baseDate = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.option(\"currentDate\");\n    var currentDate = new Date(baseDate);\n    var zoomLevel = this.option(\"zoomLevel\");\n    var isCurrentDateAvailable = !this._isDateNotAvailable(currentDate);\n    var isDateForwardAvailable = isCurrentDateAvailable;\n    var isDateBackwardAvailable = isCurrentDateAvailable;\n    var isDateForwardInStartView;\n    var isDateBackwardInStartView;\n    var dateForward = new Date(currentDate);\n    var dateBackward = new Date(currentDate);\n    do {\n      if (isDateForwardAvailable) {\n        currentDate = dateForward;\n        break;\n      }\n      if (isDateBackwardAvailable) {\n        currentDate = dateBackward;\n        break;\n      }\n      this._shiftDate(zoomLevel, dateForward, 1, 1);\n      this._shiftDate(zoomLevel, dateBackward, 1, -1);\n      isDateForwardInStartView = this._areDatesInSameView(zoomLevel, dateForward, baseDate);\n      isDateBackwardInStartView = this._areDatesInSameView(zoomLevel, dateBackward, baseDate);\n      isDateForwardAvailable = isDateForwardInStartView && !this._isDateNotAvailable(dateForward);\n      isDateBackwardAvailable = isDateBackwardInStartView && !this._isDateNotAvailable(dateBackward);\n    } while (isDateForwardInStartView || isDateBackwardInStartView);\n    this.option(\"currentDate\", currentDate);\n  },\n  _isDateNotAvailable: function (date) {\n    var maxDate = this._getMaxDate();\n    var minDate = this._getMinDate();\n    return !inRange(date, minDate, maxDate) || this._view.isDateDisabled(date);\n  },\n  _init: function () {\n    this.callBase();\n    this._initSelectionStrategy();\n    this._correctZoomLevel();\n    this._initCurrentDate();\n    this._initActions();\n  },\n  _initSelectionStrategy: function () {\n    var strategyName = this._getSelectionStrategyName();\n    var strategy = SELECTION_STRATEGIES[strategyName];\n    if (!this._selectionStrategy || this._selectionStrategy.NAME !== strategyName) {\n      this._selectionStrategy = new strategy(this);\n    }\n  },\n  _refreshSelectionStrategy: function () {\n    this._initSelectionStrategy();\n    this._refresh();\n  },\n  _getSelectionStrategyName: function () {\n    var selectionMode = this.option(\"selectionMode\");\n    switch (selectionMode) {\n      case \"multi\":\n        return \"MultiSelection\";\n      case \"range\":\n        return \"RangeSelection\";\n      default:\n        return \"SingleSelection\";\n    }\n  },\n  _correctZoomLevel: function () {\n    var minZoomLevel = this.option(\"minZoomLevel\");\n    var maxZoomLevel = this.option(\"maxZoomLevel\");\n    var zoomLevel = this.option(\"zoomLevel\");\n    if (LEVEL_COMPARE_MAP[maxZoomLevel] < LEVEL_COMPARE_MAP[minZoomLevel]) {\n      return;\n    }\n    if (LEVEL_COMPARE_MAP[zoomLevel] > LEVEL_COMPARE_MAP[maxZoomLevel]) {\n      this.option(\"zoomLevel\", maxZoomLevel);\n    } else if (LEVEL_COMPARE_MAP[zoomLevel] < LEVEL_COMPARE_MAP[minZoomLevel]) {\n      this.option(\"zoomLevel\", minZoomLevel);\n    }\n  },\n  _initCurrentDate: function () {\n    var _this$_getNormalizedD;\n    var currentDate = null !== (_this$_getNormalizedD = this._getNormalizedDate(this._selectionStrategy.getDefaultCurrentDate())) && void 0 !== _this$_getNormalizedD ? _this$_getNormalizedD : this._getNormalizedDate(this.option(\"currentDate\"));\n    this.option(\"currentDate\", currentDate);\n  },\n  _getNormalizedDate: function (date) {\n    date = dateUtils.normalizeDate(date, this._getMinDate(), this._getMaxDate());\n    return isDefined(date) ? this._getDate(date) : date;\n  },\n  _initActions: function () {\n    this._cellClickAction = this._createActionByOption(\"onCellClick\");\n    this._onContouredChanged = this._createActionByOption(\"onContouredChanged\");\n  },\n  _initTemplates: function () {\n    this._templateManager.addDefaultTemplates({\n      cell: new FunctionTemplate(function (options) {\n        var data = options.model;\n        $(options.container).append($(\"<span>\").text(data && data.text || String(data)));\n      })\n    });\n    this.callBase();\n  },\n  _updateCurrentDate: function (date) {\n    if (fx.isAnimating(this._$viewsWrapper)) {\n      fx.stop(this._$viewsWrapper, true);\n    }\n    var min = this._getMinDate();\n    var max = this._getMaxDate();\n    if (min > max) {\n      this.option(\"currentDate\", new Date());\n      return;\n    }\n    var normalizedDate = this._getNormalizedDate(date);\n    if (date.getTime() !== normalizedDate.getTime()) {\n      this.option(\"currentDate\", new Date(normalizedDate));\n      return;\n    }\n    var offset = this._getViewsOffset(this._view.option(\"date\"), normalizedDate);\n    if (0 !== offset && !this._isMaxZoomLevel() && this._isOtherViewCellClicked) {\n      offset = 0;\n    }\n    if (this._view && 0 !== offset && !this._suppressNavigation) {\n      if (this._additionalView) {\n        if (offset > 2 || offset < -1) {\n          this._refreshViews();\n          this._setViewContoured(normalizedDate);\n          this._updateAriaId(normalizedDate);\n          this._renderNavigator();\n        } else if (1 === offset && this._skipNavigate) {\n          this._setViewContoured(normalizedDate);\n          this._updateAriaId(normalizedDate);\n        } else {\n          this._navigate(offset, normalizedDate);\n        }\n      } else {\n        this._navigate(offset, normalizedDate);\n      }\n    } else {\n      this._renderNavigator();\n      this._setViewContoured(normalizedDate);\n      this._updateAriaId(normalizedDate);\n    }\n    this._skipNavigate = false;\n  },\n  _isAdditionalViewDate(date) {\n    if (!this._additionalView) {\n      return false;\n    }\n    return date >= this._additionalView._getFirstAvailableDate();\n  },\n  _getActiveView: function (date) {\n    return this._isAdditionalViewDate(date) ? this._additionalView : this._view;\n  },\n  _setViewContoured: function (date) {\n    if (this.option(\"skipFocusCheck\") || elementHasFocus(this._focusTarget())) {\n      var _this$_additionalView;\n      this._view.option(\"contouredDate\", null);\n      null === (_this$_additionalView = this._additionalView) || void 0 === _this$_additionalView ? void 0 : _this$_additionalView.option(\"contouredDate\", null);\n      var view = this._isAdditionalViewDate(date) ? this._additionalView : this._view;\n      view.option(\"contouredDate\", date);\n    }\n  },\n  _getMinDate: function () {\n    var _rangeMin = this.option(\"_rangeMin\");\n    if (_rangeMin) {\n      return _rangeMin;\n    }\n    if (this.min) {\n      return this.min;\n    }\n    this.min = this._dateOption(\"min\") || new Date(1e3, 0);\n    return this.min;\n  },\n  _getMaxDate: function () {\n    var _rangeMax = this.option(\"_rangeMax\");\n    if (_rangeMax) {\n      return _rangeMax;\n    }\n    if (this.max) {\n      return this.max;\n    }\n    this.max = this._dateOption(\"max\") || new Date(3e3, 0);\n    return this.max;\n  },\n  _getViewsOffset: function (startDate, endDate) {\n    var zoomLevel = this.option(\"zoomLevel\");\n    if (zoomLevel === ZOOM_LEVEL.MONTH) {\n      return this._getMonthsOffset(startDate, endDate);\n    }\n    var zoomCorrection;\n    switch (zoomLevel) {\n      case ZOOM_LEVEL.CENTURY:\n        zoomCorrection = 100;\n        break;\n      case ZOOM_LEVEL.DECADE:\n        zoomCorrection = 10;\n        break;\n      default:\n        zoomCorrection = 1;\n    }\n    return parseInt(endDate.getFullYear() / zoomCorrection) - parseInt(startDate.getFullYear() / zoomCorrection);\n  },\n  _getMonthsOffset: function (startDate, endDate) {\n    var yearOffset = endDate.getFullYear() - startDate.getFullYear();\n    var monthOffset = endDate.getMonth() - startDate.getMonth();\n    return 12 * yearOffset + monthOffset;\n  },\n  _waitRenderView: function (offset) {\n    if (this._alreadyViewRender) {\n      return;\n    }\n    this._alreadyViewRender = true;\n    var date = this._getDateByOffset(offset * this._getRtlCorrection());\n    this._moveToClosestAvailableDate(date);\n    this._waitRenderViewTimeout = setTimeout(() => {\n      this._alreadyViewRender = false;\n    });\n  },\n  _getRtlCorrection: function () {\n    return this.option(\"rtlEnabled\") ? -1 : 1;\n  },\n  _getDateByOffset: function (offset, date) {\n    var _date;\n    date = this._getDate(null !== (_date = date) && void 0 !== _date ? _date : this.option(\"currentDate\"));\n    var currentDay = date.getDate();\n    var difference = dateUtils.getDifferenceInMonth(this.option(\"zoomLevel\")) * offset;\n    date.setDate(1);\n    date.setMonth(date.getMonth() + difference);\n    var lastDay = dateUtils.getLastMonthDate(date).getDate();\n    date.setDate(currentDay > lastDay ? lastDay : currentDay);\n    return date;\n  },\n  _focusTarget: function () {\n    return this.$element();\n  },\n  _initMarkup: function () {\n    this._renderSubmitElement();\n    this.callBase();\n    var $element = this.$element();\n    $element.addClass(CALENDAR_CLASS);\n    $element.toggleClass(CALENDAR_RANGE_CLASS, \"range\" === this.option(\"selectionMode\"));\n    this._renderBody();\n    $element.append(this.$body);\n    this._renderViews();\n    this._renderEvents();\n    this._renderNavigator();\n    $element.prepend(this._navigator.$element());\n    this._renderSwipeable();\n    this._renderFooter();\n    this._selectionStrategy.updateAriaSelected();\n    this._updateAriaId();\n    this.setAria(\"role\", \"application\");\n    this._moveToClosestAvailableDate();\n  },\n  _render: function () {\n    this.callBase();\n    this._setViewContoured(this.option(\"currentDate\"));\n  },\n  _renderBody: function () {\n    if (!this._$viewsWrapper) {\n      this.$body = $(\"<div>\").addClass(CALENDAR_BODY_CLASS);\n      this._$viewsWrapper = $(\"<div>\").addClass(CALENDAR_VIEWS_WRAPPER_CLASS);\n      this.$body.append(this._$viewsWrapper);\n    }\n  },\n  _getKeyboardListeners() {\n    return this.callBase().concat([this._view]);\n  },\n  _renderViews: function () {\n    this.$element().addClass(CALENDAR_VIEW_CLASS + \"-\" + this.option(\"zoomLevel\"));\n    var {\n      currentDate: currentDate,\n      viewsCount: viewsCount\n    } = this.option();\n    this.$element().toggleClass(CALENDAR_MULTIVIEW_CLASS, viewsCount > 1);\n    this._view = this._renderSpecificView(currentDate);\n    if (hasWindow()) {\n      var beforeDate = this._getDateByOffset(-1, currentDate);\n      this._beforeView = this._isViewAvailable(beforeDate) ? this._renderSpecificView(beforeDate) : null;\n      var afterDate = this._getDateByOffset(viewsCount, currentDate);\n      afterDate.setDate(1);\n      this._afterView = this._isViewAvailable(afterDate) ? this._renderSpecificView(afterDate) : null;\n    }\n    if (viewsCount > 1) {\n      this._additionalView = this._renderSpecificView(this._getDateByOffset(1, currentDate));\n    }\n    this._translateViews();\n  },\n  _renderSpecificView: function (date) {\n    var {\n      zoomLevel: zoomLevel\n    } = this.option();\n    var specificView = Views[zoomLevel];\n    var $view = $(\"<div>\").appendTo(this._$viewsWrapper);\n    var config = this._viewConfig(date);\n    var view = this._createComponent($view, specificView, config);\n    return view;\n  },\n  _viewConfig: function (date) {\n    var _this$option2;\n    var disabledDates = this.option(\"disabledDates\");\n    disabledDates = isFunction(disabledDates) ? this._injectComponent(disabledDates.bind(this)) : disabledDates;\n    return _extends({}, this._selectionStrategy.getViewOptions(), {\n      date: date,\n      min: this._getMinDate(),\n      max: this._getMaxDate(),\n      firstDayOfWeek: null !== (_this$option2 = this.option(\"firstDayOfWeek\")) && void 0 !== _this$option2 ? _this$option2 : dateLocalization.firstDayOfWeekIndex(),\n      showWeekNumbers: this.option(\"showWeekNumbers\"),\n      weekNumberRule: this.option(\"weekNumberRule\"),\n      zoomLevel: this.option(\"zoomLevel\"),\n      tabIndex: void 0,\n      focusStateEnabled: this.option(\"focusStateEnabled\"),\n      hoverStateEnabled: this.option(\"hoverStateEnabled\"),\n      disabledDates: disabledDates,\n      onCellClick: this._cellClickHandler.bind(this),\n      cellTemplate: this._getTemplateByOption(\"cellTemplate\"),\n      allowValueSelection: this._isMaxZoomLevel(),\n      _todayDate: this.option(\"_todayDate\")\n    });\n  },\n  _renderEvents() {\n    eventsEngine.off(this._$viewsWrapper, CALENDAR_DXHOVEREND_EVENT_NAME);\n    if (\"range\" === this.option(\"selectionMode\")) {\n      eventsEngine.on(this._$viewsWrapper, CALENDAR_DXHOVEREND_EVENT_NAME, null, e => {\n        this._updateViewsOption(\"hoveredRange\", []);\n      });\n    }\n  },\n  _injectComponent: function (func) {\n    var that = this;\n    return function (params) {\n      extend(params, {\n        component: that\n      });\n      return func(params);\n    };\n  },\n  _isViewAvailable: function (date) {\n    var zoomLevel = this.option(\"zoomLevel\");\n    var min = dateUtils.getViewMinBoundaryDate(zoomLevel, this._getMinDate());\n    var max = dateUtils.getViewMaxBoundaryDate(zoomLevel, this._getMaxDate());\n    return dateUtils.dateInRange(date, min, max);\n  },\n  _translateViews: function () {\n    var {\n      viewsCount: viewsCount\n    } = this.option();\n    move(this._view.$element(), {\n      left: 0,\n      top: 0\n    });\n    this._moveViewElement(this._beforeView, -1);\n    this._moveViewElement(this._afterView, viewsCount);\n    this._moveViewElement(this._additionalView, 1);\n  },\n  _moveViewElement(view, coefficient) {\n    view && move(view.$element(), {\n      left: this._getViewPosition(coefficient),\n      top: 0\n    });\n  },\n  _getViewPosition: function (coefficient) {\n    var rtlCorrection = this.option(\"rtlEnabled\") ? -1 : 1;\n    return 100 * coefficient * rtlCorrection + \"%\";\n  },\n  _cellClickHandler: function (e) {\n    var zoomLevel = this.option(\"zoomLevel\");\n    var nextView = dateUtils.getViewDown(zoomLevel);\n    var isMaxZoomLevel = this._isMaxZoomLevel();\n    if (nextView && !isMaxZoomLevel) {\n      this._navigateDown(e.event.currentTarget);\n    } else {\n      var newValue = this._updateTimeComponent(e.value);\n      this._selectionStrategy.selectValue(newValue, e.event);\n      this._cellClickAction(e);\n    }\n  },\n  _updateTimeComponent: function (date) {\n    var result = new Date(date);\n    var currentValue = this._dateOption(\"value\");\n    if (currentValue) {\n      result.setHours(currentValue.getHours());\n      result.setMinutes(currentValue.getMinutes());\n      result.setSeconds(currentValue.getSeconds());\n      result.setMilliseconds(currentValue.getMilliseconds());\n    }\n    return result;\n  },\n  _isMaxZoomLevel: function () {\n    return this.option(\"zoomLevel\") === this.option(\"maxZoomLevel\");\n  },\n  _navigateDown: function (cell) {\n    var zoomLevel = this.option(\"zoomLevel\");\n    if (this._isMaxZoomLevel()) {\n      return;\n    }\n    var nextView = dateUtils.getViewDown(zoomLevel);\n    if (!nextView) {\n      return;\n    }\n    var newCurrentDate = this._view.option(\"contouredDate\") || this._view.option(\"date\");\n    if (cell) {\n      newCurrentDate = $(cell).data(CALENDAR_DATE_VALUE_KEY);\n    }\n    this._isOtherViewCellClicked = true;\n    this.option(\"currentDate\", newCurrentDate);\n    this.option(\"zoomLevel\", nextView);\n    this._isOtherViewCellClicked = false;\n    this._renderNavigator();\n    this._animateShowView();\n    this._moveToClosestAvailableDate();\n    this._setViewContoured(this._getNormalizedDate(this.option(\"currentDate\")));\n  },\n  _renderNavigator: function () {\n    if (!this._navigator) {\n      this._navigator = new Navigator($(\"<div>\"), this._navigatorConfig());\n    }\n    this._navigator.option(\"text\", this._getViewsCaption(this._view, this._additionalView));\n    this._updateButtonsVisibility();\n  },\n  _navigatorConfig: function () {\n    var {\n      rtlEnabled: rtlEnabled\n    } = this.option();\n    return {\n      text: this._getViewsCaption(this._view, this._additionalView),\n      onClick: this._navigatorClickHandler.bind(this),\n      onCaptionClick: this._navigateUp.bind(this),\n      rtlEnabled: rtlEnabled\n    };\n  },\n  _navigatorClickHandler: function (e) {\n    var {\n      currentDate: currentDate,\n      viewsCount: viewsCount\n    } = this.option();\n    var offset = e.direction;\n    if (viewsCount > 1) {\n      var additionalViewActive = this._isAdditionalViewDate(currentDate);\n      var shouldDoubleOffset = additionalViewActive && offset < 0 || !additionalViewActive && offset > 0;\n      if (shouldDoubleOffset) {\n        offset *= 2;\n      }\n    }\n    var newCurrentDate = this._getDateByOffset(offset, currentDate);\n    this._moveToClosestAvailableDate(newCurrentDate);\n  },\n  _navigateUp: function () {\n    var zoomLevel = this.option(\"zoomLevel\");\n    var nextView = dateUtils.getViewUp(zoomLevel);\n    if (!nextView || this._isMinZoomLevel(zoomLevel)) {\n      return;\n    }\n    this.option(\"zoomLevel\", nextView);\n    this._renderNavigator();\n    this._animateShowView();\n    this._moveToClosestAvailableDate();\n    this._setViewContoured(this._getNormalizedDate(this.option(\"currentDate\")));\n  },\n  _isMinZoomLevel: function (zoomLevel) {\n    var min = this._getMinDate();\n    var max = this._getMaxDate();\n    return dateUtils.sameView(zoomLevel, min, max) || this.option(\"minZoomLevel\") === zoomLevel;\n  },\n  _updateButtonsVisibility: function () {\n    this._navigator.toggleButton(\"next\", !isDefined(this._afterView));\n    this._navigator.toggleButton(\"prev\", !isDefined(this._beforeView));\n  },\n  _renderSwipeable: function () {\n    if (!this._swipeable) {\n      this._swipeable = this._createComponent(this.$element(), Swipeable, {\n        onStart: this._swipeStartHandler.bind(this),\n        onUpdated: this._swipeUpdateHandler.bind(this),\n        onEnd: this._swipeEndHandler.bind(this),\n        itemSizeFunc: this._viewWidth.bind(this)\n      });\n    }\n  },\n  _swipeStartHandler: function (e) {\n    fx.stop(this._$viewsWrapper, true);\n    var {\n      viewsCount: viewsCount\n    } = this.option();\n    this._toggleGestureCoverCursor(\"grabbing\");\n    e.event.maxLeftOffset = this._getRequiredView(\"next\") ? 1 / viewsCount : 0;\n    e.event.maxRightOffset = this._getRequiredView(\"prev\") ? 1 / viewsCount : 0;\n  },\n  _toggleGestureCoverCursor: function (cursor) {\n    $(\".\".concat(GESTURE_COVER_CLASS)).css(\"cursor\", cursor);\n  },\n  _getRequiredView: function (name) {\n    var view;\n    var isRtl = this.option(\"rtlEnabled\");\n    if (\"next\" === name) {\n      view = isRtl ? this._beforeView : this._afterView;\n    } else if (\"prev\" === name) {\n      view = isRtl ? this._afterView : this._beforeView;\n    }\n    return view;\n  },\n  _swipeUpdateHandler: function (e) {\n    var offset = e.event.offset;\n    move(this._$viewsWrapper, {\n      left: offset * this._viewWidth(),\n      top: 0\n    });\n    this._updateNavigatorCaption(offset);\n  },\n  _swipeEndHandler: function (e) {\n    this._toggleGestureCoverCursor(\"auto\");\n    var {\n      currentDate: currentDate,\n      rtlEnabled: rtlEnabled\n    } = this.option();\n    var targetOffset = e.event.targetOffset;\n    var moveOffset = !targetOffset ? 0 : targetOffset / Math.abs(targetOffset);\n    var isAdditionalViewActive = this._isAdditionalViewDate(currentDate);\n    var shouldDoubleOffset = isAdditionalViewActive && (rtlEnabled ? -1 === moveOffset : 1 === moveOffset);\n    if (0 === moveOffset) {\n      this._animateWrapper(0, ANIMATION_DURATION_SHOW_VIEW);\n      return;\n    }\n    var offset = -moveOffset * this._getRtlCorrection() * (shouldDoubleOffset ? 2 : 1);\n    var date = this._getDateByOffset(offset);\n    if (this._isDateInInvalidRange(date)) {\n      if (moveOffset >= 0) {\n        date = new Date(this._getMinDate());\n      } else {\n        date = new Date(this._getMaxDate());\n      }\n    }\n    this.option(\"currentDate\", date);\n  },\n  _viewWidth: function () {\n    if (!this._viewWidthValue) {\n      this._viewWidthValue = getWidth(this.$element()) / this.option(\"viewsCount\");\n    }\n    return this._viewWidthValue;\n  },\n  _updateNavigatorCaption: function (offset) {\n    offset *= this._getRtlCorrection();\n    var isMultiView = this.option(\"viewsCount\") > 1;\n    var view;\n    var additionalView;\n    if (offset > .5 && this._beforeView) {\n      view = this._beforeView;\n      additionalView = isMultiView && this._view;\n    } else if (offset < -.5 && this._afterView) {\n      view = isMultiView ? this._additionalView : this._afterView;\n      additionalView = isMultiView ? this._afterView : null;\n    } else {\n      view = this._view;\n      additionalView = isMultiView ? this._additionalView : null;\n    }\n    this._navigator.option(\"text\", this._getViewsCaption(view, additionalView));\n  },\n  _getViewsCaption: function (view, additionalView) {\n    var caption = view.getNavigatorCaption();\n    var {\n      viewsCount: viewsCount\n    } = this.option();\n    if (viewsCount > 1 && additionalView) {\n      var additionalViewCaption = additionalView.getNavigatorCaption();\n      caption = \"\".concat(caption, \" - \").concat(additionalViewCaption);\n    }\n    return caption;\n  },\n  _isDateInInvalidRange: function (date) {\n    if (this._view.isBoundary(date)) {\n      return;\n    }\n    var min = this._getMinDate();\n    var max = this._getMaxDate();\n    var normalizedDate = dateUtils.normalizeDate(date, min, max);\n    return normalizedDate === min || normalizedDate === max;\n  },\n  _renderFooter: function () {\n    var showTodayButton = this.option(\"showTodayButton\");\n    if (showTodayButton) {\n      var $todayButton = this._createComponent($(\"<div>\"), Button, {\n        focusStateEnabled: this.option(\"focusStateEnabled\"),\n        text: messageLocalization.format(\"dxCalendar-todayButtonText\"),\n        onClick: args => {\n          this._toTodayView(args);\n        },\n        type: \"default\",\n        stylingMode: \"text\",\n        integrationOptions: {}\n      }).$element().addClass(CALENDAR_TODAY_BUTTON_CLASS);\n      this._$footer = $(\"<div>\").addClass(CALENDAR_FOOTER_CLASS).append($todayButton);\n      this.$element().append(this._$footer);\n    }\n    this.$element().toggleClass(CALENDAR_HAS_FOOTER_CLASS, showTodayButton);\n  },\n  _renderSubmitElement: function () {\n    this._$submitElement = $(\"<input>\").attr(\"type\", \"hidden\").appendTo(this.$element());\n    this._setSubmitValue(this.option(\"value\"));\n  },\n  _setSubmitValue: function (value) {\n    var dateValue = this._convertToDate(value);\n    this._getSubmitElement().val(dateSerialization.serializeDate(dateValue, CALENDAR_INPUT_STANDARD_PATTERN));\n  },\n  _getSubmitElement: function () {\n    return this._$submitElement;\n  },\n  _animateShowView: function () {\n    fx.stop(this._view.$element(), true);\n    this._popAnimationView(this._view, POP_ANIMATION_FROM, POP_ANIMATION_TO, ANIMATION_DURATION_SHOW_VIEW);\n    if (this.option(\"viewsCount\") > 1) {\n      fx.stop(this._additionalView.$element(), true);\n      this._popAnimationView(this._additionalView, POP_ANIMATION_FROM, POP_ANIMATION_TO, ANIMATION_DURATION_SHOW_VIEW);\n    }\n  },\n  _popAnimationView: function (view, from, to, duration) {\n    return fx.animate(view.$element(), {\n      type: \"pop\",\n      from: {\n        scale: from,\n        opacity: from\n      },\n      to: {\n        scale: to,\n        opacity: to\n      },\n      duration: duration\n    });\n  },\n  _navigate: function (offset, value) {\n    if (0 !== offset && 1 !== Math.abs(offset) && this._isViewAvailable(value)) {\n      var newView = this._renderSpecificView(value);\n      if (offset > 0) {\n        this._afterView && this._afterView.$element().remove();\n        this._afterView = newView;\n      } else {\n        this._beforeView && this._beforeView.$element().remove();\n        this._beforeView = newView;\n      }\n      this._translateViews();\n    }\n    var rtlCorrection = this._getRtlCorrection();\n    var offsetSign = offset > 0 ? 1 : offset < 0 ? -1 : 0;\n    var endPosition = -rtlCorrection * offsetSign * this._viewWidth();\n    var viewsWrapperPosition = this._$viewsWrapper.position().left;\n    if (viewsWrapperPosition !== endPosition) {\n      if (this._preventViewChangeAnimation) {\n        this._wrapperAnimationEndHandler(offset, value);\n      } else {\n        this._animateWrapper(endPosition, ANIMATION_DURATION_SHOW_VIEW).done(this._wrapperAnimationEndHandler.bind(this, offset, value));\n      }\n    }\n  },\n  _animateWrapper: function (to, duration) {\n    return fx.animate(this._$viewsWrapper, {\n      type: \"slide\",\n      from: {\n        left: this._$viewsWrapper.position().left\n      },\n      to: {\n        left: to\n      },\n      duration: duration\n    });\n  },\n  _getDate: value => new Date(value),\n  _toTodayView: function (args) {\n    var today = new Date();\n    if (this._isMaxZoomLevel()) {\n      this._selectionStrategy.selectValue(today, args.event);\n      return;\n    }\n    this._preventViewChangeAnimation = true;\n    this.option(\"zoomLevel\", this.option(\"maxZoomLevel\"));\n    this._selectionStrategy.selectValue(today, args.event);\n    this._animateShowView();\n    this._preventViewChangeAnimation = false;\n  },\n  _wrapperAnimationEndHandler: function (offset, newDate) {\n    this._rearrangeViews(offset);\n    this._translateViews();\n    this._resetLocation();\n    this._renderNavigator();\n    this._setViewContoured(newDate);\n    this._updateAriaId(newDate);\n    this._selectionStrategy.updateAriaSelected();\n  },\n  _rearrangeViews: function (offset) {\n    var _this$viewToRemoveKey;\n    if (0 === offset) {\n      return;\n    }\n    var {\n      viewsCount: viewsCount\n    } = this.option();\n    var viewOffset;\n    var viewToCreateKey;\n    var viewToRemoveKey;\n    var viewBeforeCreateKey;\n    var viewAfterRemoveKey;\n    if (offset < 0) {\n      viewOffset = 1;\n      viewToCreateKey = \"_beforeView\";\n      viewToRemoveKey = \"_afterView\";\n      viewBeforeCreateKey = \"_view\";\n      viewAfterRemoveKey = 1 === viewsCount ? \"_view\" : \"_additionalView\";\n    } else {\n      viewOffset = -1;\n      viewToCreateKey = \"_afterView\";\n      viewToRemoveKey = \"_beforeView\";\n      viewBeforeCreateKey = 1 === viewsCount ? \"_view\" : \"_additionalView\";\n      viewAfterRemoveKey = \"_view\";\n    }\n    if (!this[viewToCreateKey]) {\n      return;\n    }\n    var destinationDate = this[viewToCreateKey].option(\"date\");\n    null === (_this$viewToRemoveKey = this[viewToRemoveKey]) || void 0 === _this$viewToRemoveKey ? void 0 : _this$viewToRemoveKey.$element().remove();\n    this[viewToRemoveKey] = this._renderSpecificView(this._getDateByOffset(viewOffset * viewsCount, destinationDate));\n    this[viewAfterRemoveKey].$element().remove();\n    if (1 === viewsCount) {\n      this[viewAfterRemoveKey] = this[viewToCreateKey];\n    } else {\n      this[viewAfterRemoveKey] = this[viewBeforeCreateKey];\n      this[viewBeforeCreateKey] = this[viewToCreateKey];\n    }\n    var dateByOffset = this._getDateByOffset(-viewOffset, destinationDate);\n    this[viewToCreateKey] = this._isViewAvailable(dateByOffset) ? this._renderSpecificView(dateByOffset) : null;\n  },\n  _resetLocation: function () {\n    move(this._$viewsWrapper, {\n      left: 0,\n      top: 0\n    });\n  },\n  _clean: function () {\n    this.callBase();\n    this._clearViewWidthCache();\n    delete this._$viewsWrapper;\n    delete this._navigator;\n    delete this._$footer;\n  },\n  _clearViewWidthCache: function () {\n    delete this._viewWidthValue;\n  },\n  _disposeViews: function () {\n    this._view.$element().remove();\n    this._beforeView && this._beforeView.$element().remove();\n    this._additionalView && this._additionalView.$element().remove();\n    this._afterView && this._afterView.$element().remove();\n    delete this._view;\n    delete this._additionalView;\n    delete this._beforeView;\n    delete this._afterView;\n    delete this._skipNavigate;\n  },\n  _dispose: function () {\n    clearTimeout(this._waitRenderViewTimeout);\n    this.callBase();\n  },\n  _refreshViews: function () {\n    this._resetActiveState();\n    this._disposeViews();\n    this._renderViews();\n  },\n  _visibilityChanged: function () {\n    this._translateViews();\n  },\n  _focusInHandler: function () {\n    this.callBase.apply(this, arguments);\n    this._setViewContoured(this.option(\"currentDate\"));\n  },\n  _focusOutHandler: function () {\n    var _this$_additionalView2;\n    this.callBase.apply(this, arguments);\n    this._view.option(\"contouredDate\", null);\n    null === (_this$_additionalView2 = this._additionalView) || void 0 === _this$_additionalView2 ? void 0 : _this$_additionalView2.option(\"contouredDate\", null);\n  },\n  _updateViewsOption: function (optionName, newValue) {\n    var _this$_additionalView3, _this$_beforeView, _this$_afterView;\n    this._view.option(optionName, newValue);\n    null === (_this$_additionalView3 = this._additionalView) || void 0 === _this$_additionalView3 ? void 0 : _this$_additionalView3.option(optionName, newValue);\n    null === (_this$_beforeView = this._beforeView) || void 0 === _this$_beforeView ? void 0 : _this$_beforeView.option(optionName, newValue);\n    null === (_this$_afterView = this._afterView) || void 0 === _this$_afterView ? void 0 : _this$_afterView.option(optionName, newValue);\n  },\n  _setViewsMinOption: function (min) {\n    this._restoreViewsMinMaxOptions();\n    this.option(\"_rangeMin\", this._convertToDate(min));\n    this._updateViewsOption(\"min\", this._getMinDate());\n  },\n  _setViewsMaxOption: function (max) {\n    this._restoreViewsMinMaxOptions();\n    this.option(\"_rangeMax\", this._convertToDate(max));\n    this._updateViewsOption(\"max\", this._getMaxDate());\n  },\n  _restoreViewsMinMaxOptions: function () {\n    this.option({\n      _rangeMin: null,\n      _rangeMax: null\n    });\n    this._updateViewsOption(\"min\", this._getMinDate());\n    this._updateViewsOption(\"max\", this._getMaxDate());\n  },\n  _updateAriaSelected: function (value, previousValue) {\n    previousValue.forEach(item => {\n      this.setAria(\"selected\", void 0, this._view._getCellByDate(item));\n    });\n    value.forEach(item => {\n      this.setAria(\"selected\", true, this._view._getCellByDate(item));\n    });\n    if (this.option(\"viewsCount\") > 1) {\n      previousValue.forEach(item => {\n        this.setAria(\"selected\", void 0, this._additionalView._getCellByDate(item));\n      });\n      value.forEach(item => {\n        this.setAria(\"selected\", true, this._additionalView._getCellByDate(item));\n      });\n    }\n  },\n  _updateAriaId: function (value) {\n    var _value;\n    value = null !== (_value = value) && void 0 !== _value ? _value : this.option(\"currentDate\");\n    var ariaId = \"dx-\" + new Guid();\n    var view = this._getActiveView(value);\n    var $newCell = view._getCellByDate(value);\n    this.setAria(\"id\", ariaId, $newCell);\n    this.setAria(\"activedescendant\", ariaId);\n    this._onContouredChanged(ariaId);\n  },\n  _suppressingNavigation: function (callback, args) {\n    this._suppressNavigation = true;\n    callback.apply(this, args);\n    delete this._suppressNavigation;\n  },\n  _optionChanged: function (args) {\n    var {\n      value: value,\n      previousValue: previousValue\n    } = args;\n    switch (args.name) {\n      case \"width\":\n        this.callBase(args);\n        this._clearViewWidthCache();\n        break;\n      case \"min\":\n      case \"max\":\n        this.min = void 0;\n        this.max = void 0;\n        this._suppressingNavigation(this._updateCurrentDate, [this.option(\"currentDate\")]);\n        this._refreshViews();\n        this._renderNavigator();\n        break;\n      case \"selectionMode\":\n        this._refreshSelectionStrategy();\n        this._initCurrentDate();\n        break;\n      case \"firstDayOfWeek\":\n        this._refreshViews();\n        this._updateButtonsVisibility();\n        break;\n      case \"currentDate\":\n        this.setAria(\"id\", void 0, this._view._getCellByDate(previousValue));\n        this._updateCurrentDate(value);\n        break;\n      case \"zoomLevel\":\n        this.$element().removeClass(CALENDAR_VIEW_CLASS + \"-\" + previousValue);\n        this._correctZoomLevel();\n        this._refreshViews();\n        this._renderNavigator();\n        this._updateAriaId();\n        break;\n      case \"minZoomLevel\":\n      case \"maxZoomLevel\":\n        this._correctZoomLevel();\n        this._updateButtonsVisibility();\n        break;\n      case \"value\":\n        if (\"single\" === this.option(\"selectionMode\")) {\n          this._selectionStrategy.processValueChanged([value], [previousValue]);\n        }\n        this._setSubmitValue(value);\n        this.callBase(args);\n        break;\n      case \"values\":\n        if (\"single\" !== this.option(\"selectionMode\")) {\n          this._selectionStrategy.processValueChanged(value, previousValue);\n        }\n        this._raiseValueChangeAction(value, previousValue);\n        this._saveValueChangeEvent(void 0);\n        break;\n      case \"viewsCount\":\n        this._refreshViews();\n        this._renderNavigator();\n        break;\n      case \"onCellClick\":\n        this._view.option(\"onCellClick\", value);\n        break;\n      case \"onContouredChanged\":\n        this._onContouredChanged = this._createActionByOption(\"onContouredChanged\");\n        break;\n      case \"disabledDates\":\n      case \"dateSerializationFormat\":\n      case \"cellTemplate\":\n      case \"showTodayButton\":\n        this._invalidate();\n        break;\n      case \"skipFocusCheck\":\n        break;\n      case \"_todayDate\":\n      case \"showWeekNumbers\":\n      case \"weekNumberRule\":\n        this._refreshViews();\n        break;\n      default:\n        this.callBase(args);\n    }\n  },\n  getContouredDate: function () {\n    return this._view.option(\"contouredDate\");\n  }\n});\nregisterComponent(\"dxCalendar\", Calendar);\nexport default Calendar;","map":{"version":3,"names":["_extends","getWidth","$","Guid","registerComponent","noop","isNumeric","isString","isFunction","isDefined","inRange","extend","Button","Editor","Swipeable","Navigator","Views","move","dateUtils","dateSerialization","devices","fx","hasWindow","messageLocalization","dateLocalization","FunctionTemplate","isCommandKeyPressed","addNamespace","CalendarSingleSelectionStrategy","CalendarMultiSelectionStrategy","CalendarRangeSelectionStrategy","end","hoverEndEventName","eventsEngine","CALENDAR_CLASS","CALENDAR_BODY_CLASS","CALENDAR_CELL_CLASS","CALENDAR_FOOTER_CLASS","CALENDAR_TODAY_BUTTON_CLASS","CALENDAR_HAS_FOOTER_CLASS","CALENDAR_VIEWS_WRAPPER_CLASS","CALENDAR_VIEW_CLASS","CALENDAR_MULTIVIEW_CLASS","CALENDAR_RANGE_CLASS","FOCUSED_STATE_CLASS","GESTURE_COVER_CLASS","ANIMATION_DURATION_SHOW_VIEW","POP_ANIMATION_FROM","POP_ANIMATION_TO","CALENDAR_INPUT_STANDARD_PATTERN","CALENDAR_DATE_VALUE_KEY","CALENDAR_DXHOVEREND_EVENT_NAME","LEVEL_COMPARE_MAP","month","year","decade","century","ZOOM_LEVEL","MONTH","YEAR","DECADE","CENTURY","SELECTION_STRATEGIES","SingleSelection","MultiSelection","RangeSelection","elementHasFocus","element","hasClass","Calendar","inherit","_activeStateUnit","_getDefaultOptions","callBase","hoverStateEnabled","activeStateEnabled","currentDate","Date","value","values","dateSerializationFormat","min","max","firstDayOfWeek","viewsCount","zoomLevel","maxZoomLevel","minZoomLevel","selectionMode","showTodayButton","showWeekNumbers","weekNumberRule","cellTemplate","disabledDates","onCellClick","onContouredChanged","skipFocusCheck","_todayDate","_defaultOptionsRules","concat","device","real","deviceType","isSimulator","options","focusStateEnabled","_supportedKeys","rightArrow","e","preventDefault","_waitRenderView","_moveCurrentDateByOffset","_getRtlCorrection","leftArrow","upArrow","_navigateUp","isAnimating","_view","$element","option","downArrow","_navigateDown","home","_dateOption","isDateDisabled","date","sameView","getViewFirstCellDate","_moveToClosestAvailableDate","getViewLastCellDate","pageUp","pageDown","tab","enter","_enterKeyHandler","_isMaxZoomLevel","_updateTimeComponent","_selectionStrategy","selectValue","_getSerializationFormat","optionName","getDateSerializationFormat","_convertToDate","deserializeDate","_dateValue","event","Array","isArray","type","cellElement","_getContouredCell","get","target","_saveValueChangeEvent","optionValue","arguments","length","_this$option","map","serializationFormat","serializedValue","serializeDate","_shiftDate","offset","reverse","setDate","getDate","setMonth","getMonth","setFullYear","getFullYear","baseDate","maxDate","_getMaxDate","minDate","_getMinDate","isDateForwardInNeighborView","_areDatesInNeighborView","isDateForwardInRange","dateForward","_skipNavigate","_areDatesInSameView","date1","date2","getYear","parseInt","a","b","abs","Math","isCurrentDateAvailable","_isDateNotAvailable","isDateForwardAvailable","isDateBackwardAvailable","isDateForwardInStartView","isDateBackwardInStartView","dateBackward","_init","_initSelectionStrategy","_correctZoomLevel","_initCurrentDate","_initActions","strategyName","_getSelectionStrategyName","strategy","NAME","_refreshSelectionStrategy","_refresh","_this$_getNormalizedD","_getNormalizedDate","getDefaultCurrentDate","normalizeDate","_getDate","_cellClickAction","_createActionByOption","_onContouredChanged","_initTemplates","_templateManager","addDefaultTemplates","cell","data","model","container","append","text","String","_updateCurrentDate","_$viewsWrapper","stop","normalizedDate","getTime","_getViewsOffset","_isOtherViewCellClicked","_suppressNavigation","_additionalView","_refreshViews","_setViewContoured","_updateAriaId","_renderNavigator","_navigate","_isAdditionalViewDate","_getFirstAvailableDate","_getActiveView","_focusTarget","_this$_additionalView","view","_rangeMin","_rangeMax","startDate","endDate","_getMonthsOffset","zoomCorrection","yearOffset","monthOffset","_alreadyViewRender","_getDateByOffset","_waitRenderViewTimeout","setTimeout","_date","currentDay","difference","getDifferenceInMonth","lastDay","getLastMonthDate","_initMarkup","_renderSubmitElement","addClass","toggleClass","_renderBody","$body","_renderViews","_renderEvents","prepend","_navigator","_renderSwipeable","_renderFooter","updateAriaSelected","setAria","_render","_getKeyboardListeners","_renderSpecificView","beforeDate","_beforeView","_isViewAvailable","afterDate","_afterView","_translateViews","specificView","$view","appendTo","config","_viewConfig","_createComponent","_this$option2","_injectComponent","bind","getViewOptions","firstDayOfWeekIndex","tabIndex","_cellClickHandler","_getTemplateByOption","allowValueSelection","off","on","_updateViewsOption","func","that","params","component","getViewMinBoundaryDate","getViewMaxBoundaryDate","dateInRange","left","top","_moveViewElement","coefficient","_getViewPosition","rtlCorrection","nextView","getViewDown","isMaxZoomLevel","currentTarget","newValue","result","currentValue","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","setMilliseconds","getMilliseconds","newCurrentDate","_animateShowView","_navigatorConfig","_getViewsCaption","_updateButtonsVisibility","rtlEnabled","onClick","_navigatorClickHandler","onCaptionClick","direction","additionalViewActive","shouldDoubleOffset","getViewUp","_isMinZoomLevel","toggleButton","_swipeable","onStart","_swipeStartHandler","onUpdated","_swipeUpdateHandler","onEnd","_swipeEndHandler","itemSizeFunc","_viewWidth","_toggleGestureCoverCursor","maxLeftOffset","_getRequiredView","maxRightOffset","cursor","css","name","isRtl","_updateNavigatorCaption","targetOffset","moveOffset","isAdditionalViewActive","_animateWrapper","_isDateInInvalidRange","_viewWidthValue","isMultiView","additionalView","caption","getNavigatorCaption","additionalViewCaption","isBoundary","$todayButton","format","args","_toTodayView","stylingMode","integrationOptions","_$footer","_$submitElement","attr","_setSubmitValue","dateValue","_getSubmitElement","val","_popAnimationView","from","to","duration","animate","scale","opacity","newView","remove","offsetSign","endPosition","viewsWrapperPosition","position","_preventViewChangeAnimation","_wrapperAnimationEndHandler","done","today","newDate","_rearrangeViews","_resetLocation","_this$viewToRemoveKey","viewOffset","viewToCreateKey","viewToRemoveKey","viewBeforeCreateKey","viewAfterRemoveKey","destinationDate","dateByOffset","_clean","_clearViewWidthCache","_disposeViews","_dispose","clearTimeout","_resetActiveState","_visibilityChanged","_focusInHandler","apply","_focusOutHandler","_this$_additionalView2","_this$_additionalView3","_this$_beforeView","_this$_afterView","_setViewsMinOption","_restoreViewsMinMaxOptions","_setViewsMaxOption","_updateAriaSelected","previousValue","forEach","item","_getCellByDate","_value","ariaId","$newCell","_suppressingNavigation","callback","_optionChanged","removeClass","processValueChanged","_raiseValueChangeAction","_invalidate","getContouredDate"],"sources":["C:/Users/Michal Abargel/Desktop/FULLSTACK_PROJECTS/PrivateLessones/F(x)/client/gui/node_modules/devextreme/esm/ui/calendar/ui.calendar.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/calendar/ui.calendar.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport {\r\n    getWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport Guid from \"../../core/guid\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isNumeric,\r\n    isString,\r\n    isFunction,\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    inRange\r\n} from \"../../core/utils/math\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport Button from \"../button\";\r\nimport Editor from \"../editor/editor\";\r\nimport Swipeable from \"../../events/gesture/swipeable\";\r\nimport Navigator from \"./ui.calendar.navigator\";\r\nimport Views from \"./ui.calendar.views\";\r\nimport {\r\n    move\r\n} from \"../../animation/translator\";\r\nimport dateUtils from \"../../core/utils/date\";\r\nimport dateSerialization from \"../../core/utils/date_serialization\";\r\nimport devices from \"../../core/devices\";\r\nimport fx from \"../../animation/fx\";\r\nimport {\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport dateLocalization from \"../../localization/date\";\r\nimport {\r\n    FunctionTemplate\r\n} from \"../../core/templates/function_template\";\r\nimport {\r\n    isCommandKeyPressed,\r\n    addNamespace\r\n} from \"../../events/utils/index\";\r\nimport CalendarSingleSelectionStrategy from \"./ui.calendar.single.selection.strategy\";\r\nimport CalendarMultiSelectionStrategy from \"./ui.calendar.multi.selection.strategy\";\r\nimport CalendarRangeSelectionStrategy from \"./ui.calendar.range.selection.strategy\";\r\nimport {\r\n    end as hoverEndEventName\r\n} from \"../../events/hover\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nvar CALENDAR_CLASS = \"dx-calendar\";\r\nvar CALENDAR_BODY_CLASS = \"dx-calendar-body\";\r\nvar CALENDAR_CELL_CLASS = \"dx-calendar-cell\";\r\nvar CALENDAR_FOOTER_CLASS = \"dx-calendar-footer\";\r\nvar CALENDAR_TODAY_BUTTON_CLASS = \"dx-calendar-today-button\";\r\nvar CALENDAR_HAS_FOOTER_CLASS = \"dx-calendar-with-footer\";\r\nvar CALENDAR_VIEWS_WRAPPER_CLASS = \"dx-calendar-views-wrapper\";\r\nvar CALENDAR_VIEW_CLASS = \"dx-calendar-view\";\r\nvar CALENDAR_MULTIVIEW_CLASS = \"dx-calendar-multiview\";\r\nvar CALENDAR_RANGE_CLASS = \"dx-calendar-range\";\r\nvar FOCUSED_STATE_CLASS = \"dx-state-focused\";\r\nvar GESTURE_COVER_CLASS = \"dx-gesture-cover\";\r\nvar ANIMATION_DURATION_SHOW_VIEW = 250;\r\nvar POP_ANIMATION_FROM = .6;\r\nvar POP_ANIMATION_TO = 1;\r\nvar CALENDAR_INPUT_STANDARD_PATTERN = \"yyyy-MM-dd\";\r\nvar CALENDAR_DATE_VALUE_KEY = \"dxDateValueKey\";\r\nvar CALENDAR_DXHOVEREND_EVENT_NAME = addNamespace(hoverEndEventName, \"dxCalendar\");\r\nvar LEVEL_COMPARE_MAP = {\r\n    month: 3,\r\n    year: 2,\r\n    decade: 1,\r\n    century: 0\r\n};\r\nvar ZOOM_LEVEL = {\r\n    MONTH: \"month\",\r\n    YEAR: \"year\",\r\n    DECADE: \"decade\",\r\n    CENTURY: \"century\"\r\n};\r\nvar SELECTION_STRATEGIES = {\r\n    SingleSelection: CalendarSingleSelectionStrategy,\r\n    MultiSelection: CalendarMultiSelectionStrategy,\r\n    RangeSelection: CalendarRangeSelectionStrategy\r\n};\r\n\r\nfunction elementHasFocus(element) {\r\n    return element.hasClass(FOCUSED_STATE_CLASS)\r\n}\r\nvar Calendar = Editor.inherit({\r\n    _activeStateUnit: \".\" + CALENDAR_CELL_CLASS,\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            hoverStateEnabled: true,\r\n            activeStateEnabled: true,\r\n            currentDate: new Date,\r\n            value: null,\r\n            values: [],\r\n            dateSerializationFormat: void 0,\r\n            min: new Date(1e3, 0),\r\n            max: new Date(3e3, 0),\r\n            firstDayOfWeek: void 0,\r\n            viewsCount: 1,\r\n            zoomLevel: ZOOM_LEVEL.MONTH,\r\n            maxZoomLevel: ZOOM_LEVEL.MONTH,\r\n            minZoomLevel: ZOOM_LEVEL.CENTURY,\r\n            selectionMode: \"single\",\r\n            showTodayButton: false,\r\n            showWeekNumbers: false,\r\n            weekNumberRule: \"auto\",\r\n            cellTemplate: \"cell\",\r\n            disabledDates: null,\r\n            onCellClick: null,\r\n            onContouredChanged: null,\r\n            skipFocusCheck: false,\r\n            _todayDate: () => new Date\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return \"desktop\" === devices.real().deviceType && !devices.isSimulator()\r\n            },\r\n            options: {\r\n                focusStateEnabled: true\r\n            }\r\n        }])\r\n    },\r\n    _supportedKeys: function() {\r\n        return extend(this.callBase(), {\r\n            rightArrow: function(e) {\r\n                e.preventDefault();\r\n                if (isCommandKeyPressed(e)) {\r\n                    this._waitRenderView(1)\r\n                } else {\r\n                    this._moveCurrentDateByOffset(1 * this._getRtlCorrection())\r\n                }\r\n            },\r\n            leftArrow: function(e) {\r\n                e.preventDefault();\r\n                if (isCommandKeyPressed(e)) {\r\n                    this._waitRenderView(-1)\r\n                } else {\r\n                    this._moveCurrentDateByOffset(-1 * this._getRtlCorrection())\r\n                }\r\n            },\r\n            upArrow: function(e) {\r\n                e.preventDefault();\r\n                if (isCommandKeyPressed(e)) {\r\n                    this._navigateUp()\r\n                } else {\r\n                    if (fx.isAnimating(this._view.$element())) {\r\n                        return\r\n                    }\r\n                    this._moveCurrentDateByOffset(-1 * this._view.option(\"colCount\"))\r\n                }\r\n            },\r\n            downArrow: function(e) {\r\n                e.preventDefault();\r\n                if (isCommandKeyPressed(e)) {\r\n                    this._navigateDown()\r\n                } else {\r\n                    if (fx.isAnimating(this._view.$element())) {\r\n                        return\r\n                    }\r\n                    this._moveCurrentDateByOffset(1 * this._view.option(\"colCount\"))\r\n                }\r\n            },\r\n            home: function(e) {\r\n                e.preventDefault();\r\n                var zoomLevel = this.option(\"zoomLevel\");\r\n                var currentDate = this.option(\"currentDate\");\r\n                var min = this._dateOption(\"min\");\r\n                if (this._view.isDateDisabled(currentDate)) {\r\n                    return\r\n                }\r\n                var date = dateUtils.sameView(zoomLevel, currentDate, min) ? min : dateUtils.getViewFirstCellDate(zoomLevel, currentDate);\r\n                this._moveToClosestAvailableDate(date)\r\n            },\r\n            end: function(e) {\r\n                e.preventDefault();\r\n                var zoomLevel = this.option(\"zoomLevel\");\r\n                var currentDate = this.option(\"currentDate\");\r\n                var max = this._dateOption(\"max\");\r\n                if (this._view.isDateDisabled(currentDate)) {\r\n                    return\r\n                }\r\n                var date = dateUtils.sameView(zoomLevel, currentDate, max) ? max : dateUtils.getViewLastCellDate(zoomLevel, currentDate);\r\n                this._moveToClosestAvailableDate(date)\r\n            },\r\n            pageUp: function(e) {\r\n                e.preventDefault();\r\n                this._waitRenderView(-1 * this._getRtlCorrection())\r\n            },\r\n            pageDown: function(e) {\r\n                e.preventDefault();\r\n                this._waitRenderView(1 * this._getRtlCorrection())\r\n            },\r\n            tab: noop,\r\n            enter: this._enterKeyHandler\r\n        })\r\n    },\r\n    _enterKeyHandler: function(e) {\r\n        if (!this._isMaxZoomLevel()) {\r\n            this._navigateDown()\r\n        } else if (!this._view.isDateDisabled(this.option(\"currentDate\"))) {\r\n            var value = this._updateTimeComponent(this.option(\"currentDate\"));\r\n            this._selectionStrategy.selectValue(value, e)\r\n        }\r\n    },\r\n    _getSerializationFormat: function(optionName) {\r\n        var value = this.option(optionName || \"value\");\r\n        if (this.option(\"dateSerializationFormat\")) {\r\n            return this.option(\"dateSerializationFormat\")\r\n        }\r\n        if (isNumeric(value)) {\r\n            return \"number\"\r\n        }\r\n        if (!isString(value)) {\r\n            return\r\n        }\r\n        return dateSerialization.getDateSerializationFormat(value)\r\n    },\r\n    _convertToDate: function(value) {\r\n        return dateSerialization.deserializeDate(value)\r\n    },\r\n    _dateValue: function(value, event) {\r\n        var optionName = Array.isArray(value) ? \"values\" : \"value\";\r\n        if (event) {\r\n            if (\"keydown\" === event.type) {\r\n                var cellElement = this._view._getContouredCell().get(0);\r\n                event.target = cellElement\r\n            }\r\n            this._saveValueChangeEvent(event)\r\n        }\r\n        this._dateOption(optionName, value)\r\n    },\r\n    _dateOption: function(optionName, optionValue) {\r\n        if (1 === arguments.length) {\r\n            var _this$option;\r\n            var values = null !== (_this$option = this.option(\"values\")) && void 0 !== _this$option ? _this$option : [];\r\n            return \"values\" === optionName ? values.map(value => this._convertToDate(value)) : this._convertToDate(this.option(optionName))\r\n        }\r\n        var serializationFormat = this._getSerializationFormat(optionName);\r\n        var serializedValue = \"values\" === optionName ? (null === optionValue || void 0 === optionValue ? void 0 : optionValue.map(value => dateSerialization.serializeDate(value, serializationFormat))) || [] : dateSerialization.serializeDate(optionValue, serializationFormat);\r\n        this.option(optionName, serializedValue)\r\n    },\r\n    _shiftDate: function(zoomLevel, date, offset, reverse) {\r\n        switch (zoomLevel) {\r\n            case ZOOM_LEVEL.MONTH:\r\n                date.setDate(date.getDate() + offset * reverse);\r\n                break;\r\n            case ZOOM_LEVEL.YEAR:\r\n                date.setMonth(date.getMonth() + offset * reverse);\r\n                break;\r\n            case ZOOM_LEVEL.DECADE:\r\n                date.setFullYear(date.getFullYear() + offset * reverse);\r\n                break;\r\n            case ZOOM_LEVEL.CENTURY:\r\n                date.setFullYear(date.getFullYear() + 10 * offset * reverse)\r\n        }\r\n    },\r\n    _moveCurrentDateByOffset: function(offset) {\r\n        var baseDate = this.option(\"currentDate\");\r\n        var currentDate = new Date(baseDate);\r\n        var zoomLevel = this.option(\"zoomLevel\");\r\n        this._shiftDate(zoomLevel, currentDate, offset, 1);\r\n        var maxDate = this._getMaxDate();\r\n        var minDate = this._getMinDate();\r\n        var isDateForwardInNeighborView = this._areDatesInNeighborView(zoomLevel, currentDate, baseDate);\r\n        var isDateForwardInRange = inRange(currentDate, minDate, maxDate) && isDateForwardInNeighborView;\r\n        var dateForward = new Date(currentDate);\r\n        while (isDateForwardInRange) {\r\n            if (!this._view.isDateDisabled(dateForward)) {\r\n                currentDate = dateForward;\r\n                break\r\n            }\r\n            this._shiftDate(zoomLevel, dateForward, offset, 1);\r\n            isDateForwardInNeighborView = this._areDatesInNeighborView(zoomLevel, dateForward, baseDate);\r\n            isDateForwardInRange = inRange(dateForward, minDate, maxDate) && isDateForwardInNeighborView\r\n        }\r\n        if (this._view.isDateDisabled(baseDate) || this._view.isDateDisabled(currentDate)) {\r\n            this._waitRenderView(offset > 0 ? 1 : -1)\r\n        } else {\r\n            this._skipNavigate = true;\r\n            this.option(\"currentDate\", currentDate)\r\n        }\r\n    },\r\n    _areDatesInSameView(zoomLevel, date1, date2) {\r\n        switch (zoomLevel) {\r\n            case ZOOM_LEVEL.MONTH:\r\n                return date1.getMonth() === date2.getMonth();\r\n            case ZOOM_LEVEL.YEAR:\r\n                return date1.getYear() === date2.getYear();\r\n            case ZOOM_LEVEL.DECADE:\r\n                return parseInt(date1.getYear() / 10) === parseInt(date2.getYear() / 10);\r\n            case ZOOM_LEVEL.CENTURY:\r\n                return parseInt(date1.getYear() / 100) === parseInt(date2.getYear() / 100)\r\n        }\r\n    },\r\n    _areDatesInNeighborView(zoomLevel, date1, date2) {\r\n        switch (zoomLevel) {\r\n            case ZOOM_LEVEL.MONTH:\r\n                return (a = date1.getMonth(), b = date2.getMonth(), abs = Math.abs(a - b), Math.min(abs, 12 - abs)) <= 1;\r\n            case ZOOM_LEVEL.YEAR:\r\n                return Math.abs(date1.getYear() - date2.getYear()) <= 1;\r\n            case ZOOM_LEVEL.DECADE:\r\n                return Math.abs(date1.getYear() - date2.getYear()) <= 10;\r\n            case ZOOM_LEVEL.CENTURY:\r\n                return Math.abs(date1.getYear() - date2.getYear()) <= 100\r\n        }\r\n        var a, b, abs\r\n    },\r\n    _moveToClosestAvailableDate: function() {\r\n        var baseDate = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.option(\"currentDate\");\r\n        var currentDate = new Date(baseDate);\r\n        var zoomLevel = this.option(\"zoomLevel\");\r\n        var isCurrentDateAvailable = !this._isDateNotAvailable(currentDate);\r\n        var isDateForwardAvailable = isCurrentDateAvailable;\r\n        var isDateBackwardAvailable = isCurrentDateAvailable;\r\n        var isDateForwardInStartView;\r\n        var isDateBackwardInStartView;\r\n        var dateForward = new Date(currentDate);\r\n        var dateBackward = new Date(currentDate);\r\n        do {\r\n            if (isDateForwardAvailable) {\r\n                currentDate = dateForward;\r\n                break\r\n            }\r\n            if (isDateBackwardAvailable) {\r\n                currentDate = dateBackward;\r\n                break\r\n            }\r\n            this._shiftDate(zoomLevel, dateForward, 1, 1);\r\n            this._shiftDate(zoomLevel, dateBackward, 1, -1);\r\n            isDateForwardInStartView = this._areDatesInSameView(zoomLevel, dateForward, baseDate);\r\n            isDateBackwardInStartView = this._areDatesInSameView(zoomLevel, dateBackward, baseDate);\r\n            isDateForwardAvailable = isDateForwardInStartView && !this._isDateNotAvailable(dateForward);\r\n            isDateBackwardAvailable = isDateBackwardInStartView && !this._isDateNotAvailable(dateBackward)\r\n        } while (isDateForwardInStartView || isDateBackwardInStartView);\r\n        this.option(\"currentDate\", currentDate)\r\n    },\r\n    _isDateNotAvailable: function(date) {\r\n        var maxDate = this._getMaxDate();\r\n        var minDate = this._getMinDate();\r\n        return !inRange(date, minDate, maxDate) || this._view.isDateDisabled(date)\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._initSelectionStrategy();\r\n        this._correctZoomLevel();\r\n        this._initCurrentDate();\r\n        this._initActions()\r\n    },\r\n    _initSelectionStrategy: function() {\r\n        var strategyName = this._getSelectionStrategyName();\r\n        var strategy = SELECTION_STRATEGIES[strategyName];\r\n        if (!this._selectionStrategy || this._selectionStrategy.NAME !== strategyName) {\r\n            this._selectionStrategy = new strategy(this)\r\n        }\r\n    },\r\n    _refreshSelectionStrategy: function() {\r\n        this._initSelectionStrategy();\r\n        this._refresh()\r\n    },\r\n    _getSelectionStrategyName: function() {\r\n        var selectionMode = this.option(\"selectionMode\");\r\n        switch (selectionMode) {\r\n            case \"multi\":\r\n                return \"MultiSelection\";\r\n            case \"range\":\r\n                return \"RangeSelection\";\r\n            default:\r\n                return \"SingleSelection\"\r\n        }\r\n    },\r\n    _correctZoomLevel: function() {\r\n        var minZoomLevel = this.option(\"minZoomLevel\");\r\n        var maxZoomLevel = this.option(\"maxZoomLevel\");\r\n        var zoomLevel = this.option(\"zoomLevel\");\r\n        if (LEVEL_COMPARE_MAP[maxZoomLevel] < LEVEL_COMPARE_MAP[minZoomLevel]) {\r\n            return\r\n        }\r\n        if (LEVEL_COMPARE_MAP[zoomLevel] > LEVEL_COMPARE_MAP[maxZoomLevel]) {\r\n            this.option(\"zoomLevel\", maxZoomLevel)\r\n        } else if (LEVEL_COMPARE_MAP[zoomLevel] < LEVEL_COMPARE_MAP[minZoomLevel]) {\r\n            this.option(\"zoomLevel\", minZoomLevel)\r\n        }\r\n    },\r\n    _initCurrentDate: function() {\r\n        var _this$_getNormalizedD;\r\n        var currentDate = null !== (_this$_getNormalizedD = this._getNormalizedDate(this._selectionStrategy.getDefaultCurrentDate())) && void 0 !== _this$_getNormalizedD ? _this$_getNormalizedD : this._getNormalizedDate(this.option(\"currentDate\"));\r\n        this.option(\"currentDate\", currentDate)\r\n    },\r\n    _getNormalizedDate: function(date) {\r\n        date = dateUtils.normalizeDate(date, this._getMinDate(), this._getMaxDate());\r\n        return isDefined(date) ? this._getDate(date) : date\r\n    },\r\n    _initActions: function() {\r\n        this._cellClickAction = this._createActionByOption(\"onCellClick\");\r\n        this._onContouredChanged = this._createActionByOption(\"onContouredChanged\")\r\n    },\r\n    _initTemplates: function() {\r\n        this._templateManager.addDefaultTemplates({\r\n            cell: new FunctionTemplate((function(options) {\r\n                var data = options.model;\r\n                $(options.container).append($(\"<span>\").text(data && data.text || String(data)))\r\n            }))\r\n        });\r\n        this.callBase()\r\n    },\r\n    _updateCurrentDate: function(date) {\r\n        if (fx.isAnimating(this._$viewsWrapper)) {\r\n            fx.stop(this._$viewsWrapper, true)\r\n        }\r\n        var min = this._getMinDate();\r\n        var max = this._getMaxDate();\r\n        if (min > max) {\r\n            this.option(\"currentDate\", new Date);\r\n            return\r\n        }\r\n        var normalizedDate = this._getNormalizedDate(date);\r\n        if (date.getTime() !== normalizedDate.getTime()) {\r\n            this.option(\"currentDate\", new Date(normalizedDate));\r\n            return\r\n        }\r\n        var offset = this._getViewsOffset(this._view.option(\"date\"), normalizedDate);\r\n        if (0 !== offset && !this._isMaxZoomLevel() && this._isOtherViewCellClicked) {\r\n            offset = 0\r\n        }\r\n        if (this._view && 0 !== offset && !this._suppressNavigation) {\r\n            if (this._additionalView) {\r\n                if (offset > 2 || offset < -1) {\r\n                    this._refreshViews();\r\n                    this._setViewContoured(normalizedDate);\r\n                    this._updateAriaId(normalizedDate);\r\n                    this._renderNavigator()\r\n                } else if (1 === offset && this._skipNavigate) {\r\n                    this._setViewContoured(normalizedDate);\r\n                    this._updateAriaId(normalizedDate)\r\n                } else {\r\n                    this._navigate(offset, normalizedDate)\r\n                }\r\n            } else {\r\n                this._navigate(offset, normalizedDate)\r\n            }\r\n        } else {\r\n            this._renderNavigator();\r\n            this._setViewContoured(normalizedDate);\r\n            this._updateAriaId(normalizedDate)\r\n        }\r\n        this._skipNavigate = false\r\n    },\r\n    _isAdditionalViewDate(date) {\r\n        if (!this._additionalView) {\r\n            return false\r\n        }\r\n        return date >= this._additionalView._getFirstAvailableDate()\r\n    },\r\n    _getActiveView: function(date) {\r\n        return this._isAdditionalViewDate(date) ? this._additionalView : this._view\r\n    },\r\n    _setViewContoured: function(date) {\r\n        if (this.option(\"skipFocusCheck\") || elementHasFocus(this._focusTarget())) {\r\n            var _this$_additionalView;\r\n            this._view.option(\"contouredDate\", null);\r\n            null === (_this$_additionalView = this._additionalView) || void 0 === _this$_additionalView ? void 0 : _this$_additionalView.option(\"contouredDate\", null);\r\n            var view = this._isAdditionalViewDate(date) ? this._additionalView : this._view;\r\n            view.option(\"contouredDate\", date)\r\n        }\r\n    },\r\n    _getMinDate: function() {\r\n        var _rangeMin = this.option(\"_rangeMin\");\r\n        if (_rangeMin) {\r\n            return _rangeMin\r\n        }\r\n        if (this.min) {\r\n            return this.min\r\n        }\r\n        this.min = this._dateOption(\"min\") || new Date(1e3, 0);\r\n        return this.min\r\n    },\r\n    _getMaxDate: function() {\r\n        var _rangeMax = this.option(\"_rangeMax\");\r\n        if (_rangeMax) {\r\n            return _rangeMax\r\n        }\r\n        if (this.max) {\r\n            return this.max\r\n        }\r\n        this.max = this._dateOption(\"max\") || new Date(3e3, 0);\r\n        return this.max\r\n    },\r\n    _getViewsOffset: function(startDate, endDate) {\r\n        var zoomLevel = this.option(\"zoomLevel\");\r\n        if (zoomLevel === ZOOM_LEVEL.MONTH) {\r\n            return this._getMonthsOffset(startDate, endDate)\r\n        }\r\n        var zoomCorrection;\r\n        switch (zoomLevel) {\r\n            case ZOOM_LEVEL.CENTURY:\r\n                zoomCorrection = 100;\r\n                break;\r\n            case ZOOM_LEVEL.DECADE:\r\n                zoomCorrection = 10;\r\n                break;\r\n            default:\r\n                zoomCorrection = 1\r\n        }\r\n        return parseInt(endDate.getFullYear() / zoomCorrection) - parseInt(startDate.getFullYear() / zoomCorrection)\r\n    },\r\n    _getMonthsOffset: function(startDate, endDate) {\r\n        var yearOffset = endDate.getFullYear() - startDate.getFullYear();\r\n        var monthOffset = endDate.getMonth() - startDate.getMonth();\r\n        return 12 * yearOffset + monthOffset\r\n    },\r\n    _waitRenderView: function(offset) {\r\n        if (this._alreadyViewRender) {\r\n            return\r\n        }\r\n        this._alreadyViewRender = true;\r\n        var date = this._getDateByOffset(offset * this._getRtlCorrection());\r\n        this._moveToClosestAvailableDate(date);\r\n        this._waitRenderViewTimeout = setTimeout(() => {\r\n            this._alreadyViewRender = false\r\n        })\r\n    },\r\n    _getRtlCorrection: function() {\r\n        return this.option(\"rtlEnabled\") ? -1 : 1\r\n    },\r\n    _getDateByOffset: function(offset, date) {\r\n        var _date;\r\n        date = this._getDate(null !== (_date = date) && void 0 !== _date ? _date : this.option(\"currentDate\"));\r\n        var currentDay = date.getDate();\r\n        var difference = dateUtils.getDifferenceInMonth(this.option(\"zoomLevel\")) * offset;\r\n        date.setDate(1);\r\n        date.setMonth(date.getMonth() + difference);\r\n        var lastDay = dateUtils.getLastMonthDate(date).getDate();\r\n        date.setDate(currentDay > lastDay ? lastDay : currentDay);\r\n        return date\r\n    },\r\n    _focusTarget: function() {\r\n        return this.$element()\r\n    },\r\n    _initMarkup: function() {\r\n        this._renderSubmitElement();\r\n        this.callBase();\r\n        var $element = this.$element();\r\n        $element.addClass(CALENDAR_CLASS);\r\n        $element.toggleClass(CALENDAR_RANGE_CLASS, \"range\" === this.option(\"selectionMode\"));\r\n        this._renderBody();\r\n        $element.append(this.$body);\r\n        this._renderViews();\r\n        this._renderEvents();\r\n        this._renderNavigator();\r\n        $element.prepend(this._navigator.$element());\r\n        this._renderSwipeable();\r\n        this._renderFooter();\r\n        this._selectionStrategy.updateAriaSelected();\r\n        this._updateAriaId();\r\n        this.setAria(\"role\", \"application\");\r\n        this._moveToClosestAvailableDate()\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._setViewContoured(this.option(\"currentDate\"))\r\n    },\r\n    _renderBody: function() {\r\n        if (!this._$viewsWrapper) {\r\n            this.$body = $(\"<div>\").addClass(CALENDAR_BODY_CLASS);\r\n            this._$viewsWrapper = $(\"<div>\").addClass(CALENDAR_VIEWS_WRAPPER_CLASS);\r\n            this.$body.append(this._$viewsWrapper)\r\n        }\r\n    },\r\n    _getKeyboardListeners() {\r\n        return this.callBase().concat([this._view])\r\n    },\r\n    _renderViews: function() {\r\n        this.$element().addClass(CALENDAR_VIEW_CLASS + \"-\" + this.option(\"zoomLevel\"));\r\n        var {\r\n            currentDate: currentDate,\r\n            viewsCount: viewsCount\r\n        } = this.option();\r\n        this.$element().toggleClass(CALENDAR_MULTIVIEW_CLASS, viewsCount > 1);\r\n        this._view = this._renderSpecificView(currentDate);\r\n        if (hasWindow()) {\r\n            var beforeDate = this._getDateByOffset(-1, currentDate);\r\n            this._beforeView = this._isViewAvailable(beforeDate) ? this._renderSpecificView(beforeDate) : null;\r\n            var afterDate = this._getDateByOffset(viewsCount, currentDate);\r\n            afterDate.setDate(1);\r\n            this._afterView = this._isViewAvailable(afterDate) ? this._renderSpecificView(afterDate) : null\r\n        }\r\n        if (viewsCount > 1) {\r\n            this._additionalView = this._renderSpecificView(this._getDateByOffset(1, currentDate))\r\n        }\r\n        this._translateViews()\r\n    },\r\n    _renderSpecificView: function(date) {\r\n        var {\r\n            zoomLevel: zoomLevel\r\n        } = this.option();\r\n        var specificView = Views[zoomLevel];\r\n        var $view = $(\"<div>\").appendTo(this._$viewsWrapper);\r\n        var config = this._viewConfig(date);\r\n        var view = this._createComponent($view, specificView, config);\r\n        return view\r\n    },\r\n    _viewConfig: function(date) {\r\n        var _this$option2;\r\n        var disabledDates = this.option(\"disabledDates\");\r\n        disabledDates = isFunction(disabledDates) ? this._injectComponent(disabledDates.bind(this)) : disabledDates;\r\n        return _extends({}, this._selectionStrategy.getViewOptions(), {\r\n            date: date,\r\n            min: this._getMinDate(),\r\n            max: this._getMaxDate(),\r\n            firstDayOfWeek: null !== (_this$option2 = this.option(\"firstDayOfWeek\")) && void 0 !== _this$option2 ? _this$option2 : dateLocalization.firstDayOfWeekIndex(),\r\n            showWeekNumbers: this.option(\"showWeekNumbers\"),\r\n            weekNumberRule: this.option(\"weekNumberRule\"),\r\n            zoomLevel: this.option(\"zoomLevel\"),\r\n            tabIndex: void 0,\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            disabledDates: disabledDates,\r\n            onCellClick: this._cellClickHandler.bind(this),\r\n            cellTemplate: this._getTemplateByOption(\"cellTemplate\"),\r\n            allowValueSelection: this._isMaxZoomLevel(),\r\n            _todayDate: this.option(\"_todayDate\")\r\n        })\r\n    },\r\n    _renderEvents() {\r\n        eventsEngine.off(this._$viewsWrapper, CALENDAR_DXHOVEREND_EVENT_NAME);\r\n        if (\"range\" === this.option(\"selectionMode\")) {\r\n            eventsEngine.on(this._$viewsWrapper, CALENDAR_DXHOVEREND_EVENT_NAME, null, e => {\r\n                this._updateViewsOption(\"hoveredRange\", [])\r\n            })\r\n        }\r\n    },\r\n    _injectComponent: function(func) {\r\n        var that = this;\r\n        return function(params) {\r\n            extend(params, {\r\n                component: that\r\n            });\r\n            return func(params)\r\n        }\r\n    },\r\n    _isViewAvailable: function(date) {\r\n        var zoomLevel = this.option(\"zoomLevel\");\r\n        var min = dateUtils.getViewMinBoundaryDate(zoomLevel, this._getMinDate());\r\n        var max = dateUtils.getViewMaxBoundaryDate(zoomLevel, this._getMaxDate());\r\n        return dateUtils.dateInRange(date, min, max)\r\n    },\r\n    _translateViews: function() {\r\n        var {\r\n            viewsCount: viewsCount\r\n        } = this.option();\r\n        move(this._view.$element(), {\r\n            left: 0,\r\n            top: 0\r\n        });\r\n        this._moveViewElement(this._beforeView, -1);\r\n        this._moveViewElement(this._afterView, viewsCount);\r\n        this._moveViewElement(this._additionalView, 1)\r\n    },\r\n    _moveViewElement(view, coefficient) {\r\n        view && move(view.$element(), {\r\n            left: this._getViewPosition(coefficient),\r\n            top: 0\r\n        })\r\n    },\r\n    _getViewPosition: function(coefficient) {\r\n        var rtlCorrection = this.option(\"rtlEnabled\") ? -1 : 1;\r\n        return 100 * coefficient * rtlCorrection + \"%\"\r\n    },\r\n    _cellClickHandler: function(e) {\r\n        var zoomLevel = this.option(\"zoomLevel\");\r\n        var nextView = dateUtils.getViewDown(zoomLevel);\r\n        var isMaxZoomLevel = this._isMaxZoomLevel();\r\n        if (nextView && !isMaxZoomLevel) {\r\n            this._navigateDown(e.event.currentTarget)\r\n        } else {\r\n            var newValue = this._updateTimeComponent(e.value);\r\n            this._selectionStrategy.selectValue(newValue, e.event);\r\n            this._cellClickAction(e)\r\n        }\r\n    },\r\n    _updateTimeComponent: function(date) {\r\n        var result = new Date(date);\r\n        var currentValue = this._dateOption(\"value\");\r\n        if (currentValue) {\r\n            result.setHours(currentValue.getHours());\r\n            result.setMinutes(currentValue.getMinutes());\r\n            result.setSeconds(currentValue.getSeconds());\r\n            result.setMilliseconds(currentValue.getMilliseconds())\r\n        }\r\n        return result\r\n    },\r\n    _isMaxZoomLevel: function() {\r\n        return this.option(\"zoomLevel\") === this.option(\"maxZoomLevel\")\r\n    },\r\n    _navigateDown: function(cell) {\r\n        var zoomLevel = this.option(\"zoomLevel\");\r\n        if (this._isMaxZoomLevel()) {\r\n            return\r\n        }\r\n        var nextView = dateUtils.getViewDown(zoomLevel);\r\n        if (!nextView) {\r\n            return\r\n        }\r\n        var newCurrentDate = this._view.option(\"contouredDate\") || this._view.option(\"date\");\r\n        if (cell) {\r\n            newCurrentDate = $(cell).data(CALENDAR_DATE_VALUE_KEY)\r\n        }\r\n        this._isOtherViewCellClicked = true;\r\n        this.option(\"currentDate\", newCurrentDate);\r\n        this.option(\"zoomLevel\", nextView);\r\n        this._isOtherViewCellClicked = false;\r\n        this._renderNavigator();\r\n        this._animateShowView();\r\n        this._moveToClosestAvailableDate();\r\n        this._setViewContoured(this._getNormalizedDate(this.option(\"currentDate\")))\r\n    },\r\n    _renderNavigator: function() {\r\n        if (!this._navigator) {\r\n            this._navigator = new Navigator($(\"<div>\"), this._navigatorConfig())\r\n        }\r\n        this._navigator.option(\"text\", this._getViewsCaption(this._view, this._additionalView));\r\n        this._updateButtonsVisibility()\r\n    },\r\n    _navigatorConfig: function() {\r\n        var {\r\n            rtlEnabled: rtlEnabled\r\n        } = this.option();\r\n        return {\r\n            text: this._getViewsCaption(this._view, this._additionalView),\r\n            onClick: this._navigatorClickHandler.bind(this),\r\n            onCaptionClick: this._navigateUp.bind(this),\r\n            rtlEnabled: rtlEnabled\r\n        }\r\n    },\r\n    _navigatorClickHandler: function(e) {\r\n        var {\r\n            currentDate: currentDate,\r\n            viewsCount: viewsCount\r\n        } = this.option();\r\n        var offset = e.direction;\r\n        if (viewsCount > 1) {\r\n            var additionalViewActive = this._isAdditionalViewDate(currentDate);\r\n            var shouldDoubleOffset = additionalViewActive && offset < 0 || !additionalViewActive && offset > 0;\r\n            if (shouldDoubleOffset) {\r\n                offset *= 2\r\n            }\r\n        }\r\n        var newCurrentDate = this._getDateByOffset(offset, currentDate);\r\n        this._moveToClosestAvailableDate(newCurrentDate)\r\n    },\r\n    _navigateUp: function() {\r\n        var zoomLevel = this.option(\"zoomLevel\");\r\n        var nextView = dateUtils.getViewUp(zoomLevel);\r\n        if (!nextView || this._isMinZoomLevel(zoomLevel)) {\r\n            return\r\n        }\r\n        this.option(\"zoomLevel\", nextView);\r\n        this._renderNavigator();\r\n        this._animateShowView();\r\n        this._moveToClosestAvailableDate();\r\n        this._setViewContoured(this._getNormalizedDate(this.option(\"currentDate\")))\r\n    },\r\n    _isMinZoomLevel: function(zoomLevel) {\r\n        var min = this._getMinDate();\r\n        var max = this._getMaxDate();\r\n        return dateUtils.sameView(zoomLevel, min, max) || this.option(\"minZoomLevel\") === zoomLevel\r\n    },\r\n    _updateButtonsVisibility: function() {\r\n        this._navigator.toggleButton(\"next\", !isDefined(this._afterView));\r\n        this._navigator.toggleButton(\"prev\", !isDefined(this._beforeView))\r\n    },\r\n    _renderSwipeable: function() {\r\n        if (!this._swipeable) {\r\n            this._swipeable = this._createComponent(this.$element(), Swipeable, {\r\n                onStart: this._swipeStartHandler.bind(this),\r\n                onUpdated: this._swipeUpdateHandler.bind(this),\r\n                onEnd: this._swipeEndHandler.bind(this),\r\n                itemSizeFunc: this._viewWidth.bind(this)\r\n            })\r\n        }\r\n    },\r\n    _swipeStartHandler: function(e) {\r\n        fx.stop(this._$viewsWrapper, true);\r\n        var {\r\n            viewsCount: viewsCount\r\n        } = this.option();\r\n        this._toggleGestureCoverCursor(\"grabbing\");\r\n        e.event.maxLeftOffset = this._getRequiredView(\"next\") ? 1 / viewsCount : 0;\r\n        e.event.maxRightOffset = this._getRequiredView(\"prev\") ? 1 / viewsCount : 0\r\n    },\r\n    _toggleGestureCoverCursor: function(cursor) {\r\n        $(\".\".concat(GESTURE_COVER_CLASS)).css(\"cursor\", cursor)\r\n    },\r\n    _getRequiredView: function(name) {\r\n        var view;\r\n        var isRtl = this.option(\"rtlEnabled\");\r\n        if (\"next\" === name) {\r\n            view = isRtl ? this._beforeView : this._afterView\r\n        } else if (\"prev\" === name) {\r\n            view = isRtl ? this._afterView : this._beforeView\r\n        }\r\n        return view\r\n    },\r\n    _swipeUpdateHandler: function(e) {\r\n        var offset = e.event.offset;\r\n        move(this._$viewsWrapper, {\r\n            left: offset * this._viewWidth(),\r\n            top: 0\r\n        });\r\n        this._updateNavigatorCaption(offset)\r\n    },\r\n    _swipeEndHandler: function(e) {\r\n        this._toggleGestureCoverCursor(\"auto\");\r\n        var {\r\n            currentDate: currentDate,\r\n            rtlEnabled: rtlEnabled\r\n        } = this.option();\r\n        var targetOffset = e.event.targetOffset;\r\n        var moveOffset = !targetOffset ? 0 : targetOffset / Math.abs(targetOffset);\r\n        var isAdditionalViewActive = this._isAdditionalViewDate(currentDate);\r\n        var shouldDoubleOffset = isAdditionalViewActive && (rtlEnabled ? -1 === moveOffset : 1 === moveOffset);\r\n        if (0 === moveOffset) {\r\n            this._animateWrapper(0, ANIMATION_DURATION_SHOW_VIEW);\r\n            return\r\n        }\r\n        var offset = -moveOffset * this._getRtlCorrection() * (shouldDoubleOffset ? 2 : 1);\r\n        var date = this._getDateByOffset(offset);\r\n        if (this._isDateInInvalidRange(date)) {\r\n            if (moveOffset >= 0) {\r\n                date = new Date(this._getMinDate())\r\n            } else {\r\n                date = new Date(this._getMaxDate())\r\n            }\r\n        }\r\n        this.option(\"currentDate\", date)\r\n    },\r\n    _viewWidth: function() {\r\n        if (!this._viewWidthValue) {\r\n            this._viewWidthValue = getWidth(this.$element()) / this.option(\"viewsCount\")\r\n        }\r\n        return this._viewWidthValue\r\n    },\r\n    _updateNavigatorCaption: function(offset) {\r\n        offset *= this._getRtlCorrection();\r\n        var isMultiView = this.option(\"viewsCount\") > 1;\r\n        var view;\r\n        var additionalView;\r\n        if (offset > .5 && this._beforeView) {\r\n            view = this._beforeView;\r\n            additionalView = isMultiView && this._view\r\n        } else if (offset < -.5 && this._afterView) {\r\n            view = isMultiView ? this._additionalView : this._afterView;\r\n            additionalView = isMultiView ? this._afterView : null\r\n        } else {\r\n            view = this._view;\r\n            additionalView = isMultiView ? this._additionalView : null\r\n        }\r\n        this._navigator.option(\"text\", this._getViewsCaption(view, additionalView))\r\n    },\r\n    _getViewsCaption: function(view, additionalView) {\r\n        var caption = view.getNavigatorCaption();\r\n        var {\r\n            viewsCount: viewsCount\r\n        } = this.option();\r\n        if (viewsCount > 1 && additionalView) {\r\n            var additionalViewCaption = additionalView.getNavigatorCaption();\r\n            caption = \"\".concat(caption, \" - \").concat(additionalViewCaption)\r\n        }\r\n        return caption\r\n    },\r\n    _isDateInInvalidRange: function(date) {\r\n        if (this._view.isBoundary(date)) {\r\n            return\r\n        }\r\n        var min = this._getMinDate();\r\n        var max = this._getMaxDate();\r\n        var normalizedDate = dateUtils.normalizeDate(date, min, max);\r\n        return normalizedDate === min || normalizedDate === max\r\n    },\r\n    _renderFooter: function() {\r\n        var showTodayButton = this.option(\"showTodayButton\");\r\n        if (showTodayButton) {\r\n            var $todayButton = this._createComponent($(\"<div>\"), Button, {\r\n                focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n                text: messageLocalization.format(\"dxCalendar-todayButtonText\"),\r\n                onClick: args => {\r\n                    this._toTodayView(args)\r\n                },\r\n                type: \"default\",\r\n                stylingMode: \"text\",\r\n                integrationOptions: {}\r\n            }).$element().addClass(CALENDAR_TODAY_BUTTON_CLASS);\r\n            this._$footer = $(\"<div>\").addClass(CALENDAR_FOOTER_CLASS).append($todayButton);\r\n            this.$element().append(this._$footer)\r\n        }\r\n        this.$element().toggleClass(CALENDAR_HAS_FOOTER_CLASS, showTodayButton)\r\n    },\r\n    _renderSubmitElement: function() {\r\n        this._$submitElement = $(\"<input>\").attr(\"type\", \"hidden\").appendTo(this.$element());\r\n        this._setSubmitValue(this.option(\"value\"))\r\n    },\r\n    _setSubmitValue: function(value) {\r\n        var dateValue = this._convertToDate(value);\r\n        this._getSubmitElement().val(dateSerialization.serializeDate(dateValue, CALENDAR_INPUT_STANDARD_PATTERN))\r\n    },\r\n    _getSubmitElement: function() {\r\n        return this._$submitElement\r\n    },\r\n    _animateShowView: function() {\r\n        fx.stop(this._view.$element(), true);\r\n        this._popAnimationView(this._view, POP_ANIMATION_FROM, POP_ANIMATION_TO, ANIMATION_DURATION_SHOW_VIEW);\r\n        if (this.option(\"viewsCount\") > 1) {\r\n            fx.stop(this._additionalView.$element(), true);\r\n            this._popAnimationView(this._additionalView, POP_ANIMATION_FROM, POP_ANIMATION_TO, ANIMATION_DURATION_SHOW_VIEW)\r\n        }\r\n    },\r\n    _popAnimationView: function(view, from, to, duration) {\r\n        return fx.animate(view.$element(), {\r\n            type: \"pop\",\r\n            from: {\r\n                scale: from,\r\n                opacity: from\r\n            },\r\n            to: {\r\n                scale: to,\r\n                opacity: to\r\n            },\r\n            duration: duration\r\n        })\r\n    },\r\n    _navigate: function(offset, value) {\r\n        if (0 !== offset && 1 !== Math.abs(offset) && this._isViewAvailable(value)) {\r\n            var newView = this._renderSpecificView(value);\r\n            if (offset > 0) {\r\n                this._afterView && this._afterView.$element().remove();\r\n                this._afterView = newView\r\n            } else {\r\n                this._beforeView && this._beforeView.$element().remove();\r\n                this._beforeView = newView\r\n            }\r\n            this._translateViews()\r\n        }\r\n        var rtlCorrection = this._getRtlCorrection();\r\n        var offsetSign = offset > 0 ? 1 : offset < 0 ? -1 : 0;\r\n        var endPosition = -rtlCorrection * offsetSign * this._viewWidth();\r\n        var viewsWrapperPosition = this._$viewsWrapper.position().left;\r\n        if (viewsWrapperPosition !== endPosition) {\r\n            if (this._preventViewChangeAnimation) {\r\n                this._wrapperAnimationEndHandler(offset, value)\r\n            } else {\r\n                this._animateWrapper(endPosition, ANIMATION_DURATION_SHOW_VIEW).done(this._wrapperAnimationEndHandler.bind(this, offset, value))\r\n            }\r\n        }\r\n    },\r\n    _animateWrapper: function(to, duration) {\r\n        return fx.animate(this._$viewsWrapper, {\r\n            type: \"slide\",\r\n            from: {\r\n                left: this._$viewsWrapper.position().left\r\n            },\r\n            to: {\r\n                left: to\r\n            },\r\n            duration: duration\r\n        })\r\n    },\r\n    _getDate: value => new Date(value),\r\n    _toTodayView: function(args) {\r\n        var today = new Date;\r\n        if (this._isMaxZoomLevel()) {\r\n            this._selectionStrategy.selectValue(today, args.event);\r\n            return\r\n        }\r\n        this._preventViewChangeAnimation = true;\r\n        this.option(\"zoomLevel\", this.option(\"maxZoomLevel\"));\r\n        this._selectionStrategy.selectValue(today, args.event);\r\n        this._animateShowView();\r\n        this._preventViewChangeAnimation = false\r\n    },\r\n    _wrapperAnimationEndHandler: function(offset, newDate) {\r\n        this._rearrangeViews(offset);\r\n        this._translateViews();\r\n        this._resetLocation();\r\n        this._renderNavigator();\r\n        this._setViewContoured(newDate);\r\n        this._updateAriaId(newDate);\r\n        this._selectionStrategy.updateAriaSelected()\r\n    },\r\n    _rearrangeViews: function(offset) {\r\n        var _this$viewToRemoveKey;\r\n        if (0 === offset) {\r\n            return\r\n        }\r\n        var {\r\n            viewsCount: viewsCount\r\n        } = this.option();\r\n        var viewOffset;\r\n        var viewToCreateKey;\r\n        var viewToRemoveKey;\r\n        var viewBeforeCreateKey;\r\n        var viewAfterRemoveKey;\r\n        if (offset < 0) {\r\n            viewOffset = 1;\r\n            viewToCreateKey = \"_beforeView\";\r\n            viewToRemoveKey = \"_afterView\";\r\n            viewBeforeCreateKey = \"_view\";\r\n            viewAfterRemoveKey = 1 === viewsCount ? \"_view\" : \"_additionalView\"\r\n        } else {\r\n            viewOffset = -1;\r\n            viewToCreateKey = \"_afterView\";\r\n            viewToRemoveKey = \"_beforeView\";\r\n            viewBeforeCreateKey = 1 === viewsCount ? \"_view\" : \"_additionalView\";\r\n            viewAfterRemoveKey = \"_view\"\r\n        }\r\n        if (!this[viewToCreateKey]) {\r\n            return\r\n        }\r\n        var destinationDate = this[viewToCreateKey].option(\"date\");\r\n        null === (_this$viewToRemoveKey = this[viewToRemoveKey]) || void 0 === _this$viewToRemoveKey ? void 0 : _this$viewToRemoveKey.$element().remove();\r\n        this[viewToRemoveKey] = this._renderSpecificView(this._getDateByOffset(viewOffset * viewsCount, destinationDate));\r\n        this[viewAfterRemoveKey].$element().remove();\r\n        if (1 === viewsCount) {\r\n            this[viewAfterRemoveKey] = this[viewToCreateKey]\r\n        } else {\r\n            this[viewAfterRemoveKey] = this[viewBeforeCreateKey];\r\n            this[viewBeforeCreateKey] = this[viewToCreateKey]\r\n        }\r\n        var dateByOffset = this._getDateByOffset(-viewOffset, destinationDate);\r\n        this[viewToCreateKey] = this._isViewAvailable(dateByOffset) ? this._renderSpecificView(dateByOffset) : null\r\n    },\r\n    _resetLocation: function() {\r\n        move(this._$viewsWrapper, {\r\n            left: 0,\r\n            top: 0\r\n        })\r\n    },\r\n    _clean: function() {\r\n        this.callBase();\r\n        this._clearViewWidthCache();\r\n        delete this._$viewsWrapper;\r\n        delete this._navigator;\r\n        delete this._$footer\r\n    },\r\n    _clearViewWidthCache: function() {\r\n        delete this._viewWidthValue\r\n    },\r\n    _disposeViews: function() {\r\n        this._view.$element().remove();\r\n        this._beforeView && this._beforeView.$element().remove();\r\n        this._additionalView && this._additionalView.$element().remove();\r\n        this._afterView && this._afterView.$element().remove();\r\n        delete this._view;\r\n        delete this._additionalView;\r\n        delete this._beforeView;\r\n        delete this._afterView;\r\n        delete this._skipNavigate\r\n    },\r\n    _dispose: function() {\r\n        clearTimeout(this._waitRenderViewTimeout);\r\n        this.callBase()\r\n    },\r\n    _refreshViews: function() {\r\n        this._resetActiveState();\r\n        this._disposeViews();\r\n        this._renderViews()\r\n    },\r\n    _visibilityChanged: function() {\r\n        this._translateViews()\r\n    },\r\n    _focusInHandler: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._setViewContoured(this.option(\"currentDate\"))\r\n    },\r\n    _focusOutHandler: function() {\r\n        var _this$_additionalView2;\r\n        this.callBase.apply(this, arguments);\r\n        this._view.option(\"contouredDate\", null);\r\n        null === (_this$_additionalView2 = this._additionalView) || void 0 === _this$_additionalView2 ? void 0 : _this$_additionalView2.option(\"contouredDate\", null)\r\n    },\r\n    _updateViewsOption: function(optionName, newValue) {\r\n        var _this$_additionalView3, _this$_beforeView, _this$_afterView;\r\n        this._view.option(optionName, newValue);\r\n        null === (_this$_additionalView3 = this._additionalView) || void 0 === _this$_additionalView3 ? void 0 : _this$_additionalView3.option(optionName, newValue);\r\n        null === (_this$_beforeView = this._beforeView) || void 0 === _this$_beforeView ? void 0 : _this$_beforeView.option(optionName, newValue);\r\n        null === (_this$_afterView = this._afterView) || void 0 === _this$_afterView ? void 0 : _this$_afterView.option(optionName, newValue)\r\n    },\r\n    _setViewsMinOption: function(min) {\r\n        this._restoreViewsMinMaxOptions();\r\n        this.option(\"_rangeMin\", this._convertToDate(min));\r\n        this._updateViewsOption(\"min\", this._getMinDate())\r\n    },\r\n    _setViewsMaxOption: function(max) {\r\n        this._restoreViewsMinMaxOptions();\r\n        this.option(\"_rangeMax\", this._convertToDate(max));\r\n        this._updateViewsOption(\"max\", this._getMaxDate())\r\n    },\r\n    _restoreViewsMinMaxOptions: function() {\r\n        this.option({\r\n            _rangeMin: null,\r\n            _rangeMax: null\r\n        });\r\n        this._updateViewsOption(\"min\", this._getMinDate());\r\n        this._updateViewsOption(\"max\", this._getMaxDate())\r\n    },\r\n    _updateAriaSelected: function(value, previousValue) {\r\n        previousValue.forEach(item => {\r\n            this.setAria(\"selected\", void 0, this._view._getCellByDate(item))\r\n        });\r\n        value.forEach(item => {\r\n            this.setAria(\"selected\", true, this._view._getCellByDate(item))\r\n        });\r\n        if (this.option(\"viewsCount\") > 1) {\r\n            previousValue.forEach(item => {\r\n                this.setAria(\"selected\", void 0, this._additionalView._getCellByDate(item))\r\n            });\r\n            value.forEach(item => {\r\n                this.setAria(\"selected\", true, this._additionalView._getCellByDate(item))\r\n            })\r\n        }\r\n    },\r\n    _updateAriaId: function(value) {\r\n        var _value;\r\n        value = null !== (_value = value) && void 0 !== _value ? _value : this.option(\"currentDate\");\r\n        var ariaId = \"dx-\" + new Guid;\r\n        var view = this._getActiveView(value);\r\n        var $newCell = view._getCellByDate(value);\r\n        this.setAria(\"id\", ariaId, $newCell);\r\n        this.setAria(\"activedescendant\", ariaId);\r\n        this._onContouredChanged(ariaId)\r\n    },\r\n    _suppressingNavigation: function(callback, args) {\r\n        this._suppressNavigation = true;\r\n        callback.apply(this, args);\r\n        delete this._suppressNavigation\r\n    },\r\n    _optionChanged: function(args) {\r\n        var {\r\n            value: value,\r\n            previousValue: previousValue\r\n        } = args;\r\n        switch (args.name) {\r\n            case \"width\":\r\n                this.callBase(args);\r\n                this._clearViewWidthCache();\r\n                break;\r\n            case \"min\":\r\n            case \"max\":\r\n                this.min = void 0;\r\n                this.max = void 0;\r\n                this._suppressingNavigation(this._updateCurrentDate, [this.option(\"currentDate\")]);\r\n                this._refreshViews();\r\n                this._renderNavigator();\r\n                break;\r\n            case \"selectionMode\":\r\n                this._refreshSelectionStrategy();\r\n                this._initCurrentDate();\r\n                break;\r\n            case \"firstDayOfWeek\":\r\n                this._refreshViews();\r\n                this._updateButtonsVisibility();\r\n                break;\r\n            case \"currentDate\":\r\n                this.setAria(\"id\", void 0, this._view._getCellByDate(previousValue));\r\n                this._updateCurrentDate(value);\r\n                break;\r\n            case \"zoomLevel\":\r\n                this.$element().removeClass(CALENDAR_VIEW_CLASS + \"-\" + previousValue);\r\n                this._correctZoomLevel();\r\n                this._refreshViews();\r\n                this._renderNavigator();\r\n                this._updateAriaId();\r\n                break;\r\n            case \"minZoomLevel\":\r\n            case \"maxZoomLevel\":\r\n                this._correctZoomLevel();\r\n                this._updateButtonsVisibility();\r\n                break;\r\n            case \"value\":\r\n                if (\"single\" === this.option(\"selectionMode\")) {\r\n                    this._selectionStrategy.processValueChanged([value], [previousValue])\r\n                }\r\n                this._setSubmitValue(value);\r\n                this.callBase(args);\r\n                break;\r\n            case \"values\":\r\n                if (\"single\" !== this.option(\"selectionMode\")) {\r\n                    this._selectionStrategy.processValueChanged(value, previousValue)\r\n                }\r\n                this._raiseValueChangeAction(value, previousValue);\r\n                this._saveValueChangeEvent(void 0);\r\n                break;\r\n            case \"viewsCount\":\r\n                this._refreshViews();\r\n                this._renderNavigator();\r\n                break;\r\n            case \"onCellClick\":\r\n                this._view.option(\"onCellClick\", value);\r\n                break;\r\n            case \"onContouredChanged\":\r\n                this._onContouredChanged = this._createActionByOption(\"onContouredChanged\");\r\n                break;\r\n            case \"disabledDates\":\r\n            case \"dateSerializationFormat\":\r\n            case \"cellTemplate\":\r\n            case \"showTodayButton\":\r\n                this._invalidate();\r\n                break;\r\n            case \"skipFocusCheck\":\r\n                break;\r\n            case \"_todayDate\":\r\n            case \"showWeekNumbers\":\r\n            case \"weekNumberRule\":\r\n                this._refreshViews();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    getContouredDate: function() {\r\n        return this._view.option(\"contouredDate\")\r\n    }\r\n});\r\nregisterComponent(\"dxCalendar\", Calendar);\r\nexport default Calendar;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,SACIC,QAAQ,QACL,uBAAuB;AAC9B,OAAOC,CAAC,MAAM,qBAAqB;AACnC,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,iBAAiB,MAAM,kCAAkC;AAChE,SACIC,IAAI,QACD,yBAAyB;AAChC,SACIC,SAAS,EACTC,QAAQ,EACRC,UAAU,EACVC,SAAS,QACN,uBAAuB;AAC9B,SACIC,OAAO,QACJ,uBAAuB;AAC9B,SACIC,MAAM,QACH,yBAAyB;AAChC,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,SAAS,MAAM,gCAAgC;AACtD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,KAAK,MAAM,qBAAqB;AACvC,SACIC,IAAI,QACD,4BAA4B;AACnC,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,iBAAiB,MAAM,qCAAqC;AACnE,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,EAAE,MAAM,oBAAoB;AACnC,SACIC,SAAS,QACN,yBAAyB;AAChC,OAAOC,mBAAmB,MAAM,4BAA4B;AAC5D,OAAOC,gBAAgB,MAAM,yBAAyB;AACtD,SACIC,gBAAgB,QACb,wCAAwC;AAC/C,SACIC,mBAAmB,EACnBC,YAAY,QACT,0BAA0B;AACjC,OAAOC,+BAA+B,MAAM,yCAAyC;AACrF,OAAOC,8BAA8B,MAAM,wCAAwC;AACnF,OAAOC,8BAA8B,MAAM,wCAAwC;AACnF,SACIC,GAAG,IAAIC,iBAAiB,QACrB,oBAAoB;AAC3B,OAAOC,YAAY,MAAM,iCAAiC;AAC1D,IAAIC,cAAc,GAAG,aAAa;AAClC,IAAIC,mBAAmB,GAAG,kBAAkB;AAC5C,IAAIC,mBAAmB,GAAG,kBAAkB;AAC5C,IAAIC,qBAAqB,GAAG,oBAAoB;AAChD,IAAIC,2BAA2B,GAAG,0BAA0B;AAC5D,IAAIC,yBAAyB,GAAG,yBAAyB;AACzD,IAAIC,4BAA4B,GAAG,2BAA2B;AAC9D,IAAIC,mBAAmB,GAAG,kBAAkB;AAC5C,IAAIC,wBAAwB,GAAG,uBAAuB;AACtD,IAAIC,oBAAoB,GAAG,mBAAmB;AAC9C,IAAIC,mBAAmB,GAAG,kBAAkB;AAC5C,IAAIC,mBAAmB,GAAG,kBAAkB;AAC5C,IAAIC,4BAA4B,GAAG,GAAG;AACtC,IAAIC,kBAAkB,GAAG,EAAE;AAC3B,IAAIC,gBAAgB,GAAG,CAAC;AACxB,IAAIC,+BAA+B,GAAG,YAAY;AAClD,IAAIC,uBAAuB,GAAG,gBAAgB;AAC9C,IAAIC,8BAA8B,GAAGxB,YAAY,CAACK,iBAAiB,EAAE,YAAY,CAAC;AAClF,IAAIoB,iBAAiB,GAAG;EACpBC,KAAK,EAAE,CAAC;EACRC,IAAI,EAAE,CAAC;EACPC,MAAM,EAAE,CAAC;EACTC,OAAO,EAAE;AACb,CAAC;AACD,IAAIC,UAAU,GAAG;EACbC,KAAK,EAAE,OAAO;EACdC,IAAI,EAAE,MAAM;EACZC,MAAM,EAAE,QAAQ;EAChBC,OAAO,EAAE;AACb,CAAC;AACD,IAAIC,oBAAoB,GAAG;EACvBC,eAAe,EAAEnC,+BAA+B;EAChDoC,cAAc,EAAEnC,8BAA8B;EAC9CoC,cAAc,EAAEnC;AACpB,CAAC;AAED,SAASoC,eAAeA,CAACC,OAAO,EAAE;EAC9B,OAAOA,OAAO,CAACC,QAAQ,CAACxB,mBAAmB,CAAC;AAChD;AACA,IAAIyB,QAAQ,GAAGxD,MAAM,CAACyD,OAAO,CAAC;EAC1BC,gBAAgB,EAAE,GAAG,GAAGnC,mBAAmB;EAC3CoC,kBAAkB,EAAE,SAAAA,CAAA,EAAW;IAC3B,OAAO7D,MAAM,CAAC,IAAI,CAAC8D,QAAQ,CAAC,CAAC,EAAE;MAC3BC,iBAAiB,EAAE,IAAI;MACvBC,kBAAkB,EAAE,IAAI;MACxBC,WAAW,EAAE,IAAIC,IAAI,CAAD,CAAC;MACrBC,KAAK,EAAE,IAAI;MACXC,MAAM,EAAE,EAAE;MACVC,uBAAuB,EAAE,KAAK,CAAC;MAC/BC,GAAG,EAAE,IAAIJ,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;MACrBK,GAAG,EAAE,IAAIL,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;MACrBM,cAAc,EAAE,KAAK,CAAC;MACtBC,UAAU,EAAE,CAAC;MACbC,SAAS,EAAE5B,UAAU,CAACC,KAAK;MAC3B4B,YAAY,EAAE7B,UAAU,CAACC,KAAK;MAC9B6B,YAAY,EAAE9B,UAAU,CAACI,OAAO;MAChC2B,aAAa,EAAE,QAAQ;MACvBC,eAAe,EAAE,KAAK;MACtBC,eAAe,EAAE,KAAK;MACtBC,cAAc,EAAE,MAAM;MACtBC,YAAY,EAAE,MAAM;MACpBC,aAAa,EAAE,IAAI;MACnBC,WAAW,EAAE,IAAI;MACjBC,kBAAkB,EAAE,IAAI;MACxBC,cAAc,EAAE,KAAK;MACrBC,UAAU,EAAEA,CAAA,KAAM,IAAIpB,IAAI,CAAD;IAC7B,CAAC,CAAC;EACN,CAAC;EACDqB,oBAAoB,EAAE,SAAAA,CAAA,EAAW;IAC7B,OAAO,IAAI,CAACzB,QAAQ,CAAC,CAAC,CAAC0B,MAAM,CAAC,CAAC;MAC3BC,MAAM,EAAE,SAAAA,CAAA,EAAW;QACf,OAAO,SAAS,KAAKhF,OAAO,CAACiF,IAAI,CAAC,CAAC,CAACC,UAAU,IAAI,CAAClF,OAAO,CAACmF,WAAW,CAAC,CAAC;MAC5E,CAAC;MACDC,OAAO,EAAE;QACLC,iBAAiB,EAAE;MACvB;IACJ,CAAC,CAAC,CAAC;EACP,CAAC;EACDC,cAAc,EAAE,SAAAA,CAAA,EAAW;IACvB,OAAO/F,MAAM,CAAC,IAAI,CAAC8D,QAAQ,CAAC,CAAC,EAAE;MAC3BkC,UAAU,EAAE,SAAAA,CAASC,CAAC,EAAE;QACpBA,CAAC,CAACC,cAAc,CAAC,CAAC;QAClB,IAAInF,mBAAmB,CAACkF,CAAC,CAAC,EAAE;UACxB,IAAI,CAACE,eAAe,CAAC,CAAC,CAAC;QAC3B,CAAC,MAAM;UACH,IAAI,CAACC,wBAAwB,CAAC,CAAC,GAAG,IAAI,CAACC,iBAAiB,CAAC,CAAC,CAAC;QAC/D;MACJ,CAAC;MACDC,SAAS,EAAE,SAAAA,CAASL,CAAC,EAAE;QACnBA,CAAC,CAACC,cAAc,CAAC,CAAC;QAClB,IAAInF,mBAAmB,CAACkF,CAAC,CAAC,EAAE;UACxB,IAAI,CAACE,eAAe,CAAC,CAAC,CAAC,CAAC;QAC5B,CAAC,MAAM;UACH,IAAI,CAACC,wBAAwB,CAAC,CAAC,CAAC,GAAG,IAAI,CAACC,iBAAiB,CAAC,CAAC,CAAC;QAChE;MACJ,CAAC;MACDE,OAAO,EAAE,SAAAA,CAASN,CAAC,EAAE;QACjBA,CAAC,CAACC,cAAc,CAAC,CAAC;QAClB,IAAInF,mBAAmB,CAACkF,CAAC,CAAC,EAAE;UACxB,IAAI,CAACO,WAAW,CAAC,CAAC;QACtB,CAAC,MAAM;UACH,IAAI9F,EAAE,CAAC+F,WAAW,CAAC,IAAI,CAACC,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC,EAAE;YACvC;UACJ;UACA,IAAI,CAACP,wBAAwB,CAAC,CAAC,CAAC,GAAG,IAAI,CAACM,KAAK,CAACE,MAAM,CAAC,UAAU,CAAC,CAAC;QACrE;MACJ,CAAC;MACDC,SAAS,EAAE,SAAAA,CAASZ,CAAC,EAAE;QACnBA,CAAC,CAACC,cAAc,CAAC,CAAC;QAClB,IAAInF,mBAAmB,CAACkF,CAAC,CAAC,EAAE;UACxB,IAAI,CAACa,aAAa,CAAC,CAAC;QACxB,CAAC,MAAM;UACH,IAAIpG,EAAE,CAAC+F,WAAW,CAAC,IAAI,CAACC,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC,EAAE;YACvC;UACJ;UACA,IAAI,CAACP,wBAAwB,CAAC,CAAC,GAAG,IAAI,CAACM,KAAK,CAACE,MAAM,CAAC,UAAU,CAAC,CAAC;QACpE;MACJ,CAAC;MACDG,IAAI,EAAE,SAAAA,CAASd,CAAC,EAAE;QACdA,CAAC,CAACC,cAAc,CAAC,CAAC;QAClB,IAAIxB,SAAS,GAAG,IAAI,CAACkC,MAAM,CAAC,WAAW,CAAC;QACxC,IAAI3C,WAAW,GAAG,IAAI,CAAC2C,MAAM,CAAC,aAAa,CAAC;QAC5C,IAAItC,GAAG,GAAG,IAAI,CAAC0C,WAAW,CAAC,KAAK,CAAC;QACjC,IAAI,IAAI,CAACN,KAAK,CAACO,cAAc,CAAChD,WAAW,CAAC,EAAE;UACxC;QACJ;QACA,IAAIiD,IAAI,GAAG3G,SAAS,CAAC4G,QAAQ,CAACzC,SAAS,EAAET,WAAW,EAAEK,GAAG,CAAC,GAAGA,GAAG,GAAG/D,SAAS,CAAC6G,oBAAoB,CAAC1C,SAAS,EAAET,WAAW,CAAC;QACzH,IAAI,CAACoD,2BAA2B,CAACH,IAAI,CAAC;MAC1C,CAAC;MACD9F,GAAG,EAAE,SAAAA,CAAS6E,CAAC,EAAE;QACbA,CAAC,CAACC,cAAc,CAAC,CAAC;QAClB,IAAIxB,SAAS,GAAG,IAAI,CAACkC,MAAM,CAAC,WAAW,CAAC;QACxC,IAAI3C,WAAW,GAAG,IAAI,CAAC2C,MAAM,CAAC,aAAa,CAAC;QAC5C,IAAIrC,GAAG,GAAG,IAAI,CAACyC,WAAW,CAAC,KAAK,CAAC;QACjC,IAAI,IAAI,CAACN,KAAK,CAACO,cAAc,CAAChD,WAAW,CAAC,EAAE;UACxC;QACJ;QACA,IAAIiD,IAAI,GAAG3G,SAAS,CAAC4G,QAAQ,CAACzC,SAAS,EAAET,WAAW,EAAEM,GAAG,CAAC,GAAGA,GAAG,GAAGhE,SAAS,CAAC+G,mBAAmB,CAAC5C,SAAS,EAAET,WAAW,CAAC;QACxH,IAAI,CAACoD,2BAA2B,CAACH,IAAI,CAAC;MAC1C,CAAC;MACDK,MAAM,EAAE,SAAAA,CAAStB,CAAC,EAAE;QAChBA,CAAC,CAACC,cAAc,CAAC,CAAC;QAClB,IAAI,CAACC,eAAe,CAAC,CAAC,CAAC,GAAG,IAAI,CAACE,iBAAiB,CAAC,CAAC,CAAC;MACvD,CAAC;MACDmB,QAAQ,EAAE,SAAAA,CAASvB,CAAC,EAAE;QAClBA,CAAC,CAACC,cAAc,CAAC,CAAC;QAClB,IAAI,CAACC,eAAe,CAAC,CAAC,GAAG,IAAI,CAACE,iBAAiB,CAAC,CAAC,CAAC;MACtD,CAAC;MACDoB,GAAG,EAAE/H,IAAI;MACTgI,KAAK,EAAE,IAAI,CAACC;IAChB,CAAC,CAAC;EACN,CAAC;EACDA,gBAAgB,EAAE,SAAAA,CAAS1B,CAAC,EAAE;IAC1B,IAAI,CAAC,IAAI,CAAC2B,eAAe,CAAC,CAAC,EAAE;MACzB,IAAI,CAACd,aAAa,CAAC,CAAC;IACxB,CAAC,MAAM,IAAI,CAAC,IAAI,CAACJ,KAAK,CAACO,cAAc,CAAC,IAAI,CAACL,MAAM,CAAC,aAAa,CAAC,CAAC,EAAE;MAC/D,IAAIzC,KAAK,GAAG,IAAI,CAAC0D,oBAAoB,CAAC,IAAI,CAACjB,MAAM,CAAC,aAAa,CAAC,CAAC;MACjE,IAAI,CAACkB,kBAAkB,CAACC,WAAW,CAAC5D,KAAK,EAAE8B,CAAC,CAAC;IACjD;EACJ,CAAC;EACD+B,uBAAuB,EAAE,SAAAA,CAASC,UAAU,EAAE;IAC1C,IAAI9D,KAAK,GAAG,IAAI,CAACyC,MAAM,CAACqB,UAAU,IAAI,OAAO,CAAC;IAC9C,IAAI,IAAI,CAACrB,MAAM,CAAC,yBAAyB,CAAC,EAAE;MACxC,OAAO,IAAI,CAACA,MAAM,CAAC,yBAAyB,CAAC;IACjD;IACA,IAAIjH,SAAS,CAACwE,KAAK,CAAC,EAAE;MAClB,OAAO,QAAQ;IACnB;IACA,IAAI,CAACvE,QAAQ,CAACuE,KAAK,CAAC,EAAE;MAClB;IACJ;IACA,OAAO3D,iBAAiB,CAAC0H,0BAA0B,CAAC/D,KAAK,CAAC;EAC9D,CAAC;EACDgE,cAAc,EAAE,SAAAA,CAAShE,KAAK,EAAE;IAC5B,OAAO3D,iBAAiB,CAAC4H,eAAe,CAACjE,KAAK,CAAC;EACnD,CAAC;EACDkE,UAAU,EAAE,SAAAA,CAASlE,KAAK,EAAEmE,KAAK,EAAE;IAC/B,IAAIL,UAAU,GAAGM,KAAK,CAACC,OAAO,CAACrE,KAAK,CAAC,GAAG,QAAQ,GAAG,OAAO;IAC1D,IAAImE,KAAK,EAAE;MACP,IAAI,SAAS,KAAKA,KAAK,CAACG,IAAI,EAAE;QAC1B,IAAIC,WAAW,GAAG,IAAI,CAAChC,KAAK,CAACiC,iBAAiB,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC,CAAC;QACvDN,KAAK,CAACO,MAAM,GAAGH,WAAW;MAC9B;MACA,IAAI,CAACI,qBAAqB,CAACR,KAAK,CAAC;IACrC;IACA,IAAI,CAACtB,WAAW,CAACiB,UAAU,EAAE9D,KAAK,CAAC;EACvC,CAAC;EACD6C,WAAW,EAAE,SAAAA,CAASiB,UAAU,EAAEc,WAAW,EAAE;IAC3C,IAAI,CAAC,KAAKC,SAAS,CAACC,MAAM,EAAE;MACxB,IAAIC,YAAY;MAChB,IAAI9E,MAAM,GAAG,IAAI,MAAM8E,YAAY,GAAG,IAAI,CAACtC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,KAAK,CAAC,KAAKsC,YAAY,GAAGA,YAAY,GAAG,EAAE;MAC3G,OAAO,QAAQ,KAAKjB,UAAU,GAAG7D,MAAM,CAAC+E,GAAG,CAAChF,KAAK,IAAI,IAAI,CAACgE,cAAc,CAAChE,KAAK,CAAC,CAAC,GAAG,IAAI,CAACgE,cAAc,CAAC,IAAI,CAACvB,MAAM,CAACqB,UAAU,CAAC,CAAC;IACnI;IACA,IAAImB,mBAAmB,GAAG,IAAI,CAACpB,uBAAuB,CAACC,UAAU,CAAC;IAClE,IAAIoB,eAAe,GAAG,QAAQ,KAAKpB,UAAU,GAAG,CAAC,IAAI,KAAKc,WAAW,IAAI,KAAK,CAAC,KAAKA,WAAW,GAAG,KAAK,CAAC,GAAGA,WAAW,CAACI,GAAG,CAAChF,KAAK,IAAI3D,iBAAiB,CAAC8I,aAAa,CAACnF,KAAK,EAAEiF,mBAAmB,CAAC,CAAC,KAAK,EAAE,GAAG5I,iBAAiB,CAAC8I,aAAa,CAACP,WAAW,EAAEK,mBAAmB,CAAC;IAC3Q,IAAI,CAACxC,MAAM,CAACqB,UAAU,EAAEoB,eAAe,CAAC;EAC5C,CAAC;EACDE,UAAU,EAAE,SAAAA,CAAS7E,SAAS,EAAEwC,IAAI,EAAEsC,MAAM,EAAEC,OAAO,EAAE;IACnD,QAAQ/E,SAAS;MACb,KAAK5B,UAAU,CAACC,KAAK;QACjBmE,IAAI,CAACwC,OAAO,CAACxC,IAAI,CAACyC,OAAO,CAAC,CAAC,GAAGH,MAAM,GAAGC,OAAO,CAAC;QAC/C;MACJ,KAAK3G,UAAU,CAACE,IAAI;QAChBkE,IAAI,CAAC0C,QAAQ,CAAC1C,IAAI,CAAC2C,QAAQ,CAAC,CAAC,GAAGL,MAAM,GAAGC,OAAO,CAAC;QACjD;MACJ,KAAK3G,UAAU,CAACG,MAAM;QAClBiE,IAAI,CAAC4C,WAAW,CAAC5C,IAAI,CAAC6C,WAAW,CAAC,CAAC,GAAGP,MAAM,GAAGC,OAAO,CAAC;QACvD;MACJ,KAAK3G,UAAU,CAACI,OAAO;QACnBgE,IAAI,CAAC4C,WAAW,CAAC5C,IAAI,CAAC6C,WAAW,CAAC,CAAC,GAAG,EAAE,GAAGP,MAAM,GAAGC,OAAO,CAAC;IACpE;EACJ,CAAC;EACDrD,wBAAwB,EAAE,SAAAA,CAASoD,MAAM,EAAE;IACvC,IAAIQ,QAAQ,GAAG,IAAI,CAACpD,MAAM,CAAC,aAAa,CAAC;IACzC,IAAI3C,WAAW,GAAG,IAAIC,IAAI,CAAC8F,QAAQ,CAAC;IACpC,IAAItF,SAAS,GAAG,IAAI,CAACkC,MAAM,CAAC,WAAW,CAAC;IACxC,IAAI,CAAC2C,UAAU,CAAC7E,SAAS,EAAET,WAAW,EAAEuF,MAAM,EAAE,CAAC,CAAC;IAClD,IAAIS,OAAO,GAAG,IAAI,CAACC,WAAW,CAAC,CAAC;IAChC,IAAIC,OAAO,GAAG,IAAI,CAACC,WAAW,CAAC,CAAC;IAChC,IAAIC,2BAA2B,GAAG,IAAI,CAACC,uBAAuB,CAAC5F,SAAS,EAAET,WAAW,EAAE+F,QAAQ,CAAC;IAChG,IAAIO,oBAAoB,GAAGxK,OAAO,CAACkE,WAAW,EAAEkG,OAAO,EAAEF,OAAO,CAAC,IAAII,2BAA2B;IAChG,IAAIG,WAAW,GAAG,IAAItG,IAAI,CAACD,WAAW,CAAC;IACvC,OAAOsG,oBAAoB,EAAE;MACzB,IAAI,CAAC,IAAI,CAAC7D,KAAK,CAACO,cAAc,CAACuD,WAAW,CAAC,EAAE;QACzCvG,WAAW,GAAGuG,WAAW;QACzB;MACJ;MACA,IAAI,CAACjB,UAAU,CAAC7E,SAAS,EAAE8F,WAAW,EAAEhB,MAAM,EAAE,CAAC,CAAC;MAClDa,2BAA2B,GAAG,IAAI,CAACC,uBAAuB,CAAC5F,SAAS,EAAE8F,WAAW,EAAER,QAAQ,CAAC;MAC5FO,oBAAoB,GAAGxK,OAAO,CAACyK,WAAW,EAAEL,OAAO,EAAEF,OAAO,CAAC,IAAII,2BAA2B;IAChG;IACA,IAAI,IAAI,CAAC3D,KAAK,CAACO,cAAc,CAAC+C,QAAQ,CAAC,IAAI,IAAI,CAACtD,KAAK,CAACO,cAAc,CAAChD,WAAW,CAAC,EAAE;MAC/E,IAAI,CAACkC,eAAe,CAACqD,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7C,CAAC,MAAM;MACH,IAAI,CAACiB,aAAa,GAAG,IAAI;MACzB,IAAI,CAAC7D,MAAM,CAAC,aAAa,EAAE3C,WAAW,CAAC;IAC3C;EACJ,CAAC;EACDyG,mBAAmBA,CAAChG,SAAS,EAAEiG,KAAK,EAAEC,KAAK,EAAE;IACzC,QAAQlG,SAAS;MACb,KAAK5B,UAAU,CAACC,KAAK;QACjB,OAAO4H,KAAK,CAACd,QAAQ,CAAC,CAAC,KAAKe,KAAK,CAACf,QAAQ,CAAC,CAAC;MAChD,KAAK/G,UAAU,CAACE,IAAI;QAChB,OAAO2H,KAAK,CAACE,OAAO,CAAC,CAAC,KAAKD,KAAK,CAACC,OAAO,CAAC,CAAC;MAC9C,KAAK/H,UAAU,CAACG,MAAM;QAClB,OAAO6H,QAAQ,CAACH,KAAK,CAACE,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC,KAAKC,QAAQ,CAACF,KAAK,CAACC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;MAC5E,KAAK/H,UAAU,CAACI,OAAO;QACnB,OAAO4H,QAAQ,CAACH,KAAK,CAACE,OAAO,CAAC,CAAC,GAAG,GAAG,CAAC,KAAKC,QAAQ,CAACF,KAAK,CAACC,OAAO,CAAC,CAAC,GAAG,GAAG,CAAC;IAClF;EACJ,CAAC;EACDP,uBAAuBA,CAAC5F,SAAS,EAAEiG,KAAK,EAAEC,KAAK,EAAE;IAC7C,QAAQlG,SAAS;MACb,KAAK5B,UAAU,CAACC,KAAK;QACjB,OAAO,CAACgI,CAAC,GAAGJ,KAAK,CAACd,QAAQ,CAAC,CAAC,EAAEmB,CAAC,GAAGJ,KAAK,CAACf,QAAQ,CAAC,CAAC,EAAEoB,GAAG,GAAGC,IAAI,CAACD,GAAG,CAACF,CAAC,GAAGC,CAAC,CAAC,EAAEE,IAAI,CAAC5G,GAAG,CAAC2G,GAAG,EAAE,EAAE,GAAGA,GAAG,CAAC,KAAK,CAAC;MAC5G,KAAKnI,UAAU,CAACE,IAAI;QAChB,OAAOkI,IAAI,CAACD,GAAG,CAACN,KAAK,CAACE,OAAO,CAAC,CAAC,GAAGD,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC;MAC3D,KAAK/H,UAAU,CAACG,MAAM;QAClB,OAAOiI,IAAI,CAACD,GAAG,CAACN,KAAK,CAACE,OAAO,CAAC,CAAC,GAAGD,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE;MAC5D,KAAK/H,UAAU,CAACI,OAAO;QACnB,OAAOgI,IAAI,CAACD,GAAG,CAACN,KAAK,CAACE,OAAO,CAAC,CAAC,GAAGD,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC,IAAI,GAAG;IACjE;IACA,IAAIE,CAAC,EAAEC,CAAC,EAAEC,GAAG;EACjB,CAAC;EACD5D,2BAA2B,EAAE,SAAAA,CAAA,EAAW;IACpC,IAAI2C,QAAQ,GAAGhB,SAAS,CAACC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,KAAKD,SAAS,CAAC,CAAC,CAAC,GAAGA,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAACpC,MAAM,CAAC,aAAa,CAAC;IAC1G,IAAI3C,WAAW,GAAG,IAAIC,IAAI,CAAC8F,QAAQ,CAAC;IACpC,IAAItF,SAAS,GAAG,IAAI,CAACkC,MAAM,CAAC,WAAW,CAAC;IACxC,IAAIuE,sBAAsB,GAAG,CAAC,IAAI,CAACC,mBAAmB,CAACnH,WAAW,CAAC;IACnE,IAAIoH,sBAAsB,GAAGF,sBAAsB;IACnD,IAAIG,uBAAuB,GAAGH,sBAAsB;IACpD,IAAII,wBAAwB;IAC5B,IAAIC,yBAAyB;IAC7B,IAAIhB,WAAW,GAAG,IAAItG,IAAI,CAACD,WAAW,CAAC;IACvC,IAAIwH,YAAY,GAAG,IAAIvH,IAAI,CAACD,WAAW,CAAC;IACxC,GAAG;MACC,IAAIoH,sBAAsB,EAAE;QACxBpH,WAAW,GAAGuG,WAAW;QACzB;MACJ;MACA,IAAIc,uBAAuB,EAAE;QACzBrH,WAAW,GAAGwH,YAAY;QAC1B;MACJ;MACA,IAAI,CAAClC,UAAU,CAAC7E,SAAS,EAAE8F,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC;MAC7C,IAAI,CAACjB,UAAU,CAAC7E,SAAS,EAAE+G,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;MAC/CF,wBAAwB,GAAG,IAAI,CAACb,mBAAmB,CAAChG,SAAS,EAAE8F,WAAW,EAAER,QAAQ,CAAC;MACrFwB,yBAAyB,GAAG,IAAI,CAACd,mBAAmB,CAAChG,SAAS,EAAE+G,YAAY,EAAEzB,QAAQ,CAAC;MACvFqB,sBAAsB,GAAGE,wBAAwB,IAAI,CAAC,IAAI,CAACH,mBAAmB,CAACZ,WAAW,CAAC;MAC3Fc,uBAAuB,GAAGE,yBAAyB,IAAI,CAAC,IAAI,CAACJ,mBAAmB,CAACK,YAAY,CAAC;IAClG,CAAC,QAAQF,wBAAwB,IAAIC,yBAAyB;IAC9D,IAAI,CAAC5E,MAAM,CAAC,aAAa,EAAE3C,WAAW,CAAC;EAC3C,CAAC;EACDmH,mBAAmB,EAAE,SAAAA,CAASlE,IAAI,EAAE;IAChC,IAAI+C,OAAO,GAAG,IAAI,CAACC,WAAW,CAAC,CAAC;IAChC,IAAIC,OAAO,GAAG,IAAI,CAACC,WAAW,CAAC,CAAC;IAChC,OAAO,CAACrK,OAAO,CAACmH,IAAI,EAAEiD,OAAO,EAAEF,OAAO,CAAC,IAAI,IAAI,CAACvD,KAAK,CAACO,cAAc,CAACC,IAAI,CAAC;EAC9E,CAAC;EACDwE,KAAK,EAAE,SAAAA,CAAA,EAAW;IACd,IAAI,CAAC5H,QAAQ,CAAC,CAAC;IACf,IAAI,CAAC6H,sBAAsB,CAAC,CAAC;IAC7B,IAAI,CAACC,iBAAiB,CAAC,CAAC;IACxB,IAAI,CAACC,gBAAgB,CAAC,CAAC;IACvB,IAAI,CAACC,YAAY,CAAC,CAAC;EACvB,CAAC;EACDH,sBAAsB,EAAE,SAAAA,CAAA,EAAW;IAC/B,IAAII,YAAY,GAAG,IAAI,CAACC,yBAAyB,CAAC,CAAC;IACnD,IAAIC,QAAQ,GAAG9I,oBAAoB,CAAC4I,YAAY,CAAC;IACjD,IAAI,CAAC,IAAI,CAACjE,kBAAkB,IAAI,IAAI,CAACA,kBAAkB,CAACoE,IAAI,KAAKH,YAAY,EAAE;MAC3E,IAAI,CAACjE,kBAAkB,GAAG,IAAImE,QAAQ,CAAC,IAAI,CAAC;IAChD;EACJ,CAAC;EACDE,yBAAyB,EAAE,SAAAA,CAAA,EAAW;IAClC,IAAI,CAACR,sBAAsB,CAAC,CAAC;IAC7B,IAAI,CAACS,QAAQ,CAAC,CAAC;EACnB,CAAC;EACDJ,yBAAyB,EAAE,SAAAA,CAAA,EAAW;IAClC,IAAInH,aAAa,GAAG,IAAI,CAAC+B,MAAM,CAAC,eAAe,CAAC;IAChD,QAAQ/B,aAAa;MACjB,KAAK,OAAO;QACR,OAAO,gBAAgB;MAC3B,KAAK,OAAO;QACR,OAAO,gBAAgB;MAC3B;QACI,OAAO,iBAAiB;IAChC;EACJ,CAAC;EACD+G,iBAAiB,EAAE,SAAAA,CAAA,EAAW;IAC1B,IAAIhH,YAAY,GAAG,IAAI,CAACgC,MAAM,CAAC,cAAc,CAAC;IAC9C,IAAIjC,YAAY,GAAG,IAAI,CAACiC,MAAM,CAAC,cAAc,CAAC;IAC9C,IAAIlC,SAAS,GAAG,IAAI,CAACkC,MAAM,CAAC,WAAW,CAAC;IACxC,IAAInE,iBAAiB,CAACkC,YAAY,CAAC,GAAGlC,iBAAiB,CAACmC,YAAY,CAAC,EAAE;MACnE;IACJ;IACA,IAAInC,iBAAiB,CAACiC,SAAS,CAAC,GAAGjC,iBAAiB,CAACkC,YAAY,CAAC,EAAE;MAChE,IAAI,CAACiC,MAAM,CAAC,WAAW,EAAEjC,YAAY,CAAC;IAC1C,CAAC,MAAM,IAAIlC,iBAAiB,CAACiC,SAAS,CAAC,GAAGjC,iBAAiB,CAACmC,YAAY,CAAC,EAAE;MACvE,IAAI,CAACgC,MAAM,CAAC,WAAW,EAAEhC,YAAY,CAAC;IAC1C;EACJ,CAAC;EACDiH,gBAAgB,EAAE,SAAAA,CAAA,EAAW;IACzB,IAAIQ,qBAAqB;IACzB,IAAIpI,WAAW,GAAG,IAAI,MAAMoI,qBAAqB,GAAG,IAAI,CAACC,kBAAkB,CAAC,IAAI,CAACxE,kBAAkB,CAACyE,qBAAqB,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,KAAKF,qBAAqB,GAAGA,qBAAqB,GAAG,IAAI,CAACC,kBAAkB,CAAC,IAAI,CAAC1F,MAAM,CAAC,aAAa,CAAC,CAAC;IAC/O,IAAI,CAACA,MAAM,CAAC,aAAa,EAAE3C,WAAW,CAAC;EAC3C,CAAC;EACDqI,kBAAkB,EAAE,SAAAA,CAASpF,IAAI,EAAE;IAC/BA,IAAI,GAAG3G,SAAS,CAACiM,aAAa,CAACtF,IAAI,EAAE,IAAI,CAACkD,WAAW,CAAC,CAAC,EAAE,IAAI,CAACF,WAAW,CAAC,CAAC,CAAC;IAC5E,OAAOpK,SAAS,CAACoH,IAAI,CAAC,GAAG,IAAI,CAACuF,QAAQ,CAACvF,IAAI,CAAC,GAAGA,IAAI;EACvD,CAAC;EACD4E,YAAY,EAAE,SAAAA,CAAA,EAAW;IACrB,IAAI,CAACY,gBAAgB,GAAG,IAAI,CAACC,qBAAqB,CAAC,aAAa,CAAC;IACjE,IAAI,CAACC,mBAAmB,GAAG,IAAI,CAACD,qBAAqB,CAAC,oBAAoB,CAAC;EAC/E,CAAC;EACDE,cAAc,EAAE,SAAAA,CAAA,EAAW;IACvB,IAAI,CAACC,gBAAgB,CAACC,mBAAmB,CAAC;MACtCC,IAAI,EAAE,IAAIlM,gBAAgB,CAAE,UAAS+E,OAAO,EAAE;QAC1C,IAAIoH,IAAI,GAAGpH,OAAO,CAACqH,KAAK;QACxB3N,CAAC,CAACsG,OAAO,CAACsH,SAAS,CAAC,CAACC,MAAM,CAAC7N,CAAC,CAAC,QAAQ,CAAC,CAAC8N,IAAI,CAACJ,IAAI,IAAIA,IAAI,CAACI,IAAI,IAAIC,MAAM,CAACL,IAAI,CAAC,CAAC,CAAC;MACpF,CAAE;IACN,CAAC,CAAC;IACF,IAAI,CAACnJ,QAAQ,CAAC,CAAC;EACnB,CAAC;EACDyJ,kBAAkB,EAAE,SAAAA,CAASrG,IAAI,EAAE;IAC/B,IAAIxG,EAAE,CAAC+F,WAAW,CAAC,IAAI,CAAC+G,cAAc,CAAC,EAAE;MACrC9M,EAAE,CAAC+M,IAAI,CAAC,IAAI,CAACD,cAAc,EAAE,IAAI,CAAC;IACtC;IACA,IAAIlJ,GAAG,GAAG,IAAI,CAAC8F,WAAW,CAAC,CAAC;IAC5B,IAAI7F,GAAG,GAAG,IAAI,CAAC2F,WAAW,CAAC,CAAC;IAC5B,IAAI5F,GAAG,GAAGC,GAAG,EAAE;MACX,IAAI,CAACqC,MAAM,CAAC,aAAa,EAAE,IAAI1C,IAAI,CAAD,CAAC,CAAC;MACpC;IACJ;IACA,IAAIwJ,cAAc,GAAG,IAAI,CAACpB,kBAAkB,CAACpF,IAAI,CAAC;IAClD,IAAIA,IAAI,CAACyG,OAAO,CAAC,CAAC,KAAKD,cAAc,CAACC,OAAO,CAAC,CAAC,EAAE;MAC7C,IAAI,CAAC/G,MAAM,CAAC,aAAa,EAAE,IAAI1C,IAAI,CAACwJ,cAAc,CAAC,CAAC;MACpD;IACJ;IACA,IAAIlE,MAAM,GAAG,IAAI,CAACoE,eAAe,CAAC,IAAI,CAAClH,KAAK,CAACE,MAAM,CAAC,MAAM,CAAC,EAAE8G,cAAc,CAAC;IAC5E,IAAI,CAAC,KAAKlE,MAAM,IAAI,CAAC,IAAI,CAAC5B,eAAe,CAAC,CAAC,IAAI,IAAI,CAACiG,uBAAuB,EAAE;MACzErE,MAAM,GAAG,CAAC;IACd;IACA,IAAI,IAAI,CAAC9C,KAAK,IAAI,CAAC,KAAK8C,MAAM,IAAI,CAAC,IAAI,CAACsE,mBAAmB,EAAE;MACzD,IAAI,IAAI,CAACC,eAAe,EAAE;QACtB,IAAIvE,MAAM,GAAG,CAAC,IAAIA,MAAM,GAAG,CAAC,CAAC,EAAE;UAC3B,IAAI,CAACwE,aAAa,CAAC,CAAC;UACpB,IAAI,CAACC,iBAAiB,CAACP,cAAc,CAAC;UACtC,IAAI,CAACQ,aAAa,CAACR,cAAc,CAAC;UAClC,IAAI,CAACS,gBAAgB,CAAC,CAAC;QAC3B,CAAC,MAAM,IAAI,CAAC,KAAK3E,MAAM,IAAI,IAAI,CAACiB,aAAa,EAAE;UAC3C,IAAI,CAACwD,iBAAiB,CAACP,cAAc,CAAC;UACtC,IAAI,CAACQ,aAAa,CAACR,cAAc,CAAC;QACtC,CAAC,MAAM;UACH,IAAI,CAACU,SAAS,CAAC5E,MAAM,EAAEkE,cAAc,CAAC;QAC1C;MACJ,CAAC,MAAM;QACH,IAAI,CAACU,SAAS,CAAC5E,MAAM,EAAEkE,cAAc,CAAC;MAC1C;IACJ,CAAC,MAAM;MACH,IAAI,CAACS,gBAAgB,CAAC,CAAC;MACvB,IAAI,CAACF,iBAAiB,CAACP,cAAc,CAAC;MACtC,IAAI,CAACQ,aAAa,CAACR,cAAc,CAAC;IACtC;IACA,IAAI,CAACjD,aAAa,GAAG,KAAK;EAC9B,CAAC;EACD4D,qBAAqBA,CAACnH,IAAI,EAAE;IACxB,IAAI,CAAC,IAAI,CAAC6G,eAAe,EAAE;MACvB,OAAO,KAAK;IAChB;IACA,OAAO7G,IAAI,IAAI,IAAI,CAAC6G,eAAe,CAACO,sBAAsB,CAAC,CAAC;EAChE,CAAC;EACDC,cAAc,EAAE,SAAAA,CAASrH,IAAI,EAAE;IAC3B,OAAO,IAAI,CAACmH,qBAAqB,CAACnH,IAAI,CAAC,GAAG,IAAI,CAAC6G,eAAe,GAAG,IAAI,CAACrH,KAAK;EAC/E,CAAC;EACDuH,iBAAiB,EAAE,SAAAA,CAAS/G,IAAI,EAAE;IAC9B,IAAI,IAAI,CAACN,MAAM,CAAC,gBAAgB,CAAC,IAAIrD,eAAe,CAAC,IAAI,CAACiL,YAAY,CAAC,CAAC,CAAC,EAAE;MACvE,IAAIC,qBAAqB;MACzB,IAAI,CAAC/H,KAAK,CAACE,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC;MACxC,IAAI,MAAM6H,qBAAqB,GAAG,IAAI,CAACV,eAAe,CAAC,IAAI,KAAK,CAAC,KAAKU,qBAAqB,GAAG,KAAK,CAAC,GAAGA,qBAAqB,CAAC7H,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC;MAC1J,IAAI8H,IAAI,GAAG,IAAI,CAACL,qBAAqB,CAACnH,IAAI,CAAC,GAAG,IAAI,CAAC6G,eAAe,GAAG,IAAI,CAACrH,KAAK;MAC/EgI,IAAI,CAAC9H,MAAM,CAAC,eAAe,EAAEM,IAAI,CAAC;IACtC;EACJ,CAAC;EACDkD,WAAW,EAAE,SAAAA,CAAA,EAAW;IACpB,IAAIuE,SAAS,GAAG,IAAI,CAAC/H,MAAM,CAAC,WAAW,CAAC;IACxC,IAAI+H,SAAS,EAAE;MACX,OAAOA,SAAS;IACpB;IACA,IAAI,IAAI,CAACrK,GAAG,EAAE;MACV,OAAO,IAAI,CAACA,GAAG;IACnB;IACA,IAAI,CAACA,GAAG,GAAG,IAAI,CAAC0C,WAAW,CAAC,KAAK,CAAC,IAAI,IAAI9C,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IACtD,OAAO,IAAI,CAACI,GAAG;EACnB,CAAC;EACD4F,WAAW,EAAE,SAAAA,CAAA,EAAW;IACpB,IAAI0E,SAAS,GAAG,IAAI,CAAChI,MAAM,CAAC,WAAW,CAAC;IACxC,IAAIgI,SAAS,EAAE;MACX,OAAOA,SAAS;IACpB;IACA,IAAI,IAAI,CAACrK,GAAG,EAAE;MACV,OAAO,IAAI,CAACA,GAAG;IACnB;IACA,IAAI,CAACA,GAAG,GAAG,IAAI,CAACyC,WAAW,CAAC,KAAK,CAAC,IAAI,IAAI9C,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IACtD,OAAO,IAAI,CAACK,GAAG;EACnB,CAAC;EACDqJ,eAAe,EAAE,SAAAA,CAASiB,SAAS,EAAEC,OAAO,EAAE;IAC1C,IAAIpK,SAAS,GAAG,IAAI,CAACkC,MAAM,CAAC,WAAW,CAAC;IACxC,IAAIlC,SAAS,KAAK5B,UAAU,CAACC,KAAK,EAAE;MAChC,OAAO,IAAI,CAACgM,gBAAgB,CAACF,SAAS,EAAEC,OAAO,CAAC;IACpD;IACA,IAAIE,cAAc;IAClB,QAAQtK,SAAS;MACb,KAAK5B,UAAU,CAACI,OAAO;QACnB8L,cAAc,GAAG,GAAG;QACpB;MACJ,KAAKlM,UAAU,CAACG,MAAM;QAClB+L,cAAc,GAAG,EAAE;QACnB;MACJ;QACIA,cAAc,GAAG,CAAC;IAC1B;IACA,OAAOlE,QAAQ,CAACgE,OAAO,CAAC/E,WAAW,CAAC,CAAC,GAAGiF,cAAc,CAAC,GAAGlE,QAAQ,CAAC+D,SAAS,CAAC9E,WAAW,CAAC,CAAC,GAAGiF,cAAc,CAAC;EAChH,CAAC;EACDD,gBAAgB,EAAE,SAAAA,CAASF,SAAS,EAAEC,OAAO,EAAE;IAC3C,IAAIG,UAAU,GAAGH,OAAO,CAAC/E,WAAW,CAAC,CAAC,GAAG8E,SAAS,CAAC9E,WAAW,CAAC,CAAC;IAChE,IAAImF,WAAW,GAAGJ,OAAO,CAACjF,QAAQ,CAAC,CAAC,GAAGgF,SAAS,CAAChF,QAAQ,CAAC,CAAC;IAC3D,OAAO,EAAE,GAAGoF,UAAU,GAAGC,WAAW;EACxC,CAAC;EACD/I,eAAe,EAAE,SAAAA,CAASqD,MAAM,EAAE;IAC9B,IAAI,IAAI,CAAC2F,kBAAkB,EAAE;MACzB;IACJ;IACA,IAAI,CAACA,kBAAkB,GAAG,IAAI;IAC9B,IAAIjI,IAAI,GAAG,IAAI,CAACkI,gBAAgB,CAAC5F,MAAM,GAAG,IAAI,CAACnD,iBAAiB,CAAC,CAAC,CAAC;IACnE,IAAI,CAACgB,2BAA2B,CAACH,IAAI,CAAC;IACtC,IAAI,CAACmI,sBAAsB,GAAGC,UAAU,CAAC,MAAM;MAC3C,IAAI,CAACH,kBAAkB,GAAG,KAAK;IACnC,CAAC,CAAC;EACN,CAAC;EACD9I,iBAAiB,EAAE,SAAAA,CAAA,EAAW;IAC1B,OAAO,IAAI,CAACO,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;EAC7C,CAAC;EACDwI,gBAAgB,EAAE,SAAAA,CAAS5F,MAAM,EAAEtC,IAAI,EAAE;IACrC,IAAIqI,KAAK;IACTrI,IAAI,GAAG,IAAI,CAACuF,QAAQ,CAAC,IAAI,MAAM8C,KAAK,GAAGrI,IAAI,CAAC,IAAI,KAAK,CAAC,KAAKqI,KAAK,GAAGA,KAAK,GAAG,IAAI,CAAC3I,MAAM,CAAC,aAAa,CAAC,CAAC;IACtG,IAAI4I,UAAU,GAAGtI,IAAI,CAACyC,OAAO,CAAC,CAAC;IAC/B,IAAI8F,UAAU,GAAGlP,SAAS,CAACmP,oBAAoB,CAAC,IAAI,CAAC9I,MAAM,CAAC,WAAW,CAAC,CAAC,GAAG4C,MAAM;IAClFtC,IAAI,CAACwC,OAAO,CAAC,CAAC,CAAC;IACfxC,IAAI,CAAC0C,QAAQ,CAAC1C,IAAI,CAAC2C,QAAQ,CAAC,CAAC,GAAG4F,UAAU,CAAC;IAC3C,IAAIE,OAAO,GAAGpP,SAAS,CAACqP,gBAAgB,CAAC1I,IAAI,CAAC,CAACyC,OAAO,CAAC,CAAC;IACxDzC,IAAI,CAACwC,OAAO,CAAC8F,UAAU,GAAGG,OAAO,GAAGA,OAAO,GAAGH,UAAU,CAAC;IACzD,OAAOtI,IAAI;EACf,CAAC;EACDsH,YAAY,EAAE,SAAAA,CAAA,EAAW;IACrB,OAAO,IAAI,CAAC7H,QAAQ,CAAC,CAAC;EAC1B,CAAC;EACDkJ,WAAW,EAAE,SAAAA,CAAA,EAAW;IACpB,IAAI,CAACC,oBAAoB,CAAC,CAAC;IAC3B,IAAI,CAAChM,QAAQ,CAAC,CAAC;IACf,IAAI6C,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAAC,CAAC;IAC9BA,QAAQ,CAACoJ,QAAQ,CAACxO,cAAc,CAAC;IACjCoF,QAAQ,CAACqJ,WAAW,CAAChO,oBAAoB,EAAE,OAAO,KAAK,IAAI,CAAC4E,MAAM,CAAC,eAAe,CAAC,CAAC;IACpF,IAAI,CAACqJ,WAAW,CAAC,CAAC;IAClBtJ,QAAQ,CAACyG,MAAM,CAAC,IAAI,CAAC8C,KAAK,CAAC;IAC3B,IAAI,CAACC,YAAY,CAAC,CAAC;IACnB,IAAI,CAACC,aAAa,CAAC,CAAC;IACpB,IAAI,CAACjC,gBAAgB,CAAC,CAAC;IACvBxH,QAAQ,CAAC0J,OAAO,CAAC,IAAI,CAACC,UAAU,CAAC3J,QAAQ,CAAC,CAAC,CAAC;IAC5C,IAAI,CAAC4J,gBAAgB,CAAC,CAAC;IACvB,IAAI,CAACC,aAAa,CAAC,CAAC;IACpB,IAAI,CAAC1I,kBAAkB,CAAC2I,kBAAkB,CAAC,CAAC;IAC5C,IAAI,CAACvC,aAAa,CAAC,CAAC;IACpB,IAAI,CAACwC,OAAO,CAAC,MAAM,EAAE,aAAa,CAAC;IACnC,IAAI,CAACrJ,2BAA2B,CAAC,CAAC;EACtC,CAAC;EACDsJ,OAAO,EAAE,SAAAA,CAAA,EAAW;IAChB,IAAI,CAAC7M,QAAQ,CAAC,CAAC;IACf,IAAI,CAACmK,iBAAiB,CAAC,IAAI,CAACrH,MAAM,CAAC,aAAa,CAAC,CAAC;EACtD,CAAC;EACDqJ,WAAW,EAAE,SAAAA,CAAA,EAAW;IACpB,IAAI,CAAC,IAAI,CAACzC,cAAc,EAAE;MACtB,IAAI,CAAC0C,KAAK,GAAG3Q,CAAC,CAAC,OAAO,CAAC,CAACwQ,QAAQ,CAACvO,mBAAmB,CAAC;MACrD,IAAI,CAACgM,cAAc,GAAGjO,CAAC,CAAC,OAAO,CAAC,CAACwQ,QAAQ,CAAClO,4BAA4B,CAAC;MACvE,IAAI,CAACqO,KAAK,CAAC9C,MAAM,CAAC,IAAI,CAACI,cAAc,CAAC;IAC1C;EACJ,CAAC;EACDoD,qBAAqBA,CAAA,EAAG;IACpB,OAAO,IAAI,CAAC9M,QAAQ,CAAC,CAAC,CAAC0B,MAAM,CAAC,CAAC,IAAI,CAACkB,KAAK,CAAC,CAAC;EAC/C,CAAC;EACDyJ,YAAY,EAAE,SAAAA,CAAA,EAAW;IACrB,IAAI,CAACxJ,QAAQ,CAAC,CAAC,CAACoJ,QAAQ,CAACjO,mBAAmB,GAAG,GAAG,GAAG,IAAI,CAAC8E,MAAM,CAAC,WAAW,CAAC,CAAC;IAC9E,IAAI;MACA3C,WAAW,EAAEA,WAAW;MACxBQ,UAAU,EAAEA;IAChB,CAAC,GAAG,IAAI,CAACmC,MAAM,CAAC,CAAC;IACjB,IAAI,CAACD,QAAQ,CAAC,CAAC,CAACqJ,WAAW,CAACjO,wBAAwB,EAAE0C,UAAU,GAAG,CAAC,CAAC;IACrE,IAAI,CAACiC,KAAK,GAAG,IAAI,CAACmK,mBAAmB,CAAC5M,WAAW,CAAC;IAClD,IAAItD,SAAS,CAAC,CAAC,EAAE;MACb,IAAImQ,UAAU,GAAG,IAAI,CAAC1B,gBAAgB,CAAC,CAAC,CAAC,EAAEnL,WAAW,CAAC;MACvD,IAAI,CAAC8M,WAAW,GAAG,IAAI,CAACC,gBAAgB,CAACF,UAAU,CAAC,GAAG,IAAI,CAACD,mBAAmB,CAACC,UAAU,CAAC,GAAG,IAAI;MAClG,IAAIG,SAAS,GAAG,IAAI,CAAC7B,gBAAgB,CAAC3K,UAAU,EAAER,WAAW,CAAC;MAC9DgN,SAAS,CAACvH,OAAO,CAAC,CAAC,CAAC;MACpB,IAAI,CAACwH,UAAU,GAAG,IAAI,CAACF,gBAAgB,CAACC,SAAS,CAAC,GAAG,IAAI,CAACJ,mBAAmB,CAACI,SAAS,CAAC,GAAG,IAAI;IACnG;IACA,IAAIxM,UAAU,GAAG,CAAC,EAAE;MAChB,IAAI,CAACsJ,eAAe,GAAG,IAAI,CAAC8C,mBAAmB,CAAC,IAAI,CAACzB,gBAAgB,CAAC,CAAC,EAAEnL,WAAW,CAAC,CAAC;IAC1F;IACA,IAAI,CAACkN,eAAe,CAAC,CAAC;EAC1B,CAAC;EACDN,mBAAmB,EAAE,SAAAA,CAAS3J,IAAI,EAAE;IAChC,IAAI;MACAxC,SAAS,EAAEA;IACf,CAAC,GAAG,IAAI,CAACkC,MAAM,CAAC,CAAC;IACjB,IAAIwK,YAAY,GAAG/Q,KAAK,CAACqE,SAAS,CAAC;IACnC,IAAI2M,KAAK,GAAG9R,CAAC,CAAC,OAAO,CAAC,CAAC+R,QAAQ,CAAC,IAAI,CAAC9D,cAAc,CAAC;IACpD,IAAI+D,MAAM,GAAG,IAAI,CAACC,WAAW,CAACtK,IAAI,CAAC;IACnC,IAAIwH,IAAI,GAAG,IAAI,CAAC+C,gBAAgB,CAACJ,KAAK,EAAED,YAAY,EAAEG,MAAM,CAAC;IAC7D,OAAO7C,IAAI;EACf,CAAC;EACD8C,WAAW,EAAE,SAAAA,CAAStK,IAAI,EAAE;IACxB,IAAIwK,aAAa;IACjB,IAAIxM,aAAa,GAAG,IAAI,CAAC0B,MAAM,CAAC,eAAe,CAAC;IAChD1B,aAAa,GAAGrF,UAAU,CAACqF,aAAa,CAAC,GAAG,IAAI,CAACyM,gBAAgB,CAACzM,aAAa,CAAC0M,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG1M,aAAa;IAC3G,OAAO7F,QAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,CAACyI,kBAAkB,CAAC+J,cAAc,CAAC,CAAC,EAAE;MAC1D3K,IAAI,EAAEA,IAAI;MACV5C,GAAG,EAAE,IAAI,CAAC8F,WAAW,CAAC,CAAC;MACvB7F,GAAG,EAAE,IAAI,CAAC2F,WAAW,CAAC,CAAC;MACvB1F,cAAc,EAAE,IAAI,MAAMkN,aAAa,GAAG,IAAI,CAAC9K,MAAM,CAAC,gBAAgB,CAAC,CAAC,IAAI,KAAK,CAAC,KAAK8K,aAAa,GAAGA,aAAa,GAAG7Q,gBAAgB,CAACiR,mBAAmB,CAAC,CAAC;MAC7J/M,eAAe,EAAE,IAAI,CAAC6B,MAAM,CAAC,iBAAiB,CAAC;MAC/C5B,cAAc,EAAE,IAAI,CAAC4B,MAAM,CAAC,gBAAgB,CAAC;MAC7ClC,SAAS,EAAE,IAAI,CAACkC,MAAM,CAAC,WAAW,CAAC;MACnCmL,QAAQ,EAAE,KAAK,CAAC;MAChBjM,iBAAiB,EAAE,IAAI,CAACc,MAAM,CAAC,mBAAmB,CAAC;MACnD7C,iBAAiB,EAAE,IAAI,CAAC6C,MAAM,CAAC,mBAAmB,CAAC;MACnD1B,aAAa,EAAEA,aAAa;MAC5BC,WAAW,EAAE,IAAI,CAAC6M,iBAAiB,CAACJ,IAAI,CAAC,IAAI,CAAC;MAC9C3M,YAAY,EAAE,IAAI,CAACgN,oBAAoB,CAAC,cAAc,CAAC;MACvDC,mBAAmB,EAAE,IAAI,CAACtK,eAAe,CAAC,CAAC;MAC3CtC,UAAU,EAAE,IAAI,CAACsB,MAAM,CAAC,YAAY;IACxC,CAAC,CAAC;EACN,CAAC;EACDwJ,aAAaA,CAAA,EAAG;IACZ9O,YAAY,CAAC6Q,GAAG,CAAC,IAAI,CAAC3E,cAAc,EAAEhL,8BAA8B,CAAC;IACrE,IAAI,OAAO,KAAK,IAAI,CAACoE,MAAM,CAAC,eAAe,CAAC,EAAE;MAC1CtF,YAAY,CAAC8Q,EAAE,CAAC,IAAI,CAAC5E,cAAc,EAAEhL,8BAA8B,EAAE,IAAI,EAAEyD,CAAC,IAAI;QAC5E,IAAI,CAACoM,kBAAkB,CAAC,cAAc,EAAE,EAAE,CAAC;MAC/C,CAAC,CAAC;IACN;EACJ,CAAC;EACDV,gBAAgB,EAAE,SAAAA,CAASW,IAAI,EAAE;IAC7B,IAAIC,IAAI,GAAG,IAAI;IACf,OAAO,UAASC,MAAM,EAAE;MACpBxS,MAAM,CAACwS,MAAM,EAAE;QACXC,SAAS,EAAEF;MACf,CAAC,CAAC;MACF,OAAOD,IAAI,CAACE,MAAM,CAAC;IACvB,CAAC;EACL,CAAC;EACDxB,gBAAgB,EAAE,SAAAA,CAAS9J,IAAI,EAAE;IAC7B,IAAIxC,SAAS,GAAG,IAAI,CAACkC,MAAM,CAAC,WAAW,CAAC;IACxC,IAAItC,GAAG,GAAG/D,SAAS,CAACmS,sBAAsB,CAAChO,SAAS,EAAE,IAAI,CAAC0F,WAAW,CAAC,CAAC,CAAC;IACzE,IAAI7F,GAAG,GAAGhE,SAAS,CAACoS,sBAAsB,CAACjO,SAAS,EAAE,IAAI,CAACwF,WAAW,CAAC,CAAC,CAAC;IACzE,OAAO3J,SAAS,CAACqS,WAAW,CAAC1L,IAAI,EAAE5C,GAAG,EAAEC,GAAG,CAAC;EAChD,CAAC;EACD4M,eAAe,EAAE,SAAAA,CAAA,EAAW;IACxB,IAAI;MACA1M,UAAU,EAAEA;IAChB,CAAC,GAAG,IAAI,CAACmC,MAAM,CAAC,CAAC;IACjBtG,IAAI,CAAC,IAAI,CAACoG,KAAK,CAACC,QAAQ,CAAC,CAAC,EAAE;MACxBkM,IAAI,EAAE,CAAC;MACPC,GAAG,EAAE;IACT,CAAC,CAAC;IACF,IAAI,CAACC,gBAAgB,CAAC,IAAI,CAAChC,WAAW,EAAE,CAAC,CAAC,CAAC;IAC3C,IAAI,CAACgC,gBAAgB,CAAC,IAAI,CAAC7B,UAAU,EAAEzM,UAAU,CAAC;IAClD,IAAI,CAACsO,gBAAgB,CAAC,IAAI,CAAChF,eAAe,EAAE,CAAC,CAAC;EAClD,CAAC;EACDgF,gBAAgBA,CAACrE,IAAI,EAAEsE,WAAW,EAAE;IAChCtE,IAAI,IAAIpO,IAAI,CAACoO,IAAI,CAAC/H,QAAQ,CAAC,CAAC,EAAE;MAC1BkM,IAAI,EAAE,IAAI,CAACI,gBAAgB,CAACD,WAAW,CAAC;MACxCF,GAAG,EAAE;IACT,CAAC,CAAC;EACN,CAAC;EACDG,gBAAgB,EAAE,SAAAA,CAASD,WAAW,EAAE;IACpC,IAAIE,aAAa,GAAG,IAAI,CAACtM,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IACtD,OAAO,GAAG,GAAGoM,WAAW,GAAGE,aAAa,GAAG,GAAG;EAClD,CAAC;EACDlB,iBAAiB,EAAE,SAAAA,CAAS/L,CAAC,EAAE;IAC3B,IAAIvB,SAAS,GAAG,IAAI,CAACkC,MAAM,CAAC,WAAW,CAAC;IACxC,IAAIuM,QAAQ,GAAG5S,SAAS,CAAC6S,WAAW,CAAC1O,SAAS,CAAC;IAC/C,IAAI2O,cAAc,GAAG,IAAI,CAACzL,eAAe,CAAC,CAAC;IAC3C,IAAIuL,QAAQ,IAAI,CAACE,cAAc,EAAE;MAC7B,IAAI,CAACvM,aAAa,CAACb,CAAC,CAACqC,KAAK,CAACgL,aAAa,CAAC;IAC7C,CAAC,MAAM;MACH,IAAIC,QAAQ,GAAG,IAAI,CAAC1L,oBAAoB,CAAC5B,CAAC,CAAC9B,KAAK,CAAC;MACjD,IAAI,CAAC2D,kBAAkB,CAACC,WAAW,CAACwL,QAAQ,EAAEtN,CAAC,CAACqC,KAAK,CAAC;MACtD,IAAI,CAACoE,gBAAgB,CAACzG,CAAC,CAAC;IAC5B;EACJ,CAAC;EACD4B,oBAAoB,EAAE,SAAAA,CAASX,IAAI,EAAE;IACjC,IAAIsM,MAAM,GAAG,IAAItP,IAAI,CAACgD,IAAI,CAAC;IAC3B,IAAIuM,YAAY,GAAG,IAAI,CAACzM,WAAW,CAAC,OAAO,CAAC;IAC5C,IAAIyM,YAAY,EAAE;MACdD,MAAM,CAACE,QAAQ,CAACD,YAAY,CAACE,QAAQ,CAAC,CAAC,CAAC;MACxCH,MAAM,CAACI,UAAU,CAACH,YAAY,CAACI,UAAU,CAAC,CAAC,CAAC;MAC5CL,MAAM,CAACM,UAAU,CAACL,YAAY,CAACM,UAAU,CAAC,CAAC,CAAC;MAC5CP,MAAM,CAACQ,eAAe,CAACP,YAAY,CAACQ,eAAe,CAAC,CAAC,CAAC;IAC1D;IACA,OAAOT,MAAM;EACjB,CAAC;EACD5L,eAAe,EAAE,SAAAA,CAAA,EAAW;IACxB,OAAO,IAAI,CAAChB,MAAM,CAAC,WAAW,CAAC,KAAK,IAAI,CAACA,MAAM,CAAC,cAAc,CAAC;EACnE,CAAC;EACDE,aAAa,EAAE,SAAAA,CAASkG,IAAI,EAAE;IAC1B,IAAItI,SAAS,GAAG,IAAI,CAACkC,MAAM,CAAC,WAAW,CAAC;IACxC,IAAI,IAAI,CAACgB,eAAe,CAAC,CAAC,EAAE;MACxB;IACJ;IACA,IAAIuL,QAAQ,GAAG5S,SAAS,CAAC6S,WAAW,CAAC1O,SAAS,CAAC;IAC/C,IAAI,CAACyO,QAAQ,EAAE;MACX;IACJ;IACA,IAAIe,cAAc,GAAG,IAAI,CAACxN,KAAK,CAACE,MAAM,CAAC,eAAe,CAAC,IAAI,IAAI,CAACF,KAAK,CAACE,MAAM,CAAC,MAAM,CAAC;IACpF,IAAIoG,IAAI,EAAE;MACNkH,cAAc,GAAG3U,CAAC,CAACyN,IAAI,CAAC,CAACC,IAAI,CAAC1K,uBAAuB,CAAC;IAC1D;IACA,IAAI,CAACsL,uBAAuB,GAAG,IAAI;IACnC,IAAI,CAACjH,MAAM,CAAC,aAAa,EAAEsN,cAAc,CAAC;IAC1C,IAAI,CAACtN,MAAM,CAAC,WAAW,EAAEuM,QAAQ,CAAC;IAClC,IAAI,CAACtF,uBAAuB,GAAG,KAAK;IACpC,IAAI,CAACM,gBAAgB,CAAC,CAAC;IACvB,IAAI,CAACgG,gBAAgB,CAAC,CAAC;IACvB,IAAI,CAAC9M,2BAA2B,CAAC,CAAC;IAClC,IAAI,CAAC4G,iBAAiB,CAAC,IAAI,CAAC3B,kBAAkB,CAAC,IAAI,CAAC1F,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;EAC/E,CAAC;EACDuH,gBAAgB,EAAE,SAAAA,CAAA,EAAW;IACzB,IAAI,CAAC,IAAI,CAACmC,UAAU,EAAE;MAClB,IAAI,CAACA,UAAU,GAAG,IAAIlQ,SAAS,CAACb,CAAC,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC6U,gBAAgB,CAAC,CAAC,CAAC;IACxE;IACA,IAAI,CAAC9D,UAAU,CAAC1J,MAAM,CAAC,MAAM,EAAE,IAAI,CAACyN,gBAAgB,CAAC,IAAI,CAAC3N,KAAK,EAAE,IAAI,CAACqH,eAAe,CAAC,CAAC;IACvF,IAAI,CAACuG,wBAAwB,CAAC,CAAC;EACnC,CAAC;EACDF,gBAAgB,EAAE,SAAAA,CAAA,EAAW;IACzB,IAAI;MACAG,UAAU,EAAEA;IAChB,CAAC,GAAG,IAAI,CAAC3N,MAAM,CAAC,CAAC;IACjB,OAAO;MACHyG,IAAI,EAAE,IAAI,CAACgH,gBAAgB,CAAC,IAAI,CAAC3N,KAAK,EAAE,IAAI,CAACqH,eAAe,CAAC;MAC7DyG,OAAO,EAAE,IAAI,CAACC,sBAAsB,CAAC7C,IAAI,CAAC,IAAI,CAAC;MAC/C8C,cAAc,EAAE,IAAI,CAAClO,WAAW,CAACoL,IAAI,CAAC,IAAI,CAAC;MAC3C2C,UAAU,EAAEA;IAChB,CAAC;EACL,CAAC;EACDE,sBAAsB,EAAE,SAAAA,CAASxO,CAAC,EAAE;IAChC,IAAI;MACAhC,WAAW,EAAEA,WAAW;MACxBQ,UAAU,EAAEA;IAChB,CAAC,GAAG,IAAI,CAACmC,MAAM,CAAC,CAAC;IACjB,IAAI4C,MAAM,GAAGvD,CAAC,CAAC0O,SAAS;IACxB,IAAIlQ,UAAU,GAAG,CAAC,EAAE;MAChB,IAAImQ,oBAAoB,GAAG,IAAI,CAACvG,qBAAqB,CAACpK,WAAW,CAAC;MAClE,IAAI4Q,kBAAkB,GAAGD,oBAAoB,IAAIpL,MAAM,GAAG,CAAC,IAAI,CAACoL,oBAAoB,IAAIpL,MAAM,GAAG,CAAC;MAClG,IAAIqL,kBAAkB,EAAE;QACpBrL,MAAM,IAAI,CAAC;MACf;IACJ;IACA,IAAI0K,cAAc,GAAG,IAAI,CAAC9E,gBAAgB,CAAC5F,MAAM,EAAEvF,WAAW,CAAC;IAC/D,IAAI,CAACoD,2BAA2B,CAAC6M,cAAc,CAAC;EACpD,CAAC;EACD1N,WAAW,EAAE,SAAAA,CAAA,EAAW;IACpB,IAAI9B,SAAS,GAAG,IAAI,CAACkC,MAAM,CAAC,WAAW,CAAC;IACxC,IAAIuM,QAAQ,GAAG5S,SAAS,CAACuU,SAAS,CAACpQ,SAAS,CAAC;IAC7C,IAAI,CAACyO,QAAQ,IAAI,IAAI,CAAC4B,eAAe,CAACrQ,SAAS,CAAC,EAAE;MAC9C;IACJ;IACA,IAAI,CAACkC,MAAM,CAAC,WAAW,EAAEuM,QAAQ,CAAC;IAClC,IAAI,CAAChF,gBAAgB,CAAC,CAAC;IACvB,IAAI,CAACgG,gBAAgB,CAAC,CAAC;IACvB,IAAI,CAAC9M,2BAA2B,CAAC,CAAC;IAClC,IAAI,CAAC4G,iBAAiB,CAAC,IAAI,CAAC3B,kBAAkB,CAAC,IAAI,CAAC1F,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;EAC/E,CAAC;EACDmO,eAAe,EAAE,SAAAA,CAASrQ,SAAS,EAAE;IACjC,IAAIJ,GAAG,GAAG,IAAI,CAAC8F,WAAW,CAAC,CAAC;IAC5B,IAAI7F,GAAG,GAAG,IAAI,CAAC2F,WAAW,CAAC,CAAC;IAC5B,OAAO3J,SAAS,CAAC4G,QAAQ,CAACzC,SAAS,EAAEJ,GAAG,EAAEC,GAAG,CAAC,IAAI,IAAI,CAACqC,MAAM,CAAC,cAAc,CAAC,KAAKlC,SAAS;EAC/F,CAAC;EACD4P,wBAAwB,EAAE,SAAAA,CAAA,EAAW;IACjC,IAAI,CAAChE,UAAU,CAAC0E,YAAY,CAAC,MAAM,EAAE,CAAClV,SAAS,CAAC,IAAI,CAACoR,UAAU,CAAC,CAAC;IACjE,IAAI,CAACZ,UAAU,CAAC0E,YAAY,CAAC,MAAM,EAAE,CAAClV,SAAS,CAAC,IAAI,CAACiR,WAAW,CAAC,CAAC;EACtE,CAAC;EACDR,gBAAgB,EAAE,SAAAA,CAAA,EAAW;IACzB,IAAI,CAAC,IAAI,CAAC0E,UAAU,EAAE;MAClB,IAAI,CAACA,UAAU,GAAG,IAAI,CAACxD,gBAAgB,CAAC,IAAI,CAAC9K,QAAQ,CAAC,CAAC,EAAExG,SAAS,EAAE;QAChE+U,OAAO,EAAE,IAAI,CAACC,kBAAkB,CAACvD,IAAI,CAAC,IAAI,CAAC;QAC3CwD,SAAS,EAAE,IAAI,CAACC,mBAAmB,CAACzD,IAAI,CAAC,IAAI,CAAC;QAC9C0D,KAAK,EAAE,IAAI,CAACC,gBAAgB,CAAC3D,IAAI,CAAC,IAAI,CAAC;QACvC4D,YAAY,EAAE,IAAI,CAACC,UAAU,CAAC7D,IAAI,CAAC,IAAI;MAC3C,CAAC,CAAC;IACN;EACJ,CAAC;EACDuD,kBAAkB,EAAE,SAAAA,CAASlP,CAAC,EAAE;IAC5BvF,EAAE,CAAC+M,IAAI,CAAC,IAAI,CAACD,cAAc,EAAE,IAAI,CAAC;IAClC,IAAI;MACA/I,UAAU,EAAEA;IAChB,CAAC,GAAG,IAAI,CAACmC,MAAM,CAAC,CAAC;IACjB,IAAI,CAAC8O,yBAAyB,CAAC,UAAU,CAAC;IAC1CzP,CAAC,CAACqC,KAAK,CAACqN,aAAa,GAAG,IAAI,CAACC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,GAAGnR,UAAU,GAAG,CAAC;IAC1EwB,CAAC,CAACqC,KAAK,CAACuN,cAAc,GAAG,IAAI,CAACD,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,GAAGnR,UAAU,GAAG,CAAC;EAC/E,CAAC;EACDiR,yBAAyB,EAAE,SAAAA,CAASI,MAAM,EAAE;IACxCvW,CAAC,CAAC,GAAG,CAACiG,MAAM,CAACtD,mBAAmB,CAAC,CAAC,CAAC6T,GAAG,CAAC,QAAQ,EAAED,MAAM,CAAC;EAC5D,CAAC;EACDF,gBAAgB,EAAE,SAAAA,CAASI,IAAI,EAAE;IAC7B,IAAItH,IAAI;IACR,IAAIuH,KAAK,GAAG,IAAI,CAACrP,MAAM,CAAC,YAAY,CAAC;IACrC,IAAI,MAAM,KAAKoP,IAAI,EAAE;MACjBtH,IAAI,GAAGuH,KAAK,GAAG,IAAI,CAAClF,WAAW,GAAG,IAAI,CAACG,UAAU;IACrD,CAAC,MAAM,IAAI,MAAM,KAAK8E,IAAI,EAAE;MACxBtH,IAAI,GAAGuH,KAAK,GAAG,IAAI,CAAC/E,UAAU,GAAG,IAAI,CAACH,WAAW;IACrD;IACA,OAAOrC,IAAI;EACf,CAAC;EACD2G,mBAAmB,EAAE,SAAAA,CAASpP,CAAC,EAAE;IAC7B,IAAIuD,MAAM,GAAGvD,CAAC,CAACqC,KAAK,CAACkB,MAAM;IAC3BlJ,IAAI,CAAC,IAAI,CAACkN,cAAc,EAAE;MACtBqF,IAAI,EAAErJ,MAAM,GAAG,IAAI,CAACiM,UAAU,CAAC,CAAC;MAChC3C,GAAG,EAAE;IACT,CAAC,CAAC;IACF,IAAI,CAACoD,uBAAuB,CAAC1M,MAAM,CAAC;EACxC,CAAC;EACD+L,gBAAgB,EAAE,SAAAA,CAAStP,CAAC,EAAE;IAC1B,IAAI,CAACyP,yBAAyB,CAAC,MAAM,CAAC;IACtC,IAAI;MACAzR,WAAW,EAAEA,WAAW;MACxBsQ,UAAU,EAAEA;IAChB,CAAC,GAAG,IAAI,CAAC3N,MAAM,CAAC,CAAC;IACjB,IAAIuP,YAAY,GAAGlQ,CAAC,CAACqC,KAAK,CAAC6N,YAAY;IACvC,IAAIC,UAAU,GAAG,CAACD,YAAY,GAAG,CAAC,GAAGA,YAAY,GAAGjL,IAAI,CAACD,GAAG,CAACkL,YAAY,CAAC;IAC1E,IAAIE,sBAAsB,GAAG,IAAI,CAAChI,qBAAqB,CAACpK,WAAW,CAAC;IACpE,IAAI4Q,kBAAkB,GAAGwB,sBAAsB,KAAK9B,UAAU,GAAG,CAAC,CAAC,KAAK6B,UAAU,GAAG,CAAC,KAAKA,UAAU,CAAC;IACtG,IAAI,CAAC,KAAKA,UAAU,EAAE;MAClB,IAAI,CAACE,eAAe,CAAC,CAAC,EAAEnU,4BAA4B,CAAC;MACrD;IACJ;IACA,IAAIqH,MAAM,GAAG,CAAC4M,UAAU,GAAG,IAAI,CAAC/P,iBAAiB,CAAC,CAAC,IAAIwO,kBAAkB,GAAG,CAAC,GAAG,CAAC,CAAC;IAClF,IAAI3N,IAAI,GAAG,IAAI,CAACkI,gBAAgB,CAAC5F,MAAM,CAAC;IACxC,IAAI,IAAI,CAAC+M,qBAAqB,CAACrP,IAAI,CAAC,EAAE;MAClC,IAAIkP,UAAU,IAAI,CAAC,EAAE;QACjBlP,IAAI,GAAG,IAAIhD,IAAI,CAAC,IAAI,CAACkG,WAAW,CAAC,CAAC,CAAC;MACvC,CAAC,MAAM;QACHlD,IAAI,GAAG,IAAIhD,IAAI,CAAC,IAAI,CAACgG,WAAW,CAAC,CAAC,CAAC;MACvC;IACJ;IACA,IAAI,CAACtD,MAAM,CAAC,aAAa,EAAEM,IAAI,CAAC;EACpC,CAAC;EACDuO,UAAU,EAAE,SAAAA,CAAA,EAAW;IACnB,IAAI,CAAC,IAAI,CAACe,eAAe,EAAE;MACvB,IAAI,CAACA,eAAe,GAAGlX,QAAQ,CAAC,IAAI,CAACqH,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAACC,MAAM,CAAC,YAAY,CAAC;IAChF;IACA,OAAO,IAAI,CAAC4P,eAAe;EAC/B,CAAC;EACDN,uBAAuB,EAAE,SAAAA,CAAS1M,MAAM,EAAE;IACtCA,MAAM,IAAI,IAAI,CAACnD,iBAAiB,CAAC,CAAC;IAClC,IAAIoQ,WAAW,GAAG,IAAI,CAAC7P,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC;IAC/C,IAAI8H,IAAI;IACR,IAAIgI,cAAc;IAClB,IAAIlN,MAAM,GAAG,EAAE,IAAI,IAAI,CAACuH,WAAW,EAAE;MACjCrC,IAAI,GAAG,IAAI,CAACqC,WAAW;MACvB2F,cAAc,GAAGD,WAAW,IAAI,IAAI,CAAC/P,KAAK;IAC9C,CAAC,MAAM,IAAI8C,MAAM,GAAG,CAAC,EAAE,IAAI,IAAI,CAAC0H,UAAU,EAAE;MACxCxC,IAAI,GAAG+H,WAAW,GAAG,IAAI,CAAC1I,eAAe,GAAG,IAAI,CAACmD,UAAU;MAC3DwF,cAAc,GAAGD,WAAW,GAAG,IAAI,CAACvF,UAAU,GAAG,IAAI;IACzD,CAAC,MAAM;MACHxC,IAAI,GAAG,IAAI,CAAChI,KAAK;MACjBgQ,cAAc,GAAGD,WAAW,GAAG,IAAI,CAAC1I,eAAe,GAAG,IAAI;IAC9D;IACA,IAAI,CAACuC,UAAU,CAAC1J,MAAM,CAAC,MAAM,EAAE,IAAI,CAACyN,gBAAgB,CAAC3F,IAAI,EAAEgI,cAAc,CAAC,CAAC;EAC/E,CAAC;EACDrC,gBAAgB,EAAE,SAAAA,CAAS3F,IAAI,EAAEgI,cAAc,EAAE;IAC7C,IAAIC,OAAO,GAAGjI,IAAI,CAACkI,mBAAmB,CAAC,CAAC;IACxC,IAAI;MACAnS,UAAU,EAAEA;IAChB,CAAC,GAAG,IAAI,CAACmC,MAAM,CAAC,CAAC;IACjB,IAAInC,UAAU,GAAG,CAAC,IAAIiS,cAAc,EAAE;MAClC,IAAIG,qBAAqB,GAAGH,cAAc,CAACE,mBAAmB,CAAC,CAAC;MAChED,OAAO,GAAG,EAAE,CAACnR,MAAM,CAACmR,OAAO,EAAE,KAAK,CAAC,CAACnR,MAAM,CAACqR,qBAAqB,CAAC;IACrE;IACA,OAAOF,OAAO;EAClB,CAAC;EACDJ,qBAAqB,EAAE,SAAAA,CAASrP,IAAI,EAAE;IAClC,IAAI,IAAI,CAACR,KAAK,CAACoQ,UAAU,CAAC5P,IAAI,CAAC,EAAE;MAC7B;IACJ;IACA,IAAI5C,GAAG,GAAG,IAAI,CAAC8F,WAAW,CAAC,CAAC;IAC5B,IAAI7F,GAAG,GAAG,IAAI,CAAC2F,WAAW,CAAC,CAAC;IAC5B,IAAIwD,cAAc,GAAGnN,SAAS,CAACiM,aAAa,CAACtF,IAAI,EAAE5C,GAAG,EAAEC,GAAG,CAAC;IAC5D,OAAOmJ,cAAc,KAAKpJ,GAAG,IAAIoJ,cAAc,KAAKnJ,GAAG;EAC3D,CAAC;EACDiM,aAAa,EAAE,SAAAA,CAAA,EAAW;IACtB,IAAI1L,eAAe,GAAG,IAAI,CAAC8B,MAAM,CAAC,iBAAiB,CAAC;IACpD,IAAI9B,eAAe,EAAE;MACjB,IAAIiS,YAAY,GAAG,IAAI,CAACtF,gBAAgB,CAAClS,CAAC,CAAC,OAAO,CAAC,EAAEU,MAAM,EAAE;QACzD6F,iBAAiB,EAAE,IAAI,CAACc,MAAM,CAAC,mBAAmB,CAAC;QACnDyG,IAAI,EAAEzM,mBAAmB,CAACoW,MAAM,CAAC,4BAA4B,CAAC;QAC9DxC,OAAO,EAAEyC,IAAI,IAAI;UACb,IAAI,CAACC,YAAY,CAACD,IAAI,CAAC;QAC3B,CAAC;QACDxO,IAAI,EAAE,SAAS;QACf0O,WAAW,EAAE,MAAM;QACnBC,kBAAkB,EAAE,CAAC;MACzB,CAAC,CAAC,CAACzQ,QAAQ,CAAC,CAAC,CAACoJ,QAAQ,CAACpO,2BAA2B,CAAC;MACnD,IAAI,CAAC0V,QAAQ,GAAG9X,CAAC,CAAC,OAAO,CAAC,CAACwQ,QAAQ,CAACrO,qBAAqB,CAAC,CAAC0L,MAAM,CAAC2J,YAAY,CAAC;MAC/E,IAAI,CAACpQ,QAAQ,CAAC,CAAC,CAACyG,MAAM,CAAC,IAAI,CAACiK,QAAQ,CAAC;IACzC;IACA,IAAI,CAAC1Q,QAAQ,CAAC,CAAC,CAACqJ,WAAW,CAACpO,yBAAyB,EAAEkD,eAAe,CAAC;EAC3E,CAAC;EACDgL,oBAAoB,EAAE,SAAAA,CAAA,EAAW;IAC7B,IAAI,CAACwH,eAAe,GAAG/X,CAAC,CAAC,SAAS,CAAC,CAACgY,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,CAACjG,QAAQ,CAAC,IAAI,CAAC3K,QAAQ,CAAC,CAAC,CAAC;IACpF,IAAI,CAAC6Q,eAAe,CAAC,IAAI,CAAC5Q,MAAM,CAAC,OAAO,CAAC,CAAC;EAC9C,CAAC;EACD4Q,eAAe,EAAE,SAAAA,CAASrT,KAAK,EAAE;IAC7B,IAAIsT,SAAS,GAAG,IAAI,CAACtP,cAAc,CAAChE,KAAK,CAAC;IAC1C,IAAI,CAACuT,iBAAiB,CAAC,CAAC,CAACC,GAAG,CAACnX,iBAAiB,CAAC8I,aAAa,CAACmO,SAAS,EAAEnV,+BAA+B,CAAC,CAAC;EAC7G,CAAC;EACDoV,iBAAiB,EAAE,SAAAA,CAAA,EAAW;IAC1B,OAAO,IAAI,CAACJ,eAAe;EAC/B,CAAC;EACDnD,gBAAgB,EAAE,SAAAA,CAAA,EAAW;IACzBzT,EAAE,CAAC+M,IAAI,CAAC,IAAI,CAAC/G,KAAK,CAACC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC;IACpC,IAAI,CAACiR,iBAAiB,CAAC,IAAI,CAAClR,KAAK,EAAEtE,kBAAkB,EAAEC,gBAAgB,EAAEF,4BAA4B,CAAC;IACtG,IAAI,IAAI,CAACyE,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE;MAC/BlG,EAAE,CAAC+M,IAAI,CAAC,IAAI,CAACM,eAAe,CAACpH,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC;MAC9C,IAAI,CAACiR,iBAAiB,CAAC,IAAI,CAAC7J,eAAe,EAAE3L,kBAAkB,EAAEC,gBAAgB,EAAEF,4BAA4B,CAAC;IACpH;EACJ,CAAC;EACDyV,iBAAiB,EAAE,SAAAA,CAASlJ,IAAI,EAAEmJ,IAAI,EAAEC,EAAE,EAAEC,QAAQ,EAAE;IAClD,OAAOrX,EAAE,CAACsX,OAAO,CAACtJ,IAAI,CAAC/H,QAAQ,CAAC,CAAC,EAAE;MAC/B8B,IAAI,EAAE,KAAK;MACXoP,IAAI,EAAE;QACFI,KAAK,EAAEJ,IAAI;QACXK,OAAO,EAAEL;MACb,CAAC;MACDC,EAAE,EAAE;QACAG,KAAK,EAAEH,EAAE;QACTI,OAAO,EAAEJ;MACb,CAAC;MACDC,QAAQ,EAAEA;IACd,CAAC,CAAC;EACN,CAAC;EACD3J,SAAS,EAAE,SAAAA,CAAS5E,MAAM,EAAErF,KAAK,EAAE;IAC/B,IAAI,CAAC,KAAKqF,MAAM,IAAI,CAAC,KAAK0B,IAAI,CAACD,GAAG,CAACzB,MAAM,CAAC,IAAI,IAAI,CAACwH,gBAAgB,CAAC7M,KAAK,CAAC,EAAE;MACxE,IAAIgU,OAAO,GAAG,IAAI,CAACtH,mBAAmB,CAAC1M,KAAK,CAAC;MAC7C,IAAIqF,MAAM,GAAG,CAAC,EAAE;QACZ,IAAI,CAAC0H,UAAU,IAAI,IAAI,CAACA,UAAU,CAACvK,QAAQ,CAAC,CAAC,CAACyR,MAAM,CAAC,CAAC;QACtD,IAAI,CAAClH,UAAU,GAAGiH,OAAO;MAC7B,CAAC,MAAM;QACH,IAAI,CAACpH,WAAW,IAAI,IAAI,CAACA,WAAW,CAACpK,QAAQ,CAAC,CAAC,CAACyR,MAAM,CAAC,CAAC;QACxD,IAAI,CAACrH,WAAW,GAAGoH,OAAO;MAC9B;MACA,IAAI,CAAChH,eAAe,CAAC,CAAC;IAC1B;IACA,IAAI+B,aAAa,GAAG,IAAI,CAAC7M,iBAAiB,CAAC,CAAC;IAC5C,IAAIgS,UAAU,GAAG7O,MAAM,GAAG,CAAC,GAAG,CAAC,GAAGA,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IACrD,IAAI8O,WAAW,GAAG,CAACpF,aAAa,GAAGmF,UAAU,GAAG,IAAI,CAAC5C,UAAU,CAAC,CAAC;IACjE,IAAI8C,oBAAoB,GAAG,IAAI,CAAC/K,cAAc,CAACgL,QAAQ,CAAC,CAAC,CAAC3F,IAAI;IAC9D,IAAI0F,oBAAoB,KAAKD,WAAW,EAAE;MACtC,IAAI,IAAI,CAACG,2BAA2B,EAAE;QAClC,IAAI,CAACC,2BAA2B,CAAClP,MAAM,EAAErF,KAAK,CAAC;MACnD,CAAC,MAAM;QACH,IAAI,CAACmS,eAAe,CAACgC,WAAW,EAAEnW,4BAA4B,CAAC,CAACwW,IAAI,CAAC,IAAI,CAACD,2BAA2B,CAAC9G,IAAI,CAAC,IAAI,EAAEpI,MAAM,EAAErF,KAAK,CAAC,CAAC;MACpI;IACJ;EACJ,CAAC;EACDmS,eAAe,EAAE,SAAAA,CAASwB,EAAE,EAAEC,QAAQ,EAAE;IACpC,OAAOrX,EAAE,CAACsX,OAAO,CAAC,IAAI,CAACxK,cAAc,EAAE;MACnC/E,IAAI,EAAE,OAAO;MACboP,IAAI,EAAE;QACFhF,IAAI,EAAE,IAAI,CAACrF,cAAc,CAACgL,QAAQ,CAAC,CAAC,CAAC3F;MACzC,CAAC;MACDiF,EAAE,EAAE;QACAjF,IAAI,EAAEiF;MACV,CAAC;MACDC,QAAQ,EAAEA;IACd,CAAC,CAAC;EACN,CAAC;EACDtL,QAAQ,EAAEtI,KAAK,IAAI,IAAID,IAAI,CAACC,KAAK,CAAC;EAClC+S,YAAY,EAAE,SAAAA,CAASD,IAAI,EAAE;IACzB,IAAI2B,KAAK,GAAG,IAAI1U,IAAI,CAAD,CAAC;IACpB,IAAI,IAAI,CAAC0D,eAAe,CAAC,CAAC,EAAE;MACxB,IAAI,CAACE,kBAAkB,CAACC,WAAW,CAAC6Q,KAAK,EAAE3B,IAAI,CAAC3O,KAAK,CAAC;MACtD;IACJ;IACA,IAAI,CAACmQ,2BAA2B,GAAG,IAAI;IACvC,IAAI,CAAC7R,MAAM,CAAC,WAAW,EAAE,IAAI,CAACA,MAAM,CAAC,cAAc,CAAC,CAAC;IACrD,IAAI,CAACkB,kBAAkB,CAACC,WAAW,CAAC6Q,KAAK,EAAE3B,IAAI,CAAC3O,KAAK,CAAC;IACtD,IAAI,CAAC6L,gBAAgB,CAAC,CAAC;IACvB,IAAI,CAACsE,2BAA2B,GAAG,KAAK;EAC5C,CAAC;EACDC,2BAA2B,EAAE,SAAAA,CAASlP,MAAM,EAAEqP,OAAO,EAAE;IACnD,IAAI,CAACC,eAAe,CAACtP,MAAM,CAAC;IAC5B,IAAI,CAAC2H,eAAe,CAAC,CAAC;IACtB,IAAI,CAAC4H,cAAc,CAAC,CAAC;IACrB,IAAI,CAAC5K,gBAAgB,CAAC,CAAC;IACvB,IAAI,CAACF,iBAAiB,CAAC4K,OAAO,CAAC;IAC/B,IAAI,CAAC3K,aAAa,CAAC2K,OAAO,CAAC;IAC3B,IAAI,CAAC/Q,kBAAkB,CAAC2I,kBAAkB,CAAC,CAAC;EAChD,CAAC;EACDqI,eAAe,EAAE,SAAAA,CAAStP,MAAM,EAAE;IAC9B,IAAIwP,qBAAqB;IACzB,IAAI,CAAC,KAAKxP,MAAM,EAAE;MACd;IACJ;IACA,IAAI;MACA/E,UAAU,EAAEA;IAChB,CAAC,GAAG,IAAI,CAACmC,MAAM,CAAC,CAAC;IACjB,IAAIqS,UAAU;IACd,IAAIC,eAAe;IACnB,IAAIC,eAAe;IACnB,IAAIC,mBAAmB;IACvB,IAAIC,kBAAkB;IACtB,IAAI7P,MAAM,GAAG,CAAC,EAAE;MACZyP,UAAU,GAAG,CAAC;MACdC,eAAe,GAAG,aAAa;MAC/BC,eAAe,GAAG,YAAY;MAC9BC,mBAAmB,GAAG,OAAO;MAC7BC,kBAAkB,GAAG,CAAC,KAAK5U,UAAU,GAAG,OAAO,GAAG,iBAAiB;IACvE,CAAC,MAAM;MACHwU,UAAU,GAAG,CAAC,CAAC;MACfC,eAAe,GAAG,YAAY;MAC9BC,eAAe,GAAG,aAAa;MAC/BC,mBAAmB,GAAG,CAAC,KAAK3U,UAAU,GAAG,OAAO,GAAG,iBAAiB;MACpE4U,kBAAkB,GAAG,OAAO;IAChC;IACA,IAAI,CAAC,IAAI,CAACH,eAAe,CAAC,EAAE;MACxB;IACJ;IACA,IAAII,eAAe,GAAG,IAAI,CAACJ,eAAe,CAAC,CAACtS,MAAM,CAAC,MAAM,CAAC;IAC1D,IAAI,MAAMoS,qBAAqB,GAAG,IAAI,CAACG,eAAe,CAAC,CAAC,IAAI,KAAK,CAAC,KAAKH,qBAAqB,GAAG,KAAK,CAAC,GAAGA,qBAAqB,CAACrS,QAAQ,CAAC,CAAC,CAACyR,MAAM,CAAC,CAAC;IACjJ,IAAI,CAACe,eAAe,CAAC,GAAG,IAAI,CAACtI,mBAAmB,CAAC,IAAI,CAACzB,gBAAgB,CAAC6J,UAAU,GAAGxU,UAAU,EAAE6U,eAAe,CAAC,CAAC;IACjH,IAAI,CAACD,kBAAkB,CAAC,CAAC1S,QAAQ,CAAC,CAAC,CAACyR,MAAM,CAAC,CAAC;IAC5C,IAAI,CAAC,KAAK3T,UAAU,EAAE;MAClB,IAAI,CAAC4U,kBAAkB,CAAC,GAAG,IAAI,CAACH,eAAe,CAAC;IACpD,CAAC,MAAM;MACH,IAAI,CAACG,kBAAkB,CAAC,GAAG,IAAI,CAACD,mBAAmB,CAAC;MACpD,IAAI,CAACA,mBAAmB,CAAC,GAAG,IAAI,CAACF,eAAe,CAAC;IACrD;IACA,IAAIK,YAAY,GAAG,IAAI,CAACnK,gBAAgB,CAAC,CAAC6J,UAAU,EAAEK,eAAe,CAAC;IACtE,IAAI,CAACJ,eAAe,CAAC,GAAG,IAAI,CAAClI,gBAAgB,CAACuI,YAAY,CAAC,GAAG,IAAI,CAAC1I,mBAAmB,CAAC0I,YAAY,CAAC,GAAG,IAAI;EAC/G,CAAC;EACDR,cAAc,EAAE,SAAAA,CAAA,EAAW;IACvBzY,IAAI,CAAC,IAAI,CAACkN,cAAc,EAAE;MACtBqF,IAAI,EAAE,CAAC;MACPC,GAAG,EAAE;IACT,CAAC,CAAC;EACN,CAAC;EACD0G,MAAM,EAAE,SAAAA,CAAA,EAAW;IACf,IAAI,CAAC1V,QAAQ,CAAC,CAAC;IACf,IAAI,CAAC2V,oBAAoB,CAAC,CAAC;IAC3B,OAAO,IAAI,CAACjM,cAAc;IAC1B,OAAO,IAAI,CAAC8C,UAAU;IACtB,OAAO,IAAI,CAAC+G,QAAQ;EACxB,CAAC;EACDoC,oBAAoB,EAAE,SAAAA,CAAA,EAAW;IAC7B,OAAO,IAAI,CAACjD,eAAe;EAC/B,CAAC;EACDkD,aAAa,EAAE,SAAAA,CAAA,EAAW;IACtB,IAAI,CAAChT,KAAK,CAACC,QAAQ,CAAC,CAAC,CAACyR,MAAM,CAAC,CAAC;IAC9B,IAAI,CAACrH,WAAW,IAAI,IAAI,CAACA,WAAW,CAACpK,QAAQ,CAAC,CAAC,CAACyR,MAAM,CAAC,CAAC;IACxD,IAAI,CAACrK,eAAe,IAAI,IAAI,CAACA,eAAe,CAACpH,QAAQ,CAAC,CAAC,CAACyR,MAAM,CAAC,CAAC;IAChE,IAAI,CAAClH,UAAU,IAAI,IAAI,CAACA,UAAU,CAACvK,QAAQ,CAAC,CAAC,CAACyR,MAAM,CAAC,CAAC;IACtD,OAAO,IAAI,CAAC1R,KAAK;IACjB,OAAO,IAAI,CAACqH,eAAe;IAC3B,OAAO,IAAI,CAACgD,WAAW;IACvB,OAAO,IAAI,CAACG,UAAU;IACtB,OAAO,IAAI,CAACzG,aAAa;EAC7B,CAAC;EACDkP,QAAQ,EAAE,SAAAA,CAAA,EAAW;IACjBC,YAAY,CAAC,IAAI,CAACvK,sBAAsB,CAAC;IACzC,IAAI,CAACvL,QAAQ,CAAC,CAAC;EACnB,CAAC;EACDkK,aAAa,EAAE,SAAAA,CAAA,EAAW;IACtB,IAAI,CAAC6L,iBAAiB,CAAC,CAAC;IACxB,IAAI,CAACH,aAAa,CAAC,CAAC;IACpB,IAAI,CAACvJ,YAAY,CAAC,CAAC;EACvB,CAAC;EACD2J,kBAAkB,EAAE,SAAAA,CAAA,EAAW;IAC3B,IAAI,CAAC3I,eAAe,CAAC,CAAC;EAC1B,CAAC;EACD4I,eAAe,EAAE,SAAAA,CAAA,EAAW;IACxB,IAAI,CAACjW,QAAQ,CAACkW,KAAK,CAAC,IAAI,EAAEhR,SAAS,CAAC;IACpC,IAAI,CAACiF,iBAAiB,CAAC,IAAI,CAACrH,MAAM,CAAC,aAAa,CAAC,CAAC;EACtD,CAAC;EACDqT,gBAAgB,EAAE,SAAAA,CAAA,EAAW;IACzB,IAAIC,sBAAsB;IAC1B,IAAI,CAACpW,QAAQ,CAACkW,KAAK,CAAC,IAAI,EAAEhR,SAAS,CAAC;IACpC,IAAI,CAACtC,KAAK,CAACE,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC;IACxC,IAAI,MAAMsT,sBAAsB,GAAG,IAAI,CAACnM,eAAe,CAAC,IAAI,KAAK,CAAC,KAAKmM,sBAAsB,GAAG,KAAK,CAAC,GAAGA,sBAAsB,CAACtT,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC;EACjK,CAAC;EACDyL,kBAAkB,EAAE,SAAAA,CAASpK,UAAU,EAAEsL,QAAQ,EAAE;IAC/C,IAAI4G,sBAAsB,EAAEC,iBAAiB,EAAEC,gBAAgB;IAC/D,IAAI,CAAC3T,KAAK,CAACE,MAAM,CAACqB,UAAU,EAAEsL,QAAQ,CAAC;IACvC,IAAI,MAAM4G,sBAAsB,GAAG,IAAI,CAACpM,eAAe,CAAC,IAAI,KAAK,CAAC,KAAKoM,sBAAsB,GAAG,KAAK,CAAC,GAAGA,sBAAsB,CAACvT,MAAM,CAACqB,UAAU,EAAEsL,QAAQ,CAAC;IAC5J,IAAI,MAAM6G,iBAAiB,GAAG,IAAI,CAACrJ,WAAW,CAAC,IAAI,KAAK,CAAC,KAAKqJ,iBAAiB,GAAG,KAAK,CAAC,GAAGA,iBAAiB,CAACxT,MAAM,CAACqB,UAAU,EAAEsL,QAAQ,CAAC;IACzI,IAAI,MAAM8G,gBAAgB,GAAG,IAAI,CAACnJ,UAAU,CAAC,IAAI,KAAK,CAAC,KAAKmJ,gBAAgB,GAAG,KAAK,CAAC,GAAGA,gBAAgB,CAACzT,MAAM,CAACqB,UAAU,EAAEsL,QAAQ,CAAC;EACzI,CAAC;EACD+G,kBAAkB,EAAE,SAAAA,CAAShW,GAAG,EAAE;IAC9B,IAAI,CAACiW,0BAA0B,CAAC,CAAC;IACjC,IAAI,CAAC3T,MAAM,CAAC,WAAW,EAAE,IAAI,CAACuB,cAAc,CAAC7D,GAAG,CAAC,CAAC;IAClD,IAAI,CAAC+N,kBAAkB,CAAC,KAAK,EAAE,IAAI,CAACjI,WAAW,CAAC,CAAC,CAAC;EACtD,CAAC;EACDoQ,kBAAkB,EAAE,SAAAA,CAASjW,GAAG,EAAE;IAC9B,IAAI,CAACgW,0BAA0B,CAAC,CAAC;IACjC,IAAI,CAAC3T,MAAM,CAAC,WAAW,EAAE,IAAI,CAACuB,cAAc,CAAC5D,GAAG,CAAC,CAAC;IAClD,IAAI,CAAC8N,kBAAkB,CAAC,KAAK,EAAE,IAAI,CAACnI,WAAW,CAAC,CAAC,CAAC;EACtD,CAAC;EACDqQ,0BAA0B,EAAE,SAAAA,CAAA,EAAW;IACnC,IAAI,CAAC3T,MAAM,CAAC;MACR+H,SAAS,EAAE,IAAI;MACfC,SAAS,EAAE;IACf,CAAC,CAAC;IACF,IAAI,CAACyD,kBAAkB,CAAC,KAAK,EAAE,IAAI,CAACjI,WAAW,CAAC,CAAC,CAAC;IAClD,IAAI,CAACiI,kBAAkB,CAAC,KAAK,EAAE,IAAI,CAACnI,WAAW,CAAC,CAAC,CAAC;EACtD,CAAC;EACDuQ,mBAAmB,EAAE,SAAAA,CAAStW,KAAK,EAAEuW,aAAa,EAAE;IAChDA,aAAa,CAACC,OAAO,CAACC,IAAI,IAAI;MAC1B,IAAI,CAAClK,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,EAAE,IAAI,CAAChK,KAAK,CAACmU,cAAc,CAACD,IAAI,CAAC,CAAC;IACrE,CAAC,CAAC;IACFzW,KAAK,CAACwW,OAAO,CAACC,IAAI,IAAI;MAClB,IAAI,CAAClK,OAAO,CAAC,UAAU,EAAE,IAAI,EAAE,IAAI,CAAChK,KAAK,CAACmU,cAAc,CAACD,IAAI,CAAC,CAAC;IACnE,CAAC,CAAC;IACF,IAAI,IAAI,CAAChU,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE;MAC/B8T,aAAa,CAACC,OAAO,CAACC,IAAI,IAAI;QAC1B,IAAI,CAAClK,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC3C,eAAe,CAAC8M,cAAc,CAACD,IAAI,CAAC,CAAC;MAC/E,CAAC,CAAC;MACFzW,KAAK,CAACwW,OAAO,CAACC,IAAI,IAAI;QAClB,IAAI,CAAClK,OAAO,CAAC,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC3C,eAAe,CAAC8M,cAAc,CAACD,IAAI,CAAC,CAAC;MAC7E,CAAC,CAAC;IACN;EACJ,CAAC;EACD1M,aAAa,EAAE,SAAAA,CAAS/J,KAAK,EAAE;IAC3B,IAAI2W,MAAM;IACV3W,KAAK,GAAG,IAAI,MAAM2W,MAAM,GAAG3W,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK2W,MAAM,GAAGA,MAAM,GAAG,IAAI,CAAClU,MAAM,CAAC,aAAa,CAAC;IAC5F,IAAImU,MAAM,GAAG,KAAK,GAAG,IAAIvb,IAAI,CAAD,CAAC;IAC7B,IAAIkP,IAAI,GAAG,IAAI,CAACH,cAAc,CAACpK,KAAK,CAAC;IACrC,IAAI6W,QAAQ,GAAGtM,IAAI,CAACmM,cAAc,CAAC1W,KAAK,CAAC;IACzC,IAAI,CAACuM,OAAO,CAAC,IAAI,EAAEqK,MAAM,EAAEC,QAAQ,CAAC;IACpC,IAAI,CAACtK,OAAO,CAAC,kBAAkB,EAAEqK,MAAM,CAAC;IACxC,IAAI,CAACnO,mBAAmB,CAACmO,MAAM,CAAC;EACpC,CAAC;EACDE,sBAAsB,EAAE,SAAAA,CAASC,QAAQ,EAAEjE,IAAI,EAAE;IAC7C,IAAI,CAACnJ,mBAAmB,GAAG,IAAI;IAC/BoN,QAAQ,CAAClB,KAAK,CAAC,IAAI,EAAE/C,IAAI,CAAC;IAC1B,OAAO,IAAI,CAACnJ,mBAAmB;EACnC,CAAC;EACDqN,cAAc,EAAE,SAAAA,CAASlE,IAAI,EAAE;IAC3B,IAAI;MACA9S,KAAK,EAAEA,KAAK;MACZuW,aAAa,EAAEA;IACnB,CAAC,GAAGzD,IAAI;IACR,QAAQA,IAAI,CAACjB,IAAI;MACb,KAAK,OAAO;QACR,IAAI,CAAClS,QAAQ,CAACmT,IAAI,CAAC;QACnB,IAAI,CAACwC,oBAAoB,CAAC,CAAC;QAC3B;MACJ,KAAK,KAAK;MACV,KAAK,KAAK;QACN,IAAI,CAACnV,GAAG,GAAG,KAAK,CAAC;QACjB,IAAI,CAACC,GAAG,GAAG,KAAK,CAAC;QACjB,IAAI,CAAC0W,sBAAsB,CAAC,IAAI,CAAC1N,kBAAkB,EAAE,CAAC,IAAI,CAAC3G,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;QAClF,IAAI,CAACoH,aAAa,CAAC,CAAC;QACpB,IAAI,CAACG,gBAAgB,CAAC,CAAC;QACvB;MACJ,KAAK,eAAe;QAChB,IAAI,CAAChC,yBAAyB,CAAC,CAAC;QAChC,IAAI,CAACN,gBAAgB,CAAC,CAAC;QACvB;MACJ,KAAK,gBAAgB;QACjB,IAAI,CAACmC,aAAa,CAAC,CAAC;QACpB,IAAI,CAACsG,wBAAwB,CAAC,CAAC;QAC/B;MACJ,KAAK,aAAa;QACd,IAAI,CAAC5D,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,IAAI,CAAChK,KAAK,CAACmU,cAAc,CAACH,aAAa,CAAC,CAAC;QACpE,IAAI,CAACnN,kBAAkB,CAACpJ,KAAK,CAAC;QAC9B;MACJ,KAAK,WAAW;QACZ,IAAI,CAACwC,QAAQ,CAAC,CAAC,CAACyU,WAAW,CAACtZ,mBAAmB,GAAG,GAAG,GAAG4Y,aAAa,CAAC;QACtE,IAAI,CAAC9O,iBAAiB,CAAC,CAAC;QACxB,IAAI,CAACoC,aAAa,CAAC,CAAC;QACpB,IAAI,CAACG,gBAAgB,CAAC,CAAC;QACvB,IAAI,CAACD,aAAa,CAAC,CAAC;QACpB;MACJ,KAAK,cAAc;MACnB,KAAK,cAAc;QACf,IAAI,CAACtC,iBAAiB,CAAC,CAAC;QACxB,IAAI,CAAC0I,wBAAwB,CAAC,CAAC;QAC/B;MACJ,KAAK,OAAO;QACR,IAAI,QAAQ,KAAK,IAAI,CAAC1N,MAAM,CAAC,eAAe,CAAC,EAAE;UAC3C,IAAI,CAACkB,kBAAkB,CAACuT,mBAAmB,CAAC,CAAClX,KAAK,CAAC,EAAE,CAACuW,aAAa,CAAC,CAAC;QACzE;QACA,IAAI,CAAClD,eAAe,CAACrT,KAAK,CAAC;QAC3B,IAAI,CAACL,QAAQ,CAACmT,IAAI,CAAC;QACnB;MACJ,KAAK,QAAQ;QACT,IAAI,QAAQ,KAAK,IAAI,CAACrQ,MAAM,CAAC,eAAe,CAAC,EAAE;UAC3C,IAAI,CAACkB,kBAAkB,CAACuT,mBAAmB,CAAClX,KAAK,EAAEuW,aAAa,CAAC;QACrE;QACA,IAAI,CAACY,uBAAuB,CAACnX,KAAK,EAAEuW,aAAa,CAAC;QAClD,IAAI,CAAC5R,qBAAqB,CAAC,KAAK,CAAC,CAAC;QAClC;MACJ,KAAK,YAAY;QACb,IAAI,CAACkF,aAAa,CAAC,CAAC;QACpB,IAAI,CAACG,gBAAgB,CAAC,CAAC;QACvB;MACJ,KAAK,aAAa;QACd,IAAI,CAACzH,KAAK,CAACE,MAAM,CAAC,aAAa,EAAEzC,KAAK,CAAC;QACvC;MACJ,KAAK,oBAAoB;QACrB,IAAI,CAACyI,mBAAmB,GAAG,IAAI,CAACD,qBAAqB,CAAC,oBAAoB,CAAC;QAC3E;MACJ,KAAK,eAAe;MACpB,KAAK,yBAAyB;MAC9B,KAAK,cAAc;MACnB,KAAK,iBAAiB;QAClB,IAAI,CAAC4O,WAAW,CAAC,CAAC;QAClB;MACJ,KAAK,gBAAgB;QACjB;MACJ,KAAK,YAAY;MACjB,KAAK,iBAAiB;MACtB,KAAK,gBAAgB;QACjB,IAAI,CAACvN,aAAa,CAAC,CAAC;QACpB;MACJ;QACI,IAAI,CAAClK,QAAQ,CAACmT,IAAI,CAAC;IAC3B;EACJ,CAAC;EACDuE,gBAAgB,EAAE,SAAAA,CAAA,EAAW;IACzB,OAAO,IAAI,CAAC9U,KAAK,CAACE,MAAM,CAAC,eAAe,CAAC;EAC7C;AACJ,CAAC,CAAC;AACFnH,iBAAiB,CAAC,YAAY,EAAEiE,QAAQ,CAAC;AACzC,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}