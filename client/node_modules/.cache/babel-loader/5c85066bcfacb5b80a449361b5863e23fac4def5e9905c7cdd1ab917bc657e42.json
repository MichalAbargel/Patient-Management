{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Michal Abargel\\\\Desktop\\\\FULLSTACK_PROJECTS\\\\PrivateLessones\\\\PL\\\\client\\\\gui\\\\src\\\\components\\\\userDetails\\\\UserDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Details from \"./Details\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDetails = ({\n  userDetails,\n  onUserUpdate\n}) => {\n  _s();\n  const [user, setUser] = useState(userDetails);\n  const [isEditing, setIsEditing] = useState(false);\n  const editableFields = [\"Address\", \"Name\", \"Phone\", \"Birthdate\"];\n  const updateUser = (key, value) => {\n    setUser(prev => ({\n      ...prev,\n      [key]: value\n    }));\n  };\n  const areAllFieldsFilled = () => {\n    for (let field of editableFields) {\n      if (!user[field]) return false;\n    }\n    return true;\n  };\n  const formatDate = dateString => {\n    if (!dateString) return \"\";\n    try {\n      var date = new Date(dateString);\n      const year = date.getFullYear();\n      const month = (date.getMonth() + 1).toString().padStart(2, \"0\"); // Months are 0-based in JavaScript\n      const day = date.getDate().toString().padStart(2, \"0\");\n      return `${year}-${month}-${day}`;\n    } catch (error) {\n      // console.error(\"Error formatting date:\", error);\n      return \"\";\n    }\n  };\n  const saveEdit = () => {\n    if (!areAllFieldsFilled()) {\n      alert(\"Please fill all fields before saving.\");\n      return;\n    }\n    let birthdate = user.Birthdate;\n    if (birthdate.length > 8) {\n      birthdate = formatDate(birthdate);\n    }\n    fetch(`https://privatelessonsserver.azurewebsites.net/api/users/${user.user_id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: user.Name,\n        birthdate: birthdate.toString().slice(0, 10),\n        address: user.Address,\n        phone: user.Phone,\n        gender: user.Gender\n      })\n    }).then(response => response.json()).then(data => {\n      onUserUpdate(user);\n      setIsEditing(false); // Exit editing mode\n    }).catch(error => {\n      // console.error(\"Error:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: user.user_type === \"student\" ? \"Hello Student\" : \"Hello Teacher\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Details, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(UserDetails, \"M+BWyswmMFgmxmjQ1Jm3ZvGIGfo=\");\n_c = UserDetails;\nexport default UserDetails;\nvar _c;\n$RefreshReg$(_c, \"UserDetails\");","map":{"version":3,"names":["React","useState","Details","jsxDEV","_jsxDEV","UserDetails","userDetails","onUserUpdate","_s","user","setUser","isEditing","setIsEditing","editableFields","updateUser","key","value","prev","areAllFieldsFilled","field","formatDate","dateString","date","Date","year","getFullYear","month","getMonth","toString","padStart","day","getDate","error","saveEdit","alert","birthdate","Birthdate","length","fetch","user_id","method","headers","body","JSON","stringify","name","Name","slice","address","Address","phone","Phone","gender","Gender","then","response","json","data","catch","children","user_type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Michal Abargel/Desktop/FULLSTACK_PROJECTS/PrivateLessones/PL/client/gui/src/components/userDetails/UserDetails.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Details from \"./Details\";\r\n\r\nconst UserDetails = ({ userDetails, onUserUpdate }) => {\r\n  const [user, setUser] = useState(userDetails);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const editableFields = [\"Address\", \"Name\", \"Phone\", \"Birthdate\"];\r\n\r\n  const updateUser = (key, value) => {\r\n    setUser((prev) => ({ ...prev, [key]: value }));\r\n  };\r\n\r\n  const areAllFieldsFilled = () => {\r\n    for (let field of editableFields) {\r\n      if (!user[field]) return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return \"\";\r\n    try {\r\n      var date = new Date(dateString);\r\n      const year = date.getFullYear();\r\n      const month = (date.getMonth() + 1).toString().padStart(2, \"0\"); // Months are 0-based in JavaScript\r\n      const day = date.getDate().toString().padStart(2, \"0\");\r\n      return `${year}-${month}-${day}`;\r\n    } catch (error) {\r\n      // console.error(\"Error formatting date:\", error);\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  const saveEdit = () => {\r\n    if (!areAllFieldsFilled()) {\r\n      alert(\"Please fill all fields before saving.\");\r\n      return;\r\n    }\r\n\r\n    let birthdate = user.Birthdate;\r\n    if (birthdate.length > 8) {\r\n      birthdate = formatDate(birthdate);\r\n    }\r\n    fetch(\r\n      `https://privatelessonsserver.azurewebsites.net/api/users/${user.user_id}`,\r\n      {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          name: user.Name,\r\n          birthdate: birthdate.toString().slice(0, 10),\r\n          address: user.Address,\r\n          phone: user.Phone,\r\n          gender: user.Gender,\r\n        }),\r\n      }\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        onUserUpdate(user);\r\n        setIsEditing(false); // Exit editing mode\r\n      })\r\n      .catch((error) => {\r\n        // console.error(\"Error:\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>{user.user_type === \"student\" ? \"Hello Student\" : \"Hello Teacher\"}</h1>\r\n      <Details></Details>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDetails;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}