{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/group_panel/horizontal/layout.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"className\", \"elementRef\", \"groupByDate\", \"groupPanelData\", \"height\", \"resourceCellTemplate\", \"styles\"];\nimport { createFragment, createComponentVNode, normalizeProps } from \"inferno\";\nimport { Fragment } from \"inferno\";\nimport { BaseInfernoComponent } from \"@devextreme/runtime/inferno\";\nimport { Row } from \"./row\";\nimport { GroupPanelLayoutProps } from \"../group_panel_layout_props\";\nexport var viewFunction = _ref => {\n  var {\n    groupPanelItems: groupPanelItems,\n    props: {\n      resourceCellTemplate: resourceCellTemplate\n    }\n  } = _ref;\n  return createFragment(groupPanelItems.map(group => createComponentVNode(2, Row, {\n    groupItems: group,\n    cellTemplate: resourceCellTemplate\n  }, group[0].key)), 0);\n};\nexport var HorizontalGroupPanelLayoutProps = GroupPanelLayoutProps;\nvar getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props))) : TemplateProp);\nexport class GroupPanelHorizontalLayout extends BaseInfernoComponent {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.__getterCache = {};\n  }\n  get groupPanelItems() {\n    if (void 0 !== this.__getterCache.groupPanelItems) {\n      return this.__getterCache.groupPanelItems;\n    }\n    return this.__getterCache.groupPanelItems = (() => {\n      var {\n        groupPanelData: groupPanelData\n      } = this.props;\n      var {\n        baseColSpan: baseColSpan,\n        groupPanelItems: groupPanelItems\n      } = groupPanelData;\n      var colSpans = groupPanelItems.reduceRight((currentColSpans, groupsRow, index) => {\n        var nextColSpans = currentColSpans;\n        var currentLevelGroupCount = groupsRow.length;\n        var previousColSpan = index === groupPanelItems.length - 1 ? baseColSpan : currentColSpans[index + 1];\n        var previousLevelGroupCount = index === groupPanelItems.length - 1 ? currentLevelGroupCount : groupPanelItems[index + 1].length;\n        var groupCountDiff = previousLevelGroupCount / currentLevelGroupCount;\n        nextColSpans[index] = groupCountDiff * previousColSpan;\n        return nextColSpans;\n      }, [...new Array(groupPanelItems.length)]);\n      return groupPanelItems.map((groupsRenderRow, index) => {\n        var colSpan = colSpans[index];\n        return groupsRenderRow.map(groupItem => _extends({}, groupItem, {\n          colSpan: colSpan\n        }));\n      });\n    })();\n  }\n  get restAttributes() {\n    var _this$props = this.props,\n      restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n    return restProps;\n  }\n  componentWillUpdate(nextProps, nextState, context) {\n    if (this.props.groupPanelData !== nextProps.groupPanelData) {\n      this.__getterCache.groupPanelItems = void 0;\n    }\n  }\n  render() {\n    var props = this.props;\n    return viewFunction({\n      props: _extends({}, props, {\n        resourceCellTemplate: getTemplate(props.resourceCellTemplate)\n      }),\n      groupPanelItems: this.groupPanelItems,\n      restAttributes: this.restAttributes\n    });\n  }\n}\nGroupPanelHorizontalLayout.defaultProps = HorizontalGroupPanelLayoutProps;","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","_excluded","createFragment","createComponentVNode","normalizeProps","Fragment","BaseInfernoComponent","Row","GroupPanelLayoutProps","viewFunction","_ref","groupPanelItems","props","resourceCellTemplate","map","group","groupItems","cellTemplate","key","HorizontalGroupPanelLayoutProps","getTemplate","TemplateProp","defaultProps","GroupPanelHorizontalLayout","constructor","state","__getterCache","groupPanelData","baseColSpan","colSpans","reduceRight","currentColSpans","groupsRow","index","nextColSpans","currentLevelGroupCount","length","previousColSpan","previousLevelGroupCount","groupCountDiff","Array","groupsRenderRow","colSpan","groupItem","restAttributes","_this$props","restProps","componentWillUpdate","nextProps","nextState","context","render"],"sources":["C:/Users/Michal Abargel/Desktop/FULLSTACK_PROJECTS/PrivateLessones/PL/client/gui/node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/group_panel/horizontal/layout.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/group_panel/horizontal/layout.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar _excluded = [\"className\", \"elementRef\", \"groupByDate\", \"groupPanelData\", \"height\", \"resourceCellTemplate\", \"styles\"];\r\nimport {\r\n    createFragment,\r\n    createComponentVNode,\r\n    normalizeProps\r\n} from \"inferno\";\r\nimport {\r\n    Fragment\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    Row\r\n} from \"./row\";\r\nimport {\r\n    GroupPanelLayoutProps\r\n} from \"../group_panel_layout_props\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        groupPanelItems: groupPanelItems,\r\n        props: {\r\n            resourceCellTemplate: resourceCellTemplate\r\n        }\r\n    } = _ref;\r\n    return createFragment(groupPanelItems.map(group => createComponentVNode(2, Row, {\r\n        groupItems: group,\r\n        cellTemplate: resourceCellTemplate\r\n    }, group[0].key)), 0)\r\n};\r\nexport var HorizontalGroupPanelLayoutProps = GroupPanelLayoutProps;\r\nvar getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props))) : TemplateProp);\r\nexport class GroupPanelHorizontalLayout extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.__getterCache = {}\r\n    }\r\n    get groupPanelItems() {\r\n        if (void 0 !== this.__getterCache.groupPanelItems) {\r\n            return this.__getterCache.groupPanelItems\r\n        }\r\n        return this.__getterCache.groupPanelItems = (() => {\r\n            var {\r\n                groupPanelData: groupPanelData\r\n            } = this.props;\r\n            var {\r\n                baseColSpan: baseColSpan,\r\n                groupPanelItems: groupPanelItems\r\n            } = groupPanelData;\r\n            var colSpans = groupPanelItems.reduceRight((currentColSpans, groupsRow, index) => {\r\n                var nextColSpans = currentColSpans;\r\n                var currentLevelGroupCount = groupsRow.length;\r\n                var previousColSpan = index === groupPanelItems.length - 1 ? baseColSpan : currentColSpans[index + 1];\r\n                var previousLevelGroupCount = index === groupPanelItems.length - 1 ? currentLevelGroupCount : groupPanelItems[index + 1].length;\r\n                var groupCountDiff = previousLevelGroupCount / currentLevelGroupCount;\r\n                nextColSpans[index] = groupCountDiff * previousColSpan;\r\n                return nextColSpans\r\n            }, [...new Array(groupPanelItems.length)]);\r\n            return groupPanelItems.map((groupsRenderRow, index) => {\r\n                var colSpan = colSpans[index];\r\n                return groupsRenderRow.map(groupItem => _extends({}, groupItem, {\r\n                    colSpan: colSpan\r\n                }))\r\n            })\r\n        })()\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    componentWillUpdate(nextProps, nextState, context) {\r\n        if (this.props.groupPanelData !== nextProps.groupPanelData) {\r\n            this.__getterCache.groupPanelItems = void 0\r\n        }\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props, {\r\n                resourceCellTemplate: getTemplate(props.resourceCellTemplate)\r\n            }),\r\n            groupPanelItems: this.groupPanelItems,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nGroupPanelHorizontalLayout.defaultProps = HorizontalGroupPanelLayoutProps;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,6BAA6B,MAAM,yDAAyD;AACnG,OAAOC,QAAQ,MAAM,oCAAoC;AACzD,IAAIC,SAAS,GAAG,CAAC,WAAW,EAAE,YAAY,EAAE,aAAa,EAAE,gBAAgB,EAAE,QAAQ,EAAE,sBAAsB,EAAE,QAAQ,CAAC;AACxH,SACIC,cAAc,EACdC,oBAAoB,EACpBC,cAAc,QACX,SAAS;AAChB,SACIC,QAAQ,QACL,SAAS;AAChB,SACIC,oBAAoB,QACjB,6BAA6B;AACpC,SACIC,GAAG,QACA,OAAO;AACd,SACIC,qBAAqB,QAClB,6BAA6B;AACpC,OAAO,IAAIC,YAAY,GAAGC,IAAI,IAAI;EAC9B,IAAI;IACAC,eAAe,EAAEA,eAAe;IAChCC,KAAK,EAAE;MACHC,oBAAoB,EAAEA;IAC1B;EACJ,CAAC,GAAGH,IAAI;EACR,OAAOR,cAAc,CAACS,eAAe,CAACG,GAAG,CAACC,KAAK,IAAIZ,oBAAoB,CAAC,CAAC,EAAEI,GAAG,EAAE;IAC5ES,UAAU,EAAED,KAAK;IACjBE,YAAY,EAAEJ;EAClB,CAAC,EAAEE,KAAK,CAAC,CAAC,CAAC,CAACG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AACzB,CAAC;AACD,OAAO,IAAIC,+BAA+B,GAAGX,qBAAqB;AAClE,IAAIY,WAAW,GAAGC,YAAY,IAAIA,YAAY,KAAKA,YAAY,CAACC,YAAY,GAAGV,KAAK,IAAIR,cAAc,CAACD,oBAAoB,CAAC,CAAC,EAAEkB,YAAY,EAAErB,QAAQ,CAAC,CAAC,CAAC,EAAEY,KAAK,CAAC,CAAC,CAAC,GAAGS,YAAY,CAAC;AAClL,OAAO,MAAME,0BAA0B,SAASjB,oBAAoB,CAAC;EACjEkB,WAAWA,CAACZ,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACa,KAAK,GAAG,CAAC,CAAC;IACf,IAAI,CAACC,aAAa,GAAG,CAAC,CAAC;EAC3B;EACA,IAAIf,eAAeA,CAAA,EAAG;IAClB,IAAI,KAAK,CAAC,KAAK,IAAI,CAACe,aAAa,CAACf,eAAe,EAAE;MAC/C,OAAO,IAAI,CAACe,aAAa,CAACf,eAAe;IAC7C;IACA,OAAO,IAAI,CAACe,aAAa,CAACf,eAAe,GAAG,CAAC,MAAM;MAC/C,IAAI;QACAgB,cAAc,EAAEA;MACpB,CAAC,GAAG,IAAI,CAACf,KAAK;MACd,IAAI;QACAgB,WAAW,EAAEA,WAAW;QACxBjB,eAAe,EAAEA;MACrB,CAAC,GAAGgB,cAAc;MAClB,IAAIE,QAAQ,GAAGlB,eAAe,CAACmB,WAAW,CAAC,CAACC,eAAe,EAAEC,SAAS,EAAEC,KAAK,KAAK;QAC9E,IAAIC,YAAY,GAAGH,eAAe;QAClC,IAAII,sBAAsB,GAAGH,SAAS,CAACI,MAAM;QAC7C,IAAIC,eAAe,GAAGJ,KAAK,KAAKtB,eAAe,CAACyB,MAAM,GAAG,CAAC,GAAGR,WAAW,GAAGG,eAAe,CAACE,KAAK,GAAG,CAAC,CAAC;QACrG,IAAIK,uBAAuB,GAAGL,KAAK,KAAKtB,eAAe,CAACyB,MAAM,GAAG,CAAC,GAAGD,sBAAsB,GAAGxB,eAAe,CAACsB,KAAK,GAAG,CAAC,CAAC,CAACG,MAAM;QAC/H,IAAIG,cAAc,GAAGD,uBAAuB,GAAGH,sBAAsB;QACrED,YAAY,CAACD,KAAK,CAAC,GAAGM,cAAc,GAAGF,eAAe;QACtD,OAAOH,YAAY;MACvB,CAAC,EAAE,CAAC,GAAG,IAAIM,KAAK,CAAC7B,eAAe,CAACyB,MAAM,CAAC,CAAC,CAAC;MAC1C,OAAOzB,eAAe,CAACG,GAAG,CAAC,CAAC2B,eAAe,EAAER,KAAK,KAAK;QACnD,IAAIS,OAAO,GAAGb,QAAQ,CAACI,KAAK,CAAC;QAC7B,OAAOQ,eAAe,CAAC3B,GAAG,CAAC6B,SAAS,IAAI3C,QAAQ,CAAC,CAAC,CAAC,EAAE2C,SAAS,EAAE;UAC5DD,OAAO,EAAEA;QACb,CAAC,CAAC,CAAC;MACP,CAAC,CAAC;IACN,CAAC,EAAE,CAAC;EACR;EACA,IAAIE,cAAcA,CAAA,EAAG;IACjB,IAAIC,WAAW,GAAG,IAAI,CAACjC,KAAK;MACxBkC,SAAS,GAAG/C,6BAA6B,CAAC8C,WAAW,EAAE5C,SAAS,CAAC;IACrE,OAAO6C,SAAS;EACpB;EACAC,mBAAmBA,CAACC,SAAS,EAAEC,SAAS,EAAEC,OAAO,EAAE;IAC/C,IAAI,IAAI,CAACtC,KAAK,CAACe,cAAc,KAAKqB,SAAS,CAACrB,cAAc,EAAE;MACxD,IAAI,CAACD,aAAa,CAACf,eAAe,GAAG,KAAK,CAAC;IAC/C;EACJ;EACAwC,MAAMA,CAAA,EAAG;IACL,IAAIvC,KAAK,GAAG,IAAI,CAACA,KAAK;IACtB,OAAOH,YAAY,CAAC;MAChBG,KAAK,EAAEZ,QAAQ,CAAC,CAAC,CAAC,EAAEY,KAAK,EAAE;QACvBC,oBAAoB,EAAEO,WAAW,CAACR,KAAK,CAACC,oBAAoB;MAChE,CAAC,CAAC;MACFF,eAAe,EAAE,IAAI,CAACA,eAAe;MACrCiC,cAAc,EAAE,IAAI,CAACA;IACzB,CAAC,CAAC;EACN;AACJ;AACArB,0BAA0B,CAACD,YAAY,GAAGH,+BAA+B"},"metadata":{},"sourceType":"module","externalDependencies":[]}