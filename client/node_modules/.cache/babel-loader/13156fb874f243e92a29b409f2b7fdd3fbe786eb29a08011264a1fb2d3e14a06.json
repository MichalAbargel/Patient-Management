{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/text_area.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../core/renderer\";\nimport eventsEngine from \"../events/core/events_engine\";\nimport { noop, ensureDefined } from \"../core/utils/common\";\nimport { getWindow, hasWindow } from \"../core/utils/window\";\nimport registerComponent from \"../core/component_registrator\";\nimport { extend } from \"../core/utils/extend\";\nimport { isDefined } from \"../core/utils/type\";\nimport { addNamespace, eventData } from \"../events/utils/index\";\nimport pointerEvents from \"../events/pointer\";\nimport scrollEvents from \"../events/gesture/emitter.gesture.scroll\";\nimport { getVerticalOffsets, getElementBoxParams, parseHeight, getOuterHeight } from \"../core/utils/size\";\nimport { allowScroll, prepareScrollData } from \"./text_box/utils.scroll\";\nimport TextBox from \"./text_box\";\nvar TEXTAREA_CLASS = \"dx-textarea\";\nvar TEXTEDITOR_INPUT_CLASS = \"dx-texteditor-input\";\nvar TEXTEDITOR_INPUT_CLASS_AUTO_RESIZE = \"dx-texteditor-input-auto-resize\";\nvar TextArea = TextBox.inherit({\n  _getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      spellcheck: true,\n      minHeight: void 0,\n      maxHeight: void 0,\n      autoResizeEnabled: false\n    });\n  },\n  _initMarkup: function () {\n    this.$element().addClass(TEXTAREA_CLASS);\n    this.callBase();\n    this.setAria(\"multiline\", \"true\");\n  },\n  _renderContentImpl: function () {\n    this._updateInputHeight();\n    this.callBase();\n  },\n  _renderInput: function () {\n    this.callBase();\n    this._renderScrollHandler();\n  },\n  _createInput: function () {\n    var $input = $(\"<textarea>\");\n    this._applyInputAttributes($input, this.option(\"inputAttr\"));\n    this._updateInputAutoResizeAppearance($input);\n    return $input;\n  },\n  _applyInputAttributes: function ($input, customAttributes) {\n    $input.attr(customAttributes).addClass(TEXTEDITOR_INPUT_CLASS);\n  },\n  _renderScrollHandler: function () {\n    this._eventY = 0;\n    var $input = this._input();\n    var initScrollData = prepareScrollData($input, true);\n    eventsEngine.on($input, addNamespace(scrollEvents.init, this.NAME), initScrollData, noop);\n    eventsEngine.on($input, addNamespace(pointerEvents.down, this.NAME), this._pointerDownHandler.bind(this));\n    eventsEngine.on($input, addNamespace(pointerEvents.move, this.NAME), this._pointerMoveHandler.bind(this));\n  },\n  _pointerDownHandler: function (e) {\n    this._eventY = eventData(e).y;\n  },\n  _pointerMoveHandler: function (e) {\n    var currentEventY = eventData(e).y;\n    var delta = this._eventY - currentEventY;\n    if (allowScroll(this._input(), delta)) {\n      e.isScrollingEvent = true;\n      e.stopPropagation();\n    }\n    this._eventY = currentEventY;\n  },\n  _renderDimensions: function () {\n    var $element = this.$element();\n    var element = $element.get(0);\n    var width = this._getOptionValue(\"width\", element);\n    var height = this._getOptionValue(\"height\", element);\n    var minHeight = this.option(\"minHeight\");\n    var maxHeight = this.option(\"maxHeight\");\n    $element.css({\n      minHeight: void 0 !== minHeight ? minHeight : \"\",\n      maxHeight: void 0 !== maxHeight ? maxHeight : \"\",\n      width: width,\n      height: height\n    });\n  },\n  _resetDimensions: function () {\n    this.$element().css({\n      height: \"\",\n      minHeight: \"\",\n      maxHeight: \"\"\n    });\n  },\n  _renderEvents: function () {\n    if (this.option(\"autoResizeEnabled\")) {\n      eventsEngine.on(this._input(), addNamespace(\"input paste\", this.NAME), this._updateInputHeight.bind(this));\n    }\n    this.callBase();\n  },\n  _refreshEvents: function () {\n    eventsEngine.off(this._input(), addNamespace(\"input paste\", this.NAME));\n    this.callBase();\n  },\n  _getHeightDifference($input) {\n    return getVerticalOffsets(this._$element.get(0), false) + getVerticalOffsets(this._$textEditorContainer.get(0), false) + getVerticalOffsets(this._$textEditorInputContainer.get(0), false) + getElementBoxParams(\"height\", getWindow().getComputedStyle($input.get(0))).margin;\n  },\n  _updateInputHeight: function () {\n    if (!hasWindow()) {\n      return;\n    }\n    var $input = this._input();\n    var height = this.option(\"height\");\n    var autoHeightResizing = void 0 === height && this.option(\"autoResizeEnabled\");\n    var shouldCalculateInputHeight = autoHeightResizing || void 0 === height && this.option(\"minHeight\");\n    if (!shouldCalculateInputHeight) {\n      $input.css(\"height\", \"\");\n      return;\n    }\n    this._resetDimensions();\n    this._$element.css(\"height\", getOuterHeight(this._$element));\n    $input.css(\"height\", 0);\n    var heightDifference = this._getHeightDifference($input);\n    this._renderDimensions();\n    var minHeight = this._getBoundaryHeight(\"minHeight\");\n    var maxHeight = this._getBoundaryHeight(\"maxHeight\");\n    var inputHeight = $input[0].scrollHeight;\n    if (void 0 !== minHeight) {\n      inputHeight = Math.max(inputHeight, minHeight - heightDifference);\n    }\n    if (void 0 !== maxHeight) {\n      var adjustedMaxHeight = maxHeight - heightDifference;\n      var needScroll = inputHeight > adjustedMaxHeight;\n      inputHeight = Math.min(inputHeight, adjustedMaxHeight);\n      this._updateInputAutoResizeAppearance($input, !needScroll);\n    }\n    $input.css(\"height\", inputHeight);\n    if (autoHeightResizing) {\n      this._$element.css(\"height\", \"auto\");\n    }\n  },\n  _getBoundaryHeight: function (optionName) {\n    var boundaryValue = this.option(optionName);\n    if (isDefined(boundaryValue)) {\n      return \"number\" === typeof boundaryValue ? boundaryValue : parseHeight(boundaryValue, this.$element().get(0).parentElement, this._$element.get(0));\n    }\n  },\n  _renderInputType: noop,\n  _visibilityChanged: function (visible) {\n    if (visible) {\n      this._updateInputHeight();\n    }\n  },\n  _updateInputAutoResizeAppearance: function ($input, isAutoResizeEnabled) {\n    if ($input) {\n      var autoResizeEnabled = ensureDefined(isAutoResizeEnabled, this.option(\"autoResizeEnabled\"));\n      $input.toggleClass(TEXTEDITOR_INPUT_CLASS_AUTO_RESIZE, autoResizeEnabled);\n    }\n  },\n  _dimensionChanged: function () {\n    if (this.option(\"visible\")) {\n      this._updateInputHeight();\n    }\n  },\n  _optionChanged: function (args) {\n    switch (args.name) {\n      case \"autoResizeEnabled\":\n        this._updateInputAutoResizeAppearance(this._input(), args.value);\n        this._refreshEvents();\n        this._updateInputHeight();\n        break;\n      case \"value\":\n      case \"height\":\n        this.callBase(args);\n        this._updateInputHeight();\n        break;\n      case \"minHeight\":\n      case \"maxHeight\":\n        this._renderDimensions();\n        this._updateInputHeight();\n        break;\n      case \"visible\":\n        this.callBase(args);\n        args.value && this._updateInputHeight();\n        break;\n      default:\n        this.callBase(args);\n    }\n  }\n});\nregisterComponent(\"dxTextArea\", TextArea);\nexport default TextArea;","map":{"version":3,"names":["$","eventsEngine","noop","ensureDefined","getWindow","hasWindow","registerComponent","extend","isDefined","addNamespace","eventData","pointerEvents","scrollEvents","getVerticalOffsets","getElementBoxParams","parseHeight","getOuterHeight","allowScroll","prepareScrollData","TextBox","TEXTAREA_CLASS","TEXTEDITOR_INPUT_CLASS","TEXTEDITOR_INPUT_CLASS_AUTO_RESIZE","TextArea","inherit","_getDefaultOptions","callBase","spellcheck","minHeight","maxHeight","autoResizeEnabled","_initMarkup","$element","addClass","setAria","_renderContentImpl","_updateInputHeight","_renderInput","_renderScrollHandler","_createInput","$input","_applyInputAttributes","option","_updateInputAutoResizeAppearance","customAttributes","attr","_eventY","_input","initScrollData","on","init","NAME","down","_pointerDownHandler","bind","move","_pointerMoveHandler","e","y","currentEventY","delta","isScrollingEvent","stopPropagation","_renderDimensions","element","get","width","_getOptionValue","height","css","_resetDimensions","_renderEvents","_refreshEvents","off","_getHeightDifference","_$element","_$textEditorContainer","_$textEditorInputContainer","getComputedStyle","margin","autoHeightResizing","shouldCalculateInputHeight","heightDifference","_getBoundaryHeight","inputHeight","scrollHeight","Math","max","adjustedMaxHeight","needScroll","min","optionName","boundaryValue","parentElement","_renderInputType","_visibilityChanged","visible","isAutoResizeEnabled","toggleClass","_dimensionChanged","_optionChanged","args","name","value"],"sources":["C:/Users/Michal Abargel/Desktop/FULLSTACK_PROJECTS/PrivateLessones/F(x)/client/gui/node_modules/devextreme/esm/ui/text_area.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/text_area.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../core/renderer\";\r\nimport eventsEngine from \"../events/core/events_engine\";\r\nimport {\r\n    noop,\r\n    ensureDefined\r\n} from \"../core/utils/common\";\r\nimport {\r\n    getWindow,\r\n    hasWindow\r\n} from \"../core/utils/window\";\r\nimport registerComponent from \"../core/component_registrator\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport {\r\n    isDefined\r\n} from \"../core/utils/type\";\r\nimport {\r\n    addNamespace,\r\n    eventData\r\n} from \"../events/utils/index\";\r\nimport pointerEvents from \"../events/pointer\";\r\nimport scrollEvents from \"../events/gesture/emitter.gesture.scroll\";\r\nimport {\r\n    getVerticalOffsets,\r\n    getElementBoxParams,\r\n    parseHeight,\r\n    getOuterHeight\r\n} from \"../core/utils/size\";\r\nimport {\r\n    allowScroll,\r\n    prepareScrollData\r\n} from \"./text_box/utils.scroll\";\r\nimport TextBox from \"./text_box\";\r\nvar TEXTAREA_CLASS = \"dx-textarea\";\r\nvar TEXTEDITOR_INPUT_CLASS = \"dx-texteditor-input\";\r\nvar TEXTEDITOR_INPUT_CLASS_AUTO_RESIZE = \"dx-texteditor-input-auto-resize\";\r\nvar TextArea = TextBox.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            spellcheck: true,\r\n            minHeight: void 0,\r\n            maxHeight: void 0,\r\n            autoResizeEnabled: false\r\n        })\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(TEXTAREA_CLASS);\r\n        this.callBase();\r\n        this.setAria(\"multiline\", \"true\")\r\n    },\r\n    _renderContentImpl: function() {\r\n        this._updateInputHeight();\r\n        this.callBase()\r\n    },\r\n    _renderInput: function() {\r\n        this.callBase();\r\n        this._renderScrollHandler()\r\n    },\r\n    _createInput: function() {\r\n        var $input = $(\"<textarea>\");\r\n        this._applyInputAttributes($input, this.option(\"inputAttr\"));\r\n        this._updateInputAutoResizeAppearance($input);\r\n        return $input\r\n    },\r\n    _applyInputAttributes: function($input, customAttributes) {\r\n        $input.attr(customAttributes).addClass(TEXTEDITOR_INPUT_CLASS)\r\n    },\r\n    _renderScrollHandler: function() {\r\n        this._eventY = 0;\r\n        var $input = this._input();\r\n        var initScrollData = prepareScrollData($input, true);\r\n        eventsEngine.on($input, addNamespace(scrollEvents.init, this.NAME), initScrollData, noop);\r\n        eventsEngine.on($input, addNamespace(pointerEvents.down, this.NAME), this._pointerDownHandler.bind(this));\r\n        eventsEngine.on($input, addNamespace(pointerEvents.move, this.NAME), this._pointerMoveHandler.bind(this))\r\n    },\r\n    _pointerDownHandler: function(e) {\r\n        this._eventY = eventData(e).y\r\n    },\r\n    _pointerMoveHandler: function(e) {\r\n        var currentEventY = eventData(e).y;\r\n        var delta = this._eventY - currentEventY;\r\n        if (allowScroll(this._input(), delta)) {\r\n            e.isScrollingEvent = true;\r\n            e.stopPropagation()\r\n        }\r\n        this._eventY = currentEventY\r\n    },\r\n    _renderDimensions: function() {\r\n        var $element = this.$element();\r\n        var element = $element.get(0);\r\n        var width = this._getOptionValue(\"width\", element);\r\n        var height = this._getOptionValue(\"height\", element);\r\n        var minHeight = this.option(\"minHeight\");\r\n        var maxHeight = this.option(\"maxHeight\");\r\n        $element.css({\r\n            minHeight: void 0 !== minHeight ? minHeight : \"\",\r\n            maxHeight: void 0 !== maxHeight ? maxHeight : \"\",\r\n            width: width,\r\n            height: height\r\n        })\r\n    },\r\n    _resetDimensions: function() {\r\n        this.$element().css({\r\n            height: \"\",\r\n            minHeight: \"\",\r\n            maxHeight: \"\"\r\n        })\r\n    },\r\n    _renderEvents: function() {\r\n        if (this.option(\"autoResizeEnabled\")) {\r\n            eventsEngine.on(this._input(), addNamespace(\"input paste\", this.NAME), this._updateInputHeight.bind(this))\r\n        }\r\n        this.callBase()\r\n    },\r\n    _refreshEvents: function() {\r\n        eventsEngine.off(this._input(), addNamespace(\"input paste\", this.NAME));\r\n        this.callBase()\r\n    },\r\n    _getHeightDifference($input) {\r\n        return getVerticalOffsets(this._$element.get(0), false) + getVerticalOffsets(this._$textEditorContainer.get(0), false) + getVerticalOffsets(this._$textEditorInputContainer.get(0), false) + getElementBoxParams(\"height\", getWindow().getComputedStyle($input.get(0))).margin\r\n    },\r\n    _updateInputHeight: function() {\r\n        if (!hasWindow()) {\r\n            return\r\n        }\r\n        var $input = this._input();\r\n        var height = this.option(\"height\");\r\n        var autoHeightResizing = void 0 === height && this.option(\"autoResizeEnabled\");\r\n        var shouldCalculateInputHeight = autoHeightResizing || void 0 === height && this.option(\"minHeight\");\r\n        if (!shouldCalculateInputHeight) {\r\n            $input.css(\"height\", \"\");\r\n            return\r\n        }\r\n        this._resetDimensions();\r\n        this._$element.css(\"height\", getOuterHeight(this._$element));\r\n        $input.css(\"height\", 0);\r\n        var heightDifference = this._getHeightDifference($input);\r\n        this._renderDimensions();\r\n        var minHeight = this._getBoundaryHeight(\"minHeight\");\r\n        var maxHeight = this._getBoundaryHeight(\"maxHeight\");\r\n        var inputHeight = $input[0].scrollHeight;\r\n        if (void 0 !== minHeight) {\r\n            inputHeight = Math.max(inputHeight, minHeight - heightDifference)\r\n        }\r\n        if (void 0 !== maxHeight) {\r\n            var adjustedMaxHeight = maxHeight - heightDifference;\r\n            var needScroll = inputHeight > adjustedMaxHeight;\r\n            inputHeight = Math.min(inputHeight, adjustedMaxHeight);\r\n            this._updateInputAutoResizeAppearance($input, !needScroll)\r\n        }\r\n        $input.css(\"height\", inputHeight);\r\n        if (autoHeightResizing) {\r\n            this._$element.css(\"height\", \"auto\")\r\n        }\r\n    },\r\n    _getBoundaryHeight: function(optionName) {\r\n        var boundaryValue = this.option(optionName);\r\n        if (isDefined(boundaryValue)) {\r\n            return \"number\" === typeof boundaryValue ? boundaryValue : parseHeight(boundaryValue, this.$element().get(0).parentElement, this._$element.get(0))\r\n        }\r\n    },\r\n    _renderInputType: noop,\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this._updateInputHeight()\r\n        }\r\n    },\r\n    _updateInputAutoResizeAppearance: function($input, isAutoResizeEnabled) {\r\n        if ($input) {\r\n            var autoResizeEnabled = ensureDefined(isAutoResizeEnabled, this.option(\"autoResizeEnabled\"));\r\n            $input.toggleClass(TEXTEDITOR_INPUT_CLASS_AUTO_RESIZE, autoResizeEnabled)\r\n        }\r\n    },\r\n    _dimensionChanged: function() {\r\n        if (this.option(\"visible\")) {\r\n            this._updateInputHeight()\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"autoResizeEnabled\":\r\n                this._updateInputAutoResizeAppearance(this._input(), args.value);\r\n                this._refreshEvents();\r\n                this._updateInputHeight();\r\n                break;\r\n            case \"value\":\r\n            case \"height\":\r\n                this.callBase(args);\r\n                this._updateInputHeight();\r\n                break;\r\n            case \"minHeight\":\r\n            case \"maxHeight\":\r\n                this._renderDimensions();\r\n                this._updateInputHeight();\r\n                break;\r\n            case \"visible\":\r\n                this.callBase(args);\r\n                args.value && this._updateInputHeight();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nregisterComponent(\"dxTextArea\", TextArea);\r\nexport default TextArea;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}