{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/scheduler/appointments/m_appointment_collection.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { locate, move } from \"../../../animation/translator\";\nimport registerComponent from \"../../../core/component_registrator\";\nimport domAdapter from \"../../../core/dom_adapter\";\nimport { getPublicElement } from \"../../../core/element\";\nimport { data as elementData } from \"../../../core/element_data\";\nimport $ from \"../../../core/renderer\";\nimport { wrapToArray } from \"../../../core/utils/array\";\nimport { grep, normalizeKey } from \"../../../core/utils/common\";\nimport dateUtils from \"../../../core/utils/date\";\nimport { extend } from \"../../../core/utils/extend\";\nimport { each } from \"../../../core/utils/iterator\";\nimport { deepExtendArraySafe } from \"../../../core/utils/object\";\nimport { getBoundingRect } from \"../../../core/utils/position\";\nimport { setOuterHeight, setOuterWidth } from \"../../../core/utils/size\";\nimport { isDeferred, isDefined, isPlainObject, isString } from \"../../../core/utils/type\";\nimport eventsEngine from \"../../../events/core/events_engine\";\nimport { name as dblclickEvent } from \"../../../events/double_click\";\nimport { addNamespace, isFakeClickEvent } from \"../../../events/utils/index\";\nimport CollectionWidget from \"../../../ui/collection/ui.collection_widget.edit\";\nimport { createAppointmentAdapter } from \"../../../ui/scheduler/appointmentAdapter\";\nimport { APPOINTMENT_DRAG_SOURCE_CLASS, APPOINTMENT_ITEM_CLASS } from \"../../../ui/scheduler/classes\";\nimport { APPOINTMENT_SETTINGS_KEY } from \"../../../ui/scheduler/constants\";\nimport { ExpressionUtils } from \"../../../ui/scheduler/expressionUtils\";\nimport { getRecurrenceProcessor } from \"../../../ui/scheduler/recurrence\";\nimport timeZoneUtils from \"../../../ui/scheduler/utils.timeZone\";\nimport { getAppointmentTakesSeveralDays, sortAppointmentsByStartDate } from \"./data_provider/m_utils\";\nimport { AgendaAppointment, Appointment } from \"./m_appointment\";\nimport { createAgendaAppointmentLayout, createAppointmentLayout } from \"./m_appointment_layout\";\nimport { getAppointmentDateRange } from \"./resizing/m_core\";\nvar COMPONENT_CLASS = \"dx-scheduler-scrollable-appointments\";\nvar DBLCLICK_EVENT_NAME = addNamespace(dblclickEvent, \"dxSchedulerAppointment\");\nvar toMs = dateUtils.dateToMilliseconds;\nclass SchedulerAppointments extends CollectionWidget {\n  constructor(element, options) {\n    super(element, options);\n    this._virtualAppointments = {};\n  }\n  get isAgendaView() {\n    return this.invoke(\"isCurrentViewAgenda\");\n  }\n  get isVirtualScrolling() {\n    return this.invoke(\"isVirtualScrolling\");\n  }\n  get appointmentDataProvider() {\n    return this.option(\"getAppointmentDataProvider\")();\n  }\n  option(optionName, value) {\n    return super.option(...arguments);\n  }\n  notifyObserver(subject, args) {\n    var observer = this.option(\"observer\");\n    if (observer) {\n      observer.fire(subject, args);\n    }\n  }\n  invoke(funcName) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    var observer = this.option(\"observer\");\n    if (observer) {\n      return observer.fire.apply(observer, arguments);\n    }\n  }\n  _dispose() {\n    clearTimeout(this._appointmentClickTimeout);\n    super._dispose();\n  }\n  _supportedKeys() {\n    var parent = super._supportedKeys();\n    var currentAppointment = this._$currentAppointment;\n    return extend(parent, {\n      escape: function () {\n        var _a, _b, _c;\n        if (this.resizeOccur) {\n          this.moveAppointmentBack();\n          this.resizeOccur = false;\n          null === (_a = currentAppointment.dxResizable(\"instance\")) || void 0 === _a ? void 0 : _a._detachEventHandlers();\n          null === (_b = currentAppointment.dxResizable(\"instance\")) || void 0 === _b ? void 0 : _b._attachEventHandlers();\n          null === (_c = currentAppointment.dxResizable(\"instance\")) || void 0 === _c ? void 0 : _c._toggleResizingClass(false);\n        }\n      }.bind(this),\n      del: function (e) {\n        if (this.option(\"allowDelete\")) {\n          e.preventDefault();\n          var data = this._getItemData(e.target);\n          this.notifyObserver(\"onDeleteButtonPress\", {\n            data: data,\n            target: e.target\n          });\n        }\n      }.bind(this),\n      tab: function (e) {\n        var appointments = this._getAccessAppointments();\n        var focusedAppointment = appointments.filter(\".dx-state-focused\");\n        var index = focusedAppointment.data(APPOINTMENT_SETTINGS_KEY).sortedIndex;\n        var lastIndex = appointments.length - 1;\n        if (index > 0 && e.shiftKey || index < lastIndex && !e.shiftKey) {\n          e.preventDefault();\n          e.shiftKey ? index-- : index++;\n          var $nextAppointment = this._getAppointmentByIndex(index);\n          this._resetTabIndex($nextAppointment);\n          eventsEngine.trigger($nextAppointment, \"focus\");\n        }\n      }\n    });\n  }\n  _getAppointmentByIndex(sortedIndex) {\n    var appointments = this._getAccessAppointments();\n    return appointments.filter((_, $item) => elementData($item, APPOINTMENT_SETTINGS_KEY).sortedIndex === sortedIndex).eq(0);\n  }\n  _getAccessAppointments() {\n    return this._itemElements().filter(\":visible\").not(\".dx-state-disabled\");\n  }\n  _resetTabIndex($appointment) {\n    this._focusTarget().attr(\"tabIndex\", -1);\n    $appointment.attr(\"tabIndex\", this.option(\"tabIndex\"));\n  }\n  _moveFocus() {}\n  _focusTarget() {\n    return this._itemElements();\n  }\n  _renderFocusTarget() {\n    var $appointment = this._getAppointmentByIndex(0);\n    this._resetTabIndex($appointment);\n  }\n  _focusInHandler(e) {\n    super._focusInHandler(e);\n    this._$currentAppointment = $(e.target);\n    this.option(\"focusedElement\", getPublicElement($(e.target)));\n  }\n  _focusOutHandler(e) {\n    var $appointment = this._getAppointmentByIndex(0);\n    this.option(\"focusedElement\", getPublicElement($appointment));\n    super._focusOutHandler(e);\n  }\n  _eventBindingTarget() {\n    return this._itemContainer();\n  }\n  _getDefaultOptions() {\n    return extend(super._getDefaultOptions(), {\n      noDataText: null,\n      activeStateEnabled: true,\n      hoverStateEnabled: true,\n      tabIndex: 0,\n      fixedContainer: null,\n      allDayContainer: null,\n      allowDrag: true,\n      allowResize: true,\n      allowAllDayResize: true,\n      onAppointmentDblClick: null,\n      _collectorOffset: 0,\n      groups: [],\n      resources: []\n    });\n  }\n  _optionChanged(args) {\n    if (this.option(\"isRenovatedAppointments\")) {\n      return;\n    }\n    switch (args.name) {\n      case \"items\":\n        this._cleanFocusState();\n        this._clearDropDownItems();\n        this._clearDropDownItemsElements();\n        this._repaintAppointments(args.value);\n        this._renderDropDownAppointments();\n        this._attachAppointmentsEvents();\n        break;\n      case \"fixedContainer\":\n      case \"allDayContainer\":\n      case \"onAppointmentDblClick\":\n        break;\n      case \"allowDrag\":\n      case \"allowResize\":\n      case \"allowAllDayResize\":\n        this._invalidate();\n        break;\n      case \"focusedElement\":\n        this._resetTabIndex($(args.value));\n        super._optionChanged(args);\n        break;\n      case \"allowDelete\":\n        break;\n      case \"focusStateEnabled\":\n        this._clearDropDownItemsElements();\n        this._renderDropDownAppointments();\n        super._optionChanged(args);\n        break;\n      default:\n        super._optionChanged(args);\n    }\n  }\n  _isAllDayAppointment(appointment) {\n    return appointment.settings.length && appointment.settings[0].allDay || false;\n  }\n  _isRepaintAppointment(appointment) {\n    return !isDefined(appointment.needRepaint) || true === appointment.needRepaint;\n  }\n  _isRepaintAll(appointments) {\n    if (this.isAgendaView) {\n      return true;\n    }\n    for (var i = 0; i < appointments.length; i++) {\n      if (!this._isRepaintAppointment(appointments[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  _applyFragment(fragment, allDay) {\n    if (fragment.children().length > 0) {\n      this._getAppointmentContainer(allDay).append(fragment);\n    }\n  }\n  _onEachAppointment(appointment, index, container, isRepaintAll) {\n    if (true === (null === appointment || void 0 === appointment ? void 0 : appointment.needRemove)) {\n      this._clearItem(appointment);\n    } else if (isRepaintAll || this._isRepaintAppointment(appointment)) {\n      (() => {\n        appointment.needRepaint = false;\n        this._clearItem(appointment);\n        this._renderItem(index, appointment, container);\n      })();\n    }\n  }\n  _repaintAppointments(appointments) {\n    this._renderByFragments(($commonFragment, $allDayFragment) => {\n      var isRepaintAll = this._isRepaintAll(appointments);\n      if (isRepaintAll) {\n        this._getAppointmentContainer(true).html(\"\");\n        this._getAppointmentContainer(false).html(\"\");\n      }\n      !appointments.length && this._cleanItemContainer();\n      appointments.forEach((appointment, index) => {\n        var container = this._isAllDayAppointment(appointment) ? $allDayFragment : $commonFragment;\n        this._onEachAppointment(appointment, index, container, isRepaintAll);\n      });\n    });\n  }\n  _renderByFragments(renderFunction) {\n    if (this.isVirtualScrolling) {\n      var $commonFragment = $(domAdapter.createDocumentFragment());\n      var $allDayFragment = $(domAdapter.createDocumentFragment());\n      renderFunction($commonFragment, $allDayFragment);\n      this._applyFragment($commonFragment, false);\n      this._applyFragment($allDayFragment, true);\n    } else {\n      renderFunction(this._getAppointmentContainer(false), this._getAppointmentContainer(true));\n    }\n  }\n  _attachAppointmentsEvents() {\n    this._attachClickEvent();\n    this._attachHoldEvent();\n    this._attachContextMenuEvent();\n    this._attachAppointmentDblClick();\n    this._renderFocusState();\n    this._attachFeedbackEvents();\n    this._attachHoverEvents();\n  }\n  _clearItem(item) {\n    var $items = this._findItemElementByItem(item.itemData);\n    if (!$items.length) {\n      return;\n    }\n    each($items, (_, $item) => {\n      $item.detach();\n      $item.remove();\n    });\n  }\n  _clearDropDownItems() {\n    this._virtualAppointments = {};\n  }\n  _clearDropDownItemsElements() {\n    this.invoke(\"clearCompactAppointments\");\n  }\n  _findItemElementByItem(item) {\n    var result = [];\n    var that = this;\n    this.itemElements().each(function () {\n      var $item = $(this);\n      if ($item.data(that._itemDataKey()) === item) {\n        result.push($item);\n      }\n    });\n    return result;\n  }\n  _itemClass() {\n    return APPOINTMENT_ITEM_CLASS;\n  }\n  _itemContainer() {\n    var $container = super._itemContainer();\n    var $result = $container;\n    var $allDayContainer = this.option(\"allDayContainer\");\n    if ($allDayContainer) {\n      $result = $container.add($allDayContainer);\n    }\n    return $result;\n  }\n  _cleanItemContainer() {\n    super._cleanItemContainer();\n    var $allDayContainer = this.option(\"allDayContainer\");\n    if ($allDayContainer) {\n      $allDayContainer.empty();\n    }\n    this._virtualAppointments = {};\n  }\n  _clean() {\n    super._clean();\n    delete this._$currentAppointment;\n    delete this._initialSize;\n    delete this._initialCoordinates;\n  }\n  _init() {\n    super._init();\n    this.$element().addClass(COMPONENT_CLASS);\n    this._preventSingleAppointmentClick = false;\n  }\n  _renderAppointmentTemplate($container, appointment, model) {\n    var config = {\n      isAllDay: appointment.allDay,\n      isRecurrence: appointment.recurrenceRule,\n      html: isPlainObject(appointment) && appointment.html ? appointment.html : void 0\n    };\n    var formatText = this.invoke(\"getTextAndFormatDate\", model.appointmentData, this._currentAppointmentSettings.agendaSettings || model.targetedAppointmentData, \"TIME\");\n    $container.append(this.isAgendaView ? createAgendaAppointmentLayout(formatText, config) : createAppointmentLayout(formatText, config));\n  }\n  _executeItemRenderAction(index, itemData, itemElement) {\n    var action = this._getItemRenderAction();\n    if (action) {\n      action(this.invoke(\"mapAppointmentFields\", {\n        itemData: itemData,\n        itemElement: itemElement\n      }));\n    }\n    delete this._currentAppointmentSettings;\n  }\n  _itemClickHandler(e) {\n    super._itemClickHandler(e, {}, {\n      afterExecute: function (e) {\n        this._processItemClick(e.args[0].event);\n      }.bind(this)\n    });\n  }\n  _processItemClick(e) {\n    var $target = $(e.currentTarget);\n    var data = this._getItemData($target);\n    if (\"keydown\" === e.type || isFakeClickEvent(e)) {\n      this.notifyObserver(\"showEditAppointmentPopup\", {\n        data: data,\n        target: $target\n      });\n      return;\n    }\n    this._appointmentClickTimeout = setTimeout(() => {\n      if (!this._preventSingleAppointmentClick && domAdapter.getBody().contains($target[0])) {\n        this.notifyObserver(\"showAppointmentTooltip\", {\n          data: data,\n          target: $target\n        });\n      }\n      this._preventSingleAppointmentClick = false;\n    }, 300);\n  }\n  _extendActionArgs($itemElement) {\n    var args = super._extendActionArgs($itemElement);\n    return this.invoke(\"mapAppointmentFields\", args);\n  }\n  _render() {\n    super._render();\n    this._attachAppointmentDblClick();\n  }\n  _attachAppointmentDblClick() {\n    var that = this;\n    var itemSelector = that._itemSelector();\n    var itemContainer = this._itemContainer();\n    eventsEngine.off(itemContainer, DBLCLICK_EVENT_NAME, itemSelector);\n    eventsEngine.on(itemContainer, DBLCLICK_EVENT_NAME, itemSelector, e => {\n      that._itemDXEventHandler(e, \"onAppointmentDblClick\", {}, {\n        afterExecute(e) {\n          that._dblClickHandler(e.args[0].event);\n        }\n      });\n    });\n  }\n  _dblClickHandler(e) {\n    var $targetAppointment = $(e.currentTarget);\n    var appointmentData = this._getItemData($targetAppointment);\n    clearTimeout(this._appointmentClickTimeout);\n    this._preventSingleAppointmentClick = true;\n    this.notifyObserver(\"showEditAppointmentPopup\", {\n      data: appointmentData,\n      target: $targetAppointment\n    });\n  }\n  _renderItem(index, item, container) {\n    var {\n      itemData: itemData\n    } = item;\n    var $items = [];\n    for (var i = 0; i < item.settings.length; i++) {\n      var setting = item.settings[i];\n      this._currentAppointmentSettings = setting;\n      var $item = super._renderItem(index, itemData, container);\n      $item.data(APPOINTMENT_SETTINGS_KEY, setting);\n      $items.push($item);\n    }\n    return $items;\n  }\n  _getItemContent($itemFrame) {\n    $itemFrame.data(APPOINTMENT_SETTINGS_KEY, this._currentAppointmentSettings);\n    var $itemContent = super._getItemContent($itemFrame);\n    return $itemContent;\n  }\n  _createItemByTemplate(itemTemplate, renderArgs) {\n    var {\n      itemData: itemData,\n      container: container,\n      index: index\n    } = renderArgs;\n    return itemTemplate.render({\n      model: {\n        appointmentData: itemData,\n        targetedAppointmentData: this.invoke(\"getTargetedAppointmentData\", itemData, $(container).parent())\n      },\n      container: container,\n      index: index\n    });\n  }\n  _getAppointmentContainer(allDay) {\n    var $allDayContainer = this.option(\"allDayContainer\");\n    var $container = this.itemsContainer().not($allDayContainer);\n    if (allDay && $allDayContainer) {\n      $container = $allDayContainer;\n    }\n    return $container;\n  }\n  _postprocessRenderItem(args) {\n    this._renderAppointment(args.itemElement, this._currentAppointmentSettings);\n  }\n  _renderAppointment(element, settings) {\n    var _a;\n    element.data(APPOINTMENT_SETTINGS_KEY, settings);\n    this._applyResourceDataAttr(element);\n    var rawAppointment = this._getItemData(element);\n    var geometry = this.invoke(\"getAppointmentGeometry\", settings);\n    var allowResize = this.option(\"allowResize\") && (!isDefined(settings.skipResizing) || isString(settings.skipResizing));\n    var allowDrag = this.option(\"allowDrag\");\n    var {\n      allDay: allDay\n    } = settings;\n    this.invoke(\"setCellDataCacheAlias\", this._currentAppointmentSettings, geometry);\n    if (settings.virtual) {\n      var appointmentConfig = {\n        itemData: rawAppointment,\n        groupIndex: settings.groupIndex,\n        groups: this.option(\"groups\")\n      };\n      var deferredColor = this.option(\"getAppointmentColor\")(appointmentConfig);\n      this._processVirtualAppointment(settings, element, rawAppointment, deferredColor);\n    } else {\n      var config = {\n        data: rawAppointment,\n        groupIndex: settings.groupIndex,\n        observer: this.option(\"observer\"),\n        geometry: geometry,\n        direction: settings.direction || \"vertical\",\n        allowResize: allowResize,\n        allowDrag: allowDrag,\n        allDay: allDay,\n        reduced: settings.appointmentReduced,\n        isCompact: settings.isCompact,\n        startDate: new Date(null === (_a = settings.info) || void 0 === _a ? void 0 : _a.appointment.startDate),\n        cellWidth: this.invoke(\"getCellWidth\"),\n        cellHeight: this.invoke(\"getCellHeight\"),\n        resizableConfig: this._resizableConfig(rawAppointment, settings),\n        groups: this.option(\"groups\"),\n        getAppointmentColor: this.option(\"getAppointmentColor\"),\n        getResourceDataAccessors: this.option(\"getResourceDataAccessors\")\n      };\n      if (this.isAgendaView) {\n        var agendaResourceProcessor = this.option(\"getAgendaResourceProcessor\")();\n        config.createPlainResourceListAsync = rawAppointment => agendaResourceProcessor.createListAsync(rawAppointment);\n      }\n      this._createComponent(element, this.isAgendaView ? AgendaAppointment : Appointment, _extends(_extends({}, config), {\n        dataAccessors: this.option(\"dataAccessors\"),\n        getResizableStep: this.option(\"getResizableStep\")\n      }));\n    }\n  }\n  _applyResourceDataAttr($appointment) {\n    var dataAccessors = this.option(\"getResourceDataAccessors\")();\n    var rawAppointment = this._getItemData($appointment);\n    each(dataAccessors.getter, key => {\n      var value = dataAccessors.getter[key](rawAppointment);\n      if (isDefined(value)) {\n        var prefix = \"data-\".concat(normalizeKey(key.toLowerCase()), \"-\");\n        wrapToArray(value).forEach(value => $appointment.attr(prefix + normalizeKey(value), true));\n      }\n    });\n  }\n  _resizableConfig(appointmentData, itemSetting) {\n    return {\n      area: this._calculateResizableArea(itemSetting, appointmentData),\n      onResizeStart: function (e) {\n        this.resizeOccur = true;\n        this._$currentAppointment = $(e.element);\n        if (this.invoke(\"needRecalculateResizableArea\")) {\n          var updatedArea = this._calculateResizableArea(this._$currentAppointment.data(APPOINTMENT_SETTINGS_KEY), this._$currentAppointment.data(\"dxItemData\"));\n          e.component.option(\"area\", updatedArea);\n          e.component._renderDragOffsets(e.event);\n        }\n        this._initialSize = {\n          width: e.width,\n          height: e.height\n        };\n        this._initialCoordinates = locate(this._$currentAppointment);\n      }.bind(this),\n      onResizeEnd: function (e) {\n        this.resizeOccur = false;\n        this._resizeEndHandler(e);\n      }.bind(this)\n    };\n  }\n  _calculateResizableArea(itemSetting, appointmentData) {\n    var area = this.$element().closest(\".dx-scrollable-content\");\n    return this.invoke(\"getResizableAppointmentArea\", {\n      coordinates: {\n        left: itemSetting.left,\n        top: 0,\n        groupIndex: itemSetting.groupIndex\n      },\n      allDay: itemSetting.allDay\n    }) || area;\n  }\n  _resizeEndHandler(e) {\n    var $element = $(e.element);\n    var {\n      allDay: allDay,\n      info: info\n    } = $element.data(\"dxAppointmentSettings\");\n    var sourceAppointment = this._getItemData($element);\n    var dateRange = {};\n    if (allDay) {\n      dateRange = this.resizeAllDay(e);\n    } else {\n      var startDate = this._getEndResizeAppointmentStartDate(e, sourceAppointment, info.appointment);\n      var {\n        endDate: endDate\n      } = info.appointment;\n      dateRange = this._getDateRange(e, startDate, endDate);\n    }\n    this.updateResizedAppointment($element, dateRange, this.option(\"dataAccessors\"), this.option(\"timeZoneCalculator\"));\n  }\n  resizeAllDay(e) {\n    var $element = $(e.element);\n    var timeZoneCalculator = this.option(\"timeZoneCalculator\");\n    var dataAccessors = this.option(\"dataAccessors\");\n    return getAppointmentDateRange({\n      handles: e.handles,\n      appointmentSettings: $element.data(\"dxAppointmentSettings\"),\n      isVerticalViewDirection: this.option(\"isVerticalViewDirection\")(),\n      isVerticalGroupedWorkSpace: this.option(\"isVerticalGroupedWorkSpace\")(),\n      appointmentRect: getBoundingRect($element[0]),\n      parentAppointmentRect: getBoundingRect($element.parent()[0]),\n      viewDataProvider: this.option(\"getViewDataProvider\")(),\n      isDateAndTimeView: this.option(\"isDateAndTimeView\")(),\n      startDayHour: this.invoke(\"getStartDayHour\"),\n      endDayHour: this.invoke(\"getEndDayHour\"),\n      timeZoneCalculator: timeZoneCalculator,\n      dataAccessors: dataAccessors,\n      rtlEnabled: this.option(\"rtlEnabled\"),\n      DOMMetaData: this.option(\"getDOMElementsMetaData\")()\n    });\n  }\n  updateResizedAppointment($element, dateRange, dataAccessors, timeZoneCalculator) {\n    var sourceAppointment = this._getItemData($element);\n    var modifiedAppointmentAdapter = createAppointmentAdapter(sourceAppointment, dataAccessors, timeZoneCalculator).clone();\n    modifiedAppointmentAdapter.startDate = new Date(dateRange.startDate);\n    modifiedAppointmentAdapter.endDate = new Date(dateRange.endDate);\n    this.notifyObserver(\"updateAppointmentAfterResize\", {\n      target: sourceAppointment,\n      data: modifiedAppointmentAdapter.clone({\n        pathTimeZone: \"fromGrid\"\n      }).source(),\n      $appointment: $element\n    });\n  }\n  _getEndResizeAppointmentStartDate(e, rawAppointment, appointmentInfo) {\n    var timeZoneCalculator = this.option(\"timeZoneCalculator\");\n    var appointmentAdapter = createAppointmentAdapter(rawAppointment, this.option(\"dataAccessors\"), timeZoneCalculator);\n    var {\n      startDate: startDate\n    } = appointmentInfo;\n    var recurrenceProcessor = getRecurrenceProcessor();\n    var {\n      recurrenceRule: recurrenceRule,\n      startDateTimeZone: startDateTimeZone\n    } = appointmentAdapter;\n    var isAllDay = this.invoke(\"isAllDay\", rawAppointment);\n    var isRecurrent = recurrenceProcessor.isValidRecurrenceRule(recurrenceRule);\n    if (!e.handles.top && !isRecurrent && !isAllDay) {\n      startDate = timeZoneCalculator.createDate(appointmentAdapter.startDate, {\n        appointmentTimeZone: startDateTimeZone,\n        path: \"toGrid\"\n      });\n    }\n    return startDate;\n  }\n  _getDateRange(e, startDate, endDate) {\n    var itemData = this._getItemData(e.element);\n    var deltaTime = this.invoke(\"getDeltaTime\", e, this._initialSize, itemData);\n    var renderingStrategyDirection = this.invoke(\"getRenderingStrategyDirection\");\n    var isStartDateChanged = false;\n    var isAllDay = this.invoke(\"isAllDay\", itemData);\n    var needCorrectDates = this.invoke(\"needCorrectAppointmentDates\") && !isAllDay;\n    var startTime;\n    var endTime;\n    if (\"vertical\" !== renderingStrategyDirection || isAllDay) {\n      isStartDateChanged = this.option(\"rtlEnabled\") ? e.handles.right : e.handles.left;\n    } else {\n      isStartDateChanged = e.handles.top;\n    }\n    if (isStartDateChanged) {\n      startTime = needCorrectDates ? this._correctStartDateByDelta(startDate, deltaTime) : startDate.getTime() - deltaTime;\n      startTime += timeZoneUtils.getTimezoneOffsetChangeInMs(startDate, endDate, startTime, endDate);\n      endTime = endDate.getTime();\n    } else {\n      startTime = startDate.getTime();\n      endTime = needCorrectDates ? this._correctEndDateByDelta(endDate, deltaTime) : endDate.getTime() + deltaTime;\n      endTime -= timeZoneUtils.getTimezoneOffsetChangeInMs(startDate, endDate, startDate, endTime);\n    }\n    return {\n      startDate: new Date(startTime),\n      endDate: new Date(endTime)\n    };\n  }\n  _correctEndDateByDelta(endDate, deltaTime) {\n    var endDayHour = this.invoke(\"getEndDayHour\");\n    var startDayHour = this.invoke(\"getStartDayHour\");\n    var result = endDate.getTime() + deltaTime;\n    var visibleDayDuration = (endDayHour - startDayHour) * toMs(\"hour\");\n    var daysCount = deltaTime > 0 ? Math.ceil(deltaTime / visibleDayDuration) : Math.floor(deltaTime / visibleDayDuration);\n    var maxDate = new Date(endDate);\n    var minDate = new Date(endDate);\n    minDate.setHours(startDayHour, 0, 0, 0);\n    maxDate.setHours(endDayHour, 0, 0, 0);\n    if (result > maxDate.getTime() || result <= minDate.getTime()) {\n      var tailOfCurrentDay = maxDate.getTime() - endDate.getTime();\n      var tailOfPrevDays = deltaTime - tailOfCurrentDay;\n      var correctedEndDate = new Date(endDate).setDate(endDate.getDate() + daysCount);\n      var lastDay = new Date(correctedEndDate);\n      lastDay.setHours(startDayHour, 0, 0, 0);\n      result = lastDay.getTime() + tailOfPrevDays - visibleDayDuration * (daysCount - 1);\n    }\n    return result;\n  }\n  _correctStartDateByDelta(startDate, deltaTime) {\n    var endDayHour = this.invoke(\"getEndDayHour\");\n    var startDayHour = this.invoke(\"getStartDayHour\");\n    var result = startDate.getTime() - deltaTime;\n    var visibleDayDuration = (endDayHour - startDayHour) * toMs(\"hour\");\n    var daysCount = deltaTime > 0 ? Math.ceil(deltaTime / visibleDayDuration) : Math.floor(deltaTime / visibleDayDuration);\n    var maxDate = new Date(startDate);\n    var minDate = new Date(startDate);\n    minDate.setHours(startDayHour, 0, 0, 0);\n    maxDate.setHours(endDayHour, 0, 0, 0);\n    if (result < minDate.getTime() || result >= maxDate.getTime()) {\n      var tailOfCurrentDay = startDate.getTime() - minDate.getTime();\n      var tailOfPrevDays = deltaTime - tailOfCurrentDay;\n      var firstDay = new Date(startDate.setDate(startDate.getDate() - daysCount));\n      firstDay.setHours(endDayHour, 0, 0, 0);\n      result = firstDay.getTime() - tailOfPrevDays + visibleDayDuration * (daysCount - 1);\n    }\n    return result;\n  }\n  _processVirtualAppointment(appointmentSetting, $appointment, appointmentData, color) {\n    var virtualAppointment = appointmentSetting.virtual;\n    var virtualGroupIndex = virtualAppointment.index;\n    if (!isDefined(this._virtualAppointments[virtualGroupIndex])) {\n      this._virtualAppointments[virtualGroupIndex] = {\n        coordinates: {\n          top: virtualAppointment.top,\n          left: virtualAppointment.left\n        },\n        items: {\n          data: [],\n          colors: [],\n          settings: []\n        },\n        isAllDay: !!virtualAppointment.isAllDay,\n        buttonColor: color\n      };\n    }\n    appointmentSetting.targetedAppointmentData = this.invoke(\"getTargetedAppointmentData\", appointmentData, $appointment);\n    this._virtualAppointments[virtualGroupIndex].items.settings.push(appointmentSetting);\n    this._virtualAppointments[virtualGroupIndex].items.data.push(appointmentData);\n    this._virtualAppointments[virtualGroupIndex].items.colors.push(color);\n    $appointment.remove();\n  }\n  _renderContentImpl() {\n    super._renderContentImpl();\n    this._renderDropDownAppointments();\n  }\n  _renderDropDownAppointments() {\n    this._renderByFragments(($commonFragment, $allDayFragment) => {\n      each(this._virtualAppointments, groupIndex => {\n        var virtualGroup = this._virtualAppointments[groupIndex];\n        var virtualItems = virtualGroup.items;\n        var virtualCoordinates = virtualGroup.coordinates;\n        var $fragment = virtualGroup.isAllDay ? $allDayFragment : $commonFragment;\n        var {\n          left: left\n        } = virtualCoordinates;\n        var buttonWidth = this.invoke(\"getDropDownAppointmentWidth\", virtualGroup.isAllDay);\n        var buttonHeight = this.invoke(\"getDropDownAppointmentHeight\");\n        var rtlOffset = this.option(\"rtlEnabled\") ? buttonWidth : 0;\n        this.notifyObserver(\"renderCompactAppointments\", {\n          $container: $fragment,\n          coordinates: {\n            top: virtualCoordinates.top,\n            left: left + rtlOffset\n          },\n          items: virtualItems,\n          buttonColor: virtualGroup.buttonColor,\n          width: buttonWidth - this.option(\"_collectorOffset\"),\n          height: buttonHeight,\n          onAppointmentClick: this.option(\"onItemClick\"),\n          allowDrag: this.option(\"allowDrag\"),\n          cellWidth: this.invoke(\"getCellWidth\"),\n          isCompact: this.invoke(\"isAdaptive\") || this._isGroupCompact(virtualGroup)\n        });\n      });\n    });\n  }\n  _isGroupCompact(virtualGroup) {\n    return !virtualGroup.isAllDay && this.invoke(\"supportCompactDropDownAppointments\");\n  }\n  _sortAppointmentsByStartDate(appointments) {\n    return sortAppointmentsByStartDate(appointments, this.option(\"dataAccessors\"));\n  }\n  _processRecurrenceAppointment(appointment, index, skipLongAppointments) {\n    var recurrenceRule = ExpressionUtils.getField(this.option(\"dataAccessors\"), \"recurrenceRule\", appointment);\n    var result = {\n      parts: [],\n      indexes: []\n    };\n    if (recurrenceRule) {\n      var dates = appointment.settings || appointment;\n      var startDate = new Date(ExpressionUtils.getField(this.option(\"dataAccessors\"), \"startDate\", dates));\n      var startDateTimeZone = ExpressionUtils.getField(this.option(\"dataAccessors\"), \"startDateTimeZone\", appointment);\n      var endDate = new Date(ExpressionUtils.getField(this.option(\"dataAccessors\"), \"endDate\", dates));\n      var appointmentDuration = endDate.getTime() - startDate.getTime();\n      var recurrenceException = ExpressionUtils.getField(this.option(\"dataAccessors\"), \"recurrenceException\", appointment);\n      var startViewDate = this.invoke(\"getStartViewDate\");\n      var endViewDate = this.invoke(\"getEndViewDate\");\n      var timezoneCalculator = this.option(\"timeZoneCalculator\");\n      var recurrentDates = getRecurrenceProcessor().generateDates({\n        rule: recurrenceRule,\n        exception: recurrenceException,\n        start: startDate,\n        end: endDate,\n        min: startViewDate,\n        max: endViewDate,\n        appointmentTimezoneOffset: timezoneCalculator.getOriginStartDateOffsetInMs(startDate, startDateTimeZone, false)\n      });\n      var recurrentDateCount = appointment.settings ? 1 : recurrentDates.length;\n      for (var i = 0; i < recurrentDateCount; i++) {\n        var appointmentPart = extend({}, appointment, true);\n        if (recurrentDates[i]) {\n          var appointmentSettings = this._applyStartDateToObj(recurrentDates[i], {});\n          this._applyEndDateToObj(new Date(recurrentDates[i].getTime() + appointmentDuration), appointmentSettings);\n          appointmentPart.settings = appointmentSettings;\n        } else {\n          appointmentPart.settings = dates;\n        }\n        result.parts.push(appointmentPart);\n        if (!skipLongAppointments) {\n          this._processLongAppointment(appointmentPart, result);\n        }\n      }\n      result.indexes.push(index);\n    }\n    return result;\n  }\n  _processLongAppointment(appointment, result) {\n    var parts = this.splitAppointmentByDay(appointment);\n    var partCount = parts.length;\n    var endViewDate = this.invoke(\"getEndViewDate\").getTime();\n    var startViewDate = this.invoke(\"getStartViewDate\").getTime();\n    var timeZoneCalculator = this.option(\"timeZoneCalculator\");\n    result = result || {\n      parts: []\n    };\n    if (partCount > 1) {\n      extend(appointment, parts[0]);\n      for (var i = 1; i < partCount; i++) {\n        var startDate = ExpressionUtils.getField(this.option(\"dataAccessors\"), \"startDate\", parts[i].settings).getTime();\n        startDate = timeZoneCalculator.createDate(startDate, {\n          path: \"toGrid\"\n        });\n        if (startDate < endViewDate && startDate > startViewDate) {\n          result.parts.push(parts[i]);\n        }\n      }\n    }\n    return result;\n  }\n  _reduceRecurrenceAppointments(recurrenceIndexes, appointments) {\n    each(recurrenceIndexes, (i, index) => {\n      appointments.splice(index - i, 1);\n    });\n  }\n  _combineAppointments(appointments, additionalAppointments) {\n    if (additionalAppointments.length) {\n      appointments.push(...additionalAppointments);\n    }\n    this._sortAppointmentsByStartDate(appointments);\n  }\n  _applyStartDateToObj(startDate, obj) {\n    ExpressionUtils.setField(this.option(\"dataAccessors\"), \"startDate\", obj, startDate);\n    return obj;\n  }\n  _applyEndDateToObj(endDate, obj) {\n    ExpressionUtils.setField(this.option(\"dataAccessors\"), \"endDate\", obj, endDate);\n    return obj;\n  }\n  moveAppointmentBack(dragEvent) {\n    var $appointment = this._$currentAppointment;\n    var size = this._initialSize;\n    var coords = this._initialCoordinates;\n    if (dragEvent) {\n      this._removeDragSourceClassFromDraggedAppointment();\n      if (isDeferred(dragEvent.cancel)) {\n        dragEvent.cancel.resolve(true);\n      } else {\n        dragEvent.cancel = true;\n      }\n    }\n    if ($appointment && !dragEvent) {\n      if (coords) {\n        move($appointment, coords);\n        delete this._initialSize;\n      }\n      if (size) {\n        setOuterWidth($appointment, size.width);\n        setOuterHeight($appointment, size.height);\n        delete this._initialCoordinates;\n      }\n    }\n  }\n  focus() {\n    if (this._$currentAppointment) {\n      var focusedElement = getPublicElement(this._$currentAppointment);\n      this.option(\"focusedElement\", focusedElement);\n      eventsEngine.trigger(focusedElement, \"focus\");\n    }\n  }\n  splitAppointmentByDay(appointment) {\n    var dates = appointment.settings || appointment;\n    var dataAccessors = this.option(\"dataAccessors\");\n    var originalStartDate = new Date(ExpressionUtils.getField(dataAccessors, \"startDate\", dates));\n    var startDate = dateUtils.makeDate(originalStartDate);\n    var endDate = dateUtils.makeDate(ExpressionUtils.getField(dataAccessors, \"endDate\", dates));\n    var maxAllowedDate = this.invoke(\"getEndViewDate\");\n    var startDayHour = this.invoke(\"getStartDayHour\");\n    var endDayHour = this.invoke(\"getEndDayHour\");\n    var timeZoneCalculator = this.option(\"timeZoneCalculator\");\n    var adapter = createAppointmentAdapter(appointment, dataAccessors, timeZoneCalculator);\n    var appointmentIsLong = getAppointmentTakesSeveralDays(adapter);\n    var result = [];\n    startDate = timeZoneCalculator.createDate(startDate, {\n      path: \"toGrid\"\n    });\n    endDate = timeZoneCalculator.createDate(endDate, {\n      path: \"toGrid\"\n    });\n    if (startDate.getHours() <= endDayHour && startDate.getHours() >= startDayHour && !appointmentIsLong) {\n      result.push(this._applyStartDateToObj(new Date(startDate), {\n        appointmentData: appointment\n      }));\n      startDate.setDate(startDate.getDate() + 1);\n    }\n    while (appointmentIsLong && startDate.getTime() < endDate.getTime() && startDate < maxAllowedDate) {\n      var currentStartDate = new Date(startDate);\n      var currentEndDate = new Date(startDate);\n      this._checkStartDate(currentStartDate, originalStartDate, startDayHour);\n      this._checkEndDate(currentEndDate, endDate, endDayHour);\n      var appointmentData = deepExtendArraySafe({}, appointment, true);\n      var appointmentSettings = {};\n      this._applyStartDateToObj(currentStartDate, appointmentSettings);\n      this._applyEndDateToObj(currentEndDate, appointmentSettings);\n      appointmentData.settings = appointmentSettings;\n      result.push(appointmentData);\n      startDate = dateUtils.trimTime(startDate);\n      startDate.setDate(startDate.getDate() + 1);\n      startDate.setHours(startDayHour);\n    }\n    return result;\n  }\n  _checkStartDate(currentDate, originalDate, startDayHour) {\n    if (!dateUtils.sameDate(currentDate, originalDate) || currentDate.getHours() <= startDayHour) {\n      currentDate.setHours(startDayHour, 0, 0, 0);\n    } else {\n      currentDate.setHours(originalDate.getHours(), originalDate.getMinutes(), originalDate.getSeconds(), originalDate.getMilliseconds());\n    }\n  }\n  _checkEndDate(currentDate, originalDate, endDayHour) {\n    if (!dateUtils.sameDate(currentDate, originalDate) || currentDate.getHours() > endDayHour) {\n      currentDate.setHours(endDayHour, 0, 0, 0);\n    } else {\n      currentDate.setHours(originalDate.getHours(), originalDate.getMinutes(), originalDate.getSeconds(), originalDate.getMilliseconds());\n    }\n  }\n  _removeDragSourceClassFromDraggedAppointment() {\n    var $appointments = this._itemElements().filter(\".\".concat(APPOINTMENT_DRAG_SOURCE_CLASS));\n    $appointments.each((_, element) => {\n      var appointmentInstance = $(element).dxSchedulerAppointment(\"instance\");\n      appointmentInstance.option(\"isDragSource\", false);\n    });\n  }\n  _setDragSourceAppointment(appointment, settings) {\n    var $appointments = this._findItemElementByItem(appointment);\n    var {\n      startDate: startDate,\n      endDate: endDate\n    } = settings.info.sourceAppointment;\n    var {\n      groupIndex: groupIndex\n    } = settings;\n    $appointments.forEach($item => {\n      var {\n        info: itemInfo,\n        groupIndex: itemGroupIndex\n      } = $item.data(APPOINTMENT_SETTINGS_KEY);\n      var {\n        startDate: itemStartDate,\n        endDate: itemEndDate\n      } = itemInfo.sourceAppointment;\n      var appointmentInstance = $item.dxSchedulerAppointment(\"instance\");\n      var isDragSource = startDate.getTime() === itemStartDate.getTime() && endDate.getTime() === itemEndDate.getTime() && groupIndex === itemGroupIndex;\n      appointmentInstance.option(\"isDragSource\", isDragSource);\n    });\n  }\n  updateResizableArea() {\n    var $allResizableElements = this.$element().find(\".dx-scheduler-appointment.dx-resizable\");\n    var horizontalResizables = grep($allResizableElements, el => {\n      var $el = $(el);\n      var resizableInst = $el.dxResizable(\"instance\");\n      var {\n        area: area,\n        handles: handles\n      } = resizableInst.option();\n      return (\"right left\" === handles || \"left right\" === handles) && isPlainObject(area);\n    });\n    each(horizontalResizables, (_, el) => {\n      var $el = $(el);\n      var position = locate($el);\n      var appointmentData = this._getItemData($el);\n      var area = this._calculateResizableArea({\n        left: position.left\n      }, appointmentData);\n      $el.dxResizable(\"instance\").option(\"area\", area);\n    });\n  }\n}\nregisterComponent(\"dxSchedulerAppointments\", SchedulerAppointments);\nexport default SchedulerAppointments;","map":{"version":3,"names":["_extends","locate","move","registerComponent","domAdapter","getPublicElement","data","elementData","$","wrapToArray","grep","normalizeKey","dateUtils","extend","each","deepExtendArraySafe","getBoundingRect","setOuterHeight","setOuterWidth","isDeferred","isDefined","isPlainObject","isString","eventsEngine","name","dblclickEvent","addNamespace","isFakeClickEvent","CollectionWidget","createAppointmentAdapter","APPOINTMENT_DRAG_SOURCE_CLASS","APPOINTMENT_ITEM_CLASS","APPOINTMENT_SETTINGS_KEY","ExpressionUtils","getRecurrenceProcessor","timeZoneUtils","getAppointmentTakesSeveralDays","sortAppointmentsByStartDate","AgendaAppointment","Appointment","createAgendaAppointmentLayout","createAppointmentLayout","getAppointmentDateRange","COMPONENT_CLASS","DBLCLICK_EVENT_NAME","toMs","dateToMilliseconds","SchedulerAppointments","constructor","element","options","_virtualAppointments","isAgendaView","invoke","isVirtualScrolling","appointmentDataProvider","option","optionName","value","arguments","notifyObserver","subject","args","observer","fire","funcName","_len","length","Array","_key","apply","_dispose","clearTimeout","_appointmentClickTimeout","_supportedKeys","parent","currentAppointment","_$currentAppointment","escape","_a","_b","_c","resizeOccur","moveAppointmentBack","dxResizable","_detachEventHandlers","_attachEventHandlers","_toggleResizingClass","bind","del","e","preventDefault","_getItemData","target","tab","appointments","_getAccessAppointments","focusedAppointment","filter","index","sortedIndex","lastIndex","shiftKey","$nextAppointment","_getAppointmentByIndex","_resetTabIndex","trigger","_","$item","eq","_itemElements","not","$appointment","_focusTarget","attr","_moveFocus","_renderFocusTarget","_focusInHandler","_focusOutHandler","_eventBindingTarget","_itemContainer","_getDefaultOptions","noDataText","activeStateEnabled","hoverStateEnabled","tabIndex","fixedContainer","allDayContainer","allowDrag","allowResize","allowAllDayResize","onAppointmentDblClick","_collectorOffset","groups","resources","_optionChanged","_cleanFocusState","_clearDropDownItems","_clearDropDownItemsElements","_repaintAppointments","_renderDropDownAppointments","_attachAppointmentsEvents","_invalidate","_isAllDayAppointment","appointment","settings","allDay","_isRepaintAppointment","needRepaint","_isRepaintAll","i","_applyFragment","fragment","children","_getAppointmentContainer","append","_onEachAppointment","container","isRepaintAll","needRemove","_clearItem","_renderItem","_renderByFragments","$commonFragment","$allDayFragment","html","_cleanItemContainer","forEach","renderFunction","createDocumentFragment","_attachClickEvent","_attachHoldEvent","_attachContextMenuEvent","_attachAppointmentDblClick","_renderFocusState","_attachFeedbackEvents","_attachHoverEvents","item","$items","_findItemElementByItem","itemData","detach","remove","result","that","itemElements","_itemDataKey","push","_itemClass","$container","$result","$allDayContainer","add","empty","_clean","_initialSize","_initialCoordinates","_init","$element","addClass","_preventSingleAppointmentClick","_renderAppointmentTemplate","model","config","isAllDay","isRecurrence","recurrenceRule","formatText","appointmentData","_currentAppointmentSettings","agendaSettings","targetedAppointmentData","_executeItemRenderAction","itemElement","action","_getItemRenderAction","_itemClickHandler","afterExecute","_processItemClick","event","$target","currentTarget","type","setTimeout","getBody","contains","_extendActionArgs","$itemElement","_render","itemSelector","_itemSelector","itemContainer","off","on","_itemDXEventHandler","_dblClickHandler","$targetAppointment","setting","_getItemContent","$itemFrame","$itemContent","_createItemByTemplate","itemTemplate","renderArgs","render","itemsContainer","_postprocessRenderItem","_renderAppointment","_applyResourceDataAttr","rawAppointment","geometry","skipResizing","virtual","appointmentConfig","groupIndex","deferredColor","_processVirtualAppointment","direction","reduced","appointmentReduced","isCompact","startDate","Date","info","cellWidth","cellHeight","resizableConfig","_resizableConfig","getAppointmentColor","getResourceDataAccessors","agendaResourceProcessor","createPlainResourceListAsync","createListAsync","_createComponent","dataAccessors","getResizableStep","getter","key","prefix","concat","toLowerCase","itemSetting","area","_calculateResizableArea","onResizeStart","updatedArea","component","_renderDragOffsets","width","height","onResizeEnd","_resizeEndHandler","closest","coordinates","left","top","sourceAppointment","dateRange","resizeAllDay","_getEndResizeAppointmentStartDate","endDate","_getDateRange","updateResizedAppointment","timeZoneCalculator","handles","appointmentSettings","isVerticalViewDirection","isVerticalGroupedWorkSpace","appointmentRect","parentAppointmentRect","viewDataProvider","isDateAndTimeView","startDayHour","endDayHour","rtlEnabled","DOMMetaData","modifiedAppointmentAdapter","clone","pathTimeZone","source","appointmentInfo","appointmentAdapter","recurrenceProcessor","startDateTimeZone","isRecurrent","isValidRecurrenceRule","createDate","appointmentTimeZone","path","deltaTime","renderingStrategyDirection","isStartDateChanged","needCorrectDates","startTime","endTime","right","_correctStartDateByDelta","getTime","getTimezoneOffsetChangeInMs","_correctEndDateByDelta","visibleDayDuration","daysCount","Math","ceil","floor","maxDate","minDate","setHours","tailOfCurrentDay","tailOfPrevDays","correctedEndDate","setDate","getDate","lastDay","firstDay","appointmentSetting","color","virtualAppointment","virtualGroupIndex","items","colors","buttonColor","_renderContentImpl","virtualGroup","virtualItems","virtualCoordinates","$fragment","buttonWidth","buttonHeight","rtlOffset","onAppointmentClick","_isGroupCompact","_sortAppointmentsByStartDate","_processRecurrenceAppointment","skipLongAppointments","getField","parts","indexes","dates","appointmentDuration","recurrenceException","startViewDate","endViewDate","timezoneCalculator","recurrentDates","generateDates","rule","exception","start","end","min","max","appointmentTimezoneOffset","getOriginStartDateOffsetInMs","recurrentDateCount","appointmentPart","_applyStartDateToObj","_applyEndDateToObj","_processLongAppointment","splitAppointmentByDay","partCount","_reduceRecurrenceAppointments","recurrenceIndexes","splice","_combineAppointments","additionalAppointments","obj","setField","dragEvent","size","coords","_removeDragSourceClassFromDraggedAppointment","cancel","resolve","focus","focusedElement","originalStartDate","makeDate","maxAllowedDate","adapter","appointmentIsLong","getHours","currentStartDate","currentEndDate","_checkStartDate","_checkEndDate","trimTime","currentDate","originalDate","sameDate","getMinutes","getSeconds","getMilliseconds","$appointments","appointmentInstance","dxSchedulerAppointment","_setDragSourceAppointment","itemInfo","itemGroupIndex","itemStartDate","itemEndDate","isDragSource","updateResizableArea","$allResizableElements","find","horizontalResizables","el","$el","resizableInst","position"],"sources":["C:/Users/Michal Abargel/Desktop/FULLSTACK_PROJECTS/PrivateLessones/F(x)/client/gui/node_modules/devextreme/esm/__internal/scheduler/appointments/m_appointment_collection.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/scheduler/appointments/m_appointment_collection.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport {\r\n    locate,\r\n    move\r\n} from \"../../../animation/translator\";\r\nimport registerComponent from \"../../../core/component_registrator\";\r\nimport domAdapter from \"../../../core/dom_adapter\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../../core/element\";\r\nimport {\r\n    data as elementData\r\n} from \"../../../core/element_data\";\r\nimport $ from \"../../../core/renderer\";\r\nimport {\r\n    wrapToArray\r\n} from \"../../../core/utils/array\";\r\nimport {\r\n    grep,\r\n    normalizeKey\r\n} from \"../../../core/utils/common\";\r\nimport dateUtils from \"../../../core/utils/date\";\r\nimport {\r\n    extend\r\n} from \"../../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../../core/utils/iterator\";\r\nimport {\r\n    deepExtendArraySafe\r\n} from \"../../../core/utils/object\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../../core/utils/position\";\r\nimport {\r\n    setOuterHeight,\r\n    setOuterWidth\r\n} from \"../../../core/utils/size\";\r\nimport {\r\n    isDeferred,\r\n    isDefined,\r\n    isPlainObject,\r\n    isString\r\n} from \"../../../core/utils/type\";\r\nimport eventsEngine from \"../../../events/core/events_engine\";\r\nimport {\r\n    name as dblclickEvent\r\n} from \"../../../events/double_click\";\r\nimport {\r\n    addNamespace,\r\n    isFakeClickEvent\r\n} from \"../../../events/utils/index\";\r\nimport CollectionWidget from \"../../../ui/collection/ui.collection_widget.edit\";\r\nimport {\r\n    createAppointmentAdapter\r\n} from \"../../../ui/scheduler/appointmentAdapter\";\r\nimport {\r\n    APPOINTMENT_DRAG_SOURCE_CLASS,\r\n    APPOINTMENT_ITEM_CLASS\r\n} from \"../../../ui/scheduler/classes\";\r\nimport {\r\n    APPOINTMENT_SETTINGS_KEY\r\n} from \"../../../ui/scheduler/constants\";\r\nimport {\r\n    ExpressionUtils\r\n} from \"../../../ui/scheduler/expressionUtils\";\r\nimport {\r\n    getRecurrenceProcessor\r\n} from \"../../../ui/scheduler/recurrence\";\r\nimport timeZoneUtils from \"../../../ui/scheduler/utils.timeZone\";\r\nimport {\r\n    getAppointmentTakesSeveralDays,\r\n    sortAppointmentsByStartDate\r\n} from \"./data_provider/m_utils\";\r\nimport {\r\n    AgendaAppointment,\r\n    Appointment\r\n} from \"./m_appointment\";\r\nimport {\r\n    createAgendaAppointmentLayout,\r\n    createAppointmentLayout\r\n} from \"./m_appointment_layout\";\r\nimport {\r\n    getAppointmentDateRange\r\n} from \"./resizing/m_core\";\r\nvar COMPONENT_CLASS = \"dx-scheduler-scrollable-appointments\";\r\nvar DBLCLICK_EVENT_NAME = addNamespace(dblclickEvent, \"dxSchedulerAppointment\");\r\nvar toMs = dateUtils.dateToMilliseconds;\r\nclass SchedulerAppointments extends CollectionWidget {\r\n    constructor(element, options) {\r\n        super(element, options);\r\n        this._virtualAppointments = {}\r\n    }\r\n    get isAgendaView() {\r\n        return this.invoke(\"isCurrentViewAgenda\")\r\n    }\r\n    get isVirtualScrolling() {\r\n        return this.invoke(\"isVirtualScrolling\")\r\n    }\r\n    get appointmentDataProvider() {\r\n        return this.option(\"getAppointmentDataProvider\")()\r\n    }\r\n    option(optionName, value) {\r\n        return super.option(...arguments)\r\n    }\r\n    notifyObserver(subject, args) {\r\n        var observer = this.option(\"observer\");\r\n        if (observer) {\r\n            observer.fire(subject, args)\r\n        }\r\n    }\r\n    invoke(funcName) {\r\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n            args[_key - 1] = arguments[_key]\r\n        }\r\n        var observer = this.option(\"observer\");\r\n        if (observer) {\r\n            return observer.fire.apply(observer, arguments)\r\n        }\r\n    }\r\n    _dispose() {\r\n        clearTimeout(this._appointmentClickTimeout);\r\n        super._dispose()\r\n    }\r\n    _supportedKeys() {\r\n        var parent = super._supportedKeys();\r\n        var currentAppointment = this._$currentAppointment;\r\n        return extend(parent, {\r\n            escape: function() {\r\n                var _a, _b, _c;\r\n                if (this.resizeOccur) {\r\n                    this.moveAppointmentBack();\r\n                    this.resizeOccur = false;\r\n                    null === (_a = currentAppointment.dxResizable(\"instance\")) || void 0 === _a ? void 0 : _a._detachEventHandlers();\r\n                    null === (_b = currentAppointment.dxResizable(\"instance\")) || void 0 === _b ? void 0 : _b._attachEventHandlers();\r\n                    null === (_c = currentAppointment.dxResizable(\"instance\")) || void 0 === _c ? void 0 : _c._toggleResizingClass(false)\r\n                }\r\n            }.bind(this),\r\n            del: function(e) {\r\n                if (this.option(\"allowDelete\")) {\r\n                    e.preventDefault();\r\n                    var data = this._getItemData(e.target);\r\n                    this.notifyObserver(\"onDeleteButtonPress\", {\r\n                        data: data,\r\n                        target: e.target\r\n                    })\r\n                }\r\n            }.bind(this),\r\n            tab: function(e) {\r\n                var appointments = this._getAccessAppointments();\r\n                var focusedAppointment = appointments.filter(\".dx-state-focused\");\r\n                var index = focusedAppointment.data(APPOINTMENT_SETTINGS_KEY).sortedIndex;\r\n                var lastIndex = appointments.length - 1;\r\n                if (index > 0 && e.shiftKey || index < lastIndex && !e.shiftKey) {\r\n                    e.preventDefault();\r\n                    e.shiftKey ? index-- : index++;\r\n                    var $nextAppointment = this._getAppointmentByIndex(index);\r\n                    this._resetTabIndex($nextAppointment);\r\n                    eventsEngine.trigger($nextAppointment, \"focus\")\r\n                }\r\n            }\r\n        })\r\n    }\r\n    _getAppointmentByIndex(sortedIndex) {\r\n        var appointments = this._getAccessAppointments();\r\n        return appointments.filter((_, $item) => elementData($item, APPOINTMENT_SETTINGS_KEY).sortedIndex === sortedIndex).eq(0)\r\n    }\r\n    _getAccessAppointments() {\r\n        return this._itemElements().filter(\":visible\").not(\".dx-state-disabled\")\r\n    }\r\n    _resetTabIndex($appointment) {\r\n        this._focusTarget().attr(\"tabIndex\", -1);\r\n        $appointment.attr(\"tabIndex\", this.option(\"tabIndex\"))\r\n    }\r\n    _moveFocus() {}\r\n    _focusTarget() {\r\n        return this._itemElements()\r\n    }\r\n    _renderFocusTarget() {\r\n        var $appointment = this._getAppointmentByIndex(0);\r\n        this._resetTabIndex($appointment)\r\n    }\r\n    _focusInHandler(e) {\r\n        super._focusInHandler(e);\r\n        this._$currentAppointment = $(e.target);\r\n        this.option(\"focusedElement\", getPublicElement($(e.target)))\r\n    }\r\n    _focusOutHandler(e) {\r\n        var $appointment = this._getAppointmentByIndex(0);\r\n        this.option(\"focusedElement\", getPublicElement($appointment));\r\n        super._focusOutHandler(e)\r\n    }\r\n    _eventBindingTarget() {\r\n        return this._itemContainer()\r\n    }\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            noDataText: null,\r\n            activeStateEnabled: true,\r\n            hoverStateEnabled: true,\r\n            tabIndex: 0,\r\n            fixedContainer: null,\r\n            allDayContainer: null,\r\n            allowDrag: true,\r\n            allowResize: true,\r\n            allowAllDayResize: true,\r\n            onAppointmentDblClick: null,\r\n            _collectorOffset: 0,\r\n            groups: [],\r\n            resources: []\r\n        })\r\n    }\r\n    _optionChanged(args) {\r\n        if (this.option(\"isRenovatedAppointments\")) {\r\n            return\r\n        }\r\n        switch (args.name) {\r\n            case \"items\":\r\n                this._cleanFocusState();\r\n                this._clearDropDownItems();\r\n                this._clearDropDownItemsElements();\r\n                this._repaintAppointments(args.value);\r\n                this._renderDropDownAppointments();\r\n                this._attachAppointmentsEvents();\r\n                break;\r\n            case \"fixedContainer\":\r\n            case \"allDayContainer\":\r\n            case \"onAppointmentDblClick\":\r\n                break;\r\n            case \"allowDrag\":\r\n            case \"allowResize\":\r\n            case \"allowAllDayResize\":\r\n                this._invalidate();\r\n                break;\r\n            case \"focusedElement\":\r\n                this._resetTabIndex($(args.value));\r\n                super._optionChanged(args);\r\n                break;\r\n            case \"allowDelete\":\r\n                break;\r\n            case \"focusStateEnabled\":\r\n                this._clearDropDownItemsElements();\r\n                this._renderDropDownAppointments();\r\n                super._optionChanged(args);\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    _isAllDayAppointment(appointment) {\r\n        return appointment.settings.length && appointment.settings[0].allDay || false\r\n    }\r\n    _isRepaintAppointment(appointment) {\r\n        return !isDefined(appointment.needRepaint) || true === appointment.needRepaint\r\n    }\r\n    _isRepaintAll(appointments) {\r\n        if (this.isAgendaView) {\r\n            return true\r\n        }\r\n        for (var i = 0; i < appointments.length; i++) {\r\n            if (!this._isRepaintAppointment(appointments[i])) {\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    }\r\n    _applyFragment(fragment, allDay) {\r\n        if (fragment.children().length > 0) {\r\n            this._getAppointmentContainer(allDay).append(fragment)\r\n        }\r\n    }\r\n    _onEachAppointment(appointment, index, container, isRepaintAll) {\r\n        if (true === (null === appointment || void 0 === appointment ? void 0 : appointment.needRemove)) {\r\n            this._clearItem(appointment)\r\n        } else if (isRepaintAll || this._isRepaintAppointment(appointment)) {\r\n            (() => {\r\n                appointment.needRepaint = false;\r\n                this._clearItem(appointment);\r\n                this._renderItem(index, appointment, container)\r\n            })()\r\n        }\r\n    }\r\n    _repaintAppointments(appointments) {\r\n        this._renderByFragments(($commonFragment, $allDayFragment) => {\r\n            var isRepaintAll = this._isRepaintAll(appointments);\r\n            if (isRepaintAll) {\r\n                this._getAppointmentContainer(true).html(\"\");\r\n                this._getAppointmentContainer(false).html(\"\")\r\n            }!appointments.length && this._cleanItemContainer();\r\n            appointments.forEach((appointment, index) => {\r\n                var container = this._isAllDayAppointment(appointment) ? $allDayFragment : $commonFragment;\r\n                this._onEachAppointment(appointment, index, container, isRepaintAll)\r\n            })\r\n        })\r\n    }\r\n    _renderByFragments(renderFunction) {\r\n        if (this.isVirtualScrolling) {\r\n            var $commonFragment = $(domAdapter.createDocumentFragment());\r\n            var $allDayFragment = $(domAdapter.createDocumentFragment());\r\n            renderFunction($commonFragment, $allDayFragment);\r\n            this._applyFragment($commonFragment, false);\r\n            this._applyFragment($allDayFragment, true)\r\n        } else {\r\n            renderFunction(this._getAppointmentContainer(false), this._getAppointmentContainer(true))\r\n        }\r\n    }\r\n    _attachAppointmentsEvents() {\r\n        this._attachClickEvent();\r\n        this._attachHoldEvent();\r\n        this._attachContextMenuEvent();\r\n        this._attachAppointmentDblClick();\r\n        this._renderFocusState();\r\n        this._attachFeedbackEvents();\r\n        this._attachHoverEvents()\r\n    }\r\n    _clearItem(item) {\r\n        var $items = this._findItemElementByItem(item.itemData);\r\n        if (!$items.length) {\r\n            return\r\n        }\r\n        each($items, (_, $item) => {\r\n            $item.detach();\r\n            $item.remove()\r\n        })\r\n    }\r\n    _clearDropDownItems() {\r\n        this._virtualAppointments = {}\r\n    }\r\n    _clearDropDownItemsElements() {\r\n        this.invoke(\"clearCompactAppointments\")\r\n    }\r\n    _findItemElementByItem(item) {\r\n        var result = [];\r\n        var that = this;\r\n        this.itemElements().each((function() {\r\n            var $item = $(this);\r\n            if ($item.data(that._itemDataKey()) === item) {\r\n                result.push($item)\r\n            }\r\n        }));\r\n        return result\r\n    }\r\n    _itemClass() {\r\n        return APPOINTMENT_ITEM_CLASS\r\n    }\r\n    _itemContainer() {\r\n        var $container = super._itemContainer();\r\n        var $result = $container;\r\n        var $allDayContainer = this.option(\"allDayContainer\");\r\n        if ($allDayContainer) {\r\n            $result = $container.add($allDayContainer)\r\n        }\r\n        return $result\r\n    }\r\n    _cleanItemContainer() {\r\n        super._cleanItemContainer();\r\n        var $allDayContainer = this.option(\"allDayContainer\");\r\n        if ($allDayContainer) {\r\n            $allDayContainer.empty()\r\n        }\r\n        this._virtualAppointments = {}\r\n    }\r\n    _clean() {\r\n        super._clean();\r\n        delete this._$currentAppointment;\r\n        delete this._initialSize;\r\n        delete this._initialCoordinates\r\n    }\r\n    _init() {\r\n        super._init();\r\n        this.$element().addClass(COMPONENT_CLASS);\r\n        this._preventSingleAppointmentClick = false\r\n    }\r\n    _renderAppointmentTemplate($container, appointment, model) {\r\n        var config = {\r\n            isAllDay: appointment.allDay,\r\n            isRecurrence: appointment.recurrenceRule,\r\n            html: isPlainObject(appointment) && appointment.html ? appointment.html : void 0\r\n        };\r\n        var formatText = this.invoke(\"getTextAndFormatDate\", model.appointmentData, this._currentAppointmentSettings.agendaSettings || model.targetedAppointmentData, \"TIME\");\r\n        $container.append(this.isAgendaView ? createAgendaAppointmentLayout(formatText, config) : createAppointmentLayout(formatText, config))\r\n    }\r\n    _executeItemRenderAction(index, itemData, itemElement) {\r\n        var action = this._getItemRenderAction();\r\n        if (action) {\r\n            action(this.invoke(\"mapAppointmentFields\", {\r\n                itemData: itemData,\r\n                itemElement: itemElement\r\n            }))\r\n        }\r\n        delete this._currentAppointmentSettings\r\n    }\r\n    _itemClickHandler(e) {\r\n        super._itemClickHandler(e, {}, {\r\n            afterExecute: function(e) {\r\n                this._processItemClick(e.args[0].event)\r\n            }.bind(this)\r\n        })\r\n    }\r\n    _processItemClick(e) {\r\n        var $target = $(e.currentTarget);\r\n        var data = this._getItemData($target);\r\n        if (\"keydown\" === e.type || isFakeClickEvent(e)) {\r\n            this.notifyObserver(\"showEditAppointmentPopup\", {\r\n                data: data,\r\n                target: $target\r\n            });\r\n            return\r\n        }\r\n        this._appointmentClickTimeout = setTimeout(() => {\r\n            if (!this._preventSingleAppointmentClick && domAdapter.getBody().contains($target[0])) {\r\n                this.notifyObserver(\"showAppointmentTooltip\", {\r\n                    data: data,\r\n                    target: $target\r\n                })\r\n            }\r\n            this._preventSingleAppointmentClick = false\r\n        }, 300)\r\n    }\r\n    _extendActionArgs($itemElement) {\r\n        var args = super._extendActionArgs($itemElement);\r\n        return this.invoke(\"mapAppointmentFields\", args)\r\n    }\r\n    _render() {\r\n        super._render();\r\n        this._attachAppointmentDblClick()\r\n    }\r\n    _attachAppointmentDblClick() {\r\n        var that = this;\r\n        var itemSelector = that._itemSelector();\r\n        var itemContainer = this._itemContainer();\r\n        eventsEngine.off(itemContainer, DBLCLICK_EVENT_NAME, itemSelector);\r\n        eventsEngine.on(itemContainer, DBLCLICK_EVENT_NAME, itemSelector, e => {\r\n            that._itemDXEventHandler(e, \"onAppointmentDblClick\", {}, {\r\n                afterExecute(e) {\r\n                    that._dblClickHandler(e.args[0].event)\r\n                }\r\n            })\r\n        })\r\n    }\r\n    _dblClickHandler(e) {\r\n        var $targetAppointment = $(e.currentTarget);\r\n        var appointmentData = this._getItemData($targetAppointment);\r\n        clearTimeout(this._appointmentClickTimeout);\r\n        this._preventSingleAppointmentClick = true;\r\n        this.notifyObserver(\"showEditAppointmentPopup\", {\r\n            data: appointmentData,\r\n            target: $targetAppointment\r\n        })\r\n    }\r\n    _renderItem(index, item, container) {\r\n        var {\r\n            itemData: itemData\r\n        } = item;\r\n        var $items = [];\r\n        for (var i = 0; i < item.settings.length; i++) {\r\n            var setting = item.settings[i];\r\n            this._currentAppointmentSettings = setting;\r\n            var $item = super._renderItem(index, itemData, container);\r\n            $item.data(APPOINTMENT_SETTINGS_KEY, setting);\r\n            $items.push($item)\r\n        }\r\n        return $items\r\n    }\r\n    _getItemContent($itemFrame) {\r\n        $itemFrame.data(APPOINTMENT_SETTINGS_KEY, this._currentAppointmentSettings);\r\n        var $itemContent = super._getItemContent($itemFrame);\r\n        return $itemContent\r\n    }\r\n    _createItemByTemplate(itemTemplate, renderArgs) {\r\n        var {\r\n            itemData: itemData,\r\n            container: container,\r\n            index: index\r\n        } = renderArgs;\r\n        return itemTemplate.render({\r\n            model: {\r\n                appointmentData: itemData,\r\n                targetedAppointmentData: this.invoke(\"getTargetedAppointmentData\", itemData, $(container).parent())\r\n            },\r\n            container: container,\r\n            index: index\r\n        })\r\n    }\r\n    _getAppointmentContainer(allDay) {\r\n        var $allDayContainer = this.option(\"allDayContainer\");\r\n        var $container = this.itemsContainer().not($allDayContainer);\r\n        if (allDay && $allDayContainer) {\r\n            $container = $allDayContainer\r\n        }\r\n        return $container\r\n    }\r\n    _postprocessRenderItem(args) {\r\n        this._renderAppointment(args.itemElement, this._currentAppointmentSettings)\r\n    }\r\n    _renderAppointment(element, settings) {\r\n        var _a;\r\n        element.data(APPOINTMENT_SETTINGS_KEY, settings);\r\n        this._applyResourceDataAttr(element);\r\n        var rawAppointment = this._getItemData(element);\r\n        var geometry = this.invoke(\"getAppointmentGeometry\", settings);\r\n        var allowResize = this.option(\"allowResize\") && (!isDefined(settings.skipResizing) || isString(settings.skipResizing));\r\n        var allowDrag = this.option(\"allowDrag\");\r\n        var {\r\n            allDay: allDay\r\n        } = settings;\r\n        this.invoke(\"setCellDataCacheAlias\", this._currentAppointmentSettings, geometry);\r\n        if (settings.virtual) {\r\n            var appointmentConfig = {\r\n                itemData: rawAppointment,\r\n                groupIndex: settings.groupIndex,\r\n                groups: this.option(\"groups\")\r\n            };\r\n            var deferredColor = this.option(\"getAppointmentColor\")(appointmentConfig);\r\n            this._processVirtualAppointment(settings, element, rawAppointment, deferredColor)\r\n        } else {\r\n            var config = {\r\n                data: rawAppointment,\r\n                groupIndex: settings.groupIndex,\r\n                observer: this.option(\"observer\"),\r\n                geometry: geometry,\r\n                direction: settings.direction || \"vertical\",\r\n                allowResize: allowResize,\r\n                allowDrag: allowDrag,\r\n                allDay: allDay,\r\n                reduced: settings.appointmentReduced,\r\n                isCompact: settings.isCompact,\r\n                startDate: new Date(null === (_a = settings.info) || void 0 === _a ? void 0 : _a.appointment.startDate),\r\n                cellWidth: this.invoke(\"getCellWidth\"),\r\n                cellHeight: this.invoke(\"getCellHeight\"),\r\n                resizableConfig: this._resizableConfig(rawAppointment, settings),\r\n                groups: this.option(\"groups\"),\r\n                getAppointmentColor: this.option(\"getAppointmentColor\"),\r\n                getResourceDataAccessors: this.option(\"getResourceDataAccessors\")\r\n            };\r\n            if (this.isAgendaView) {\r\n                var agendaResourceProcessor = this.option(\"getAgendaResourceProcessor\")();\r\n                config.createPlainResourceListAsync = rawAppointment => agendaResourceProcessor.createListAsync(rawAppointment)\r\n            }\r\n            this._createComponent(element, this.isAgendaView ? AgendaAppointment : Appointment, _extends(_extends({}, config), {\r\n                dataAccessors: this.option(\"dataAccessors\"),\r\n                getResizableStep: this.option(\"getResizableStep\")\r\n            }))\r\n        }\r\n    }\r\n    _applyResourceDataAttr($appointment) {\r\n        var dataAccessors = this.option(\"getResourceDataAccessors\")();\r\n        var rawAppointment = this._getItemData($appointment);\r\n        each(dataAccessors.getter, key => {\r\n            var value = dataAccessors.getter[key](rawAppointment);\r\n            if (isDefined(value)) {\r\n                var prefix = \"data-\".concat(normalizeKey(key.toLowerCase()), \"-\");\r\n                wrapToArray(value).forEach(value => $appointment.attr(prefix + normalizeKey(value), true))\r\n            }\r\n        })\r\n    }\r\n    _resizableConfig(appointmentData, itemSetting) {\r\n        return {\r\n            area: this._calculateResizableArea(itemSetting, appointmentData),\r\n            onResizeStart: function(e) {\r\n                this.resizeOccur = true;\r\n                this._$currentAppointment = $(e.element);\r\n                if (this.invoke(\"needRecalculateResizableArea\")) {\r\n                    var updatedArea = this._calculateResizableArea(this._$currentAppointment.data(APPOINTMENT_SETTINGS_KEY), this._$currentAppointment.data(\"dxItemData\"));\r\n                    e.component.option(\"area\", updatedArea);\r\n                    e.component._renderDragOffsets(e.event)\r\n                }\r\n                this._initialSize = {\r\n                    width: e.width,\r\n                    height: e.height\r\n                };\r\n                this._initialCoordinates = locate(this._$currentAppointment)\r\n            }.bind(this),\r\n            onResizeEnd: function(e) {\r\n                this.resizeOccur = false;\r\n                this._resizeEndHandler(e)\r\n            }.bind(this)\r\n        }\r\n    }\r\n    _calculateResizableArea(itemSetting, appointmentData) {\r\n        var area = this.$element().closest(\".dx-scrollable-content\");\r\n        return this.invoke(\"getResizableAppointmentArea\", {\r\n            coordinates: {\r\n                left: itemSetting.left,\r\n                top: 0,\r\n                groupIndex: itemSetting.groupIndex\r\n            },\r\n            allDay: itemSetting.allDay\r\n        }) || area\r\n    }\r\n    _resizeEndHandler(e) {\r\n        var $element = $(e.element);\r\n        var {\r\n            allDay: allDay,\r\n            info: info\r\n        } = $element.data(\"dxAppointmentSettings\");\r\n        var sourceAppointment = this._getItemData($element);\r\n        var dateRange = {};\r\n        if (allDay) {\r\n            dateRange = this.resizeAllDay(e)\r\n        } else {\r\n            var startDate = this._getEndResizeAppointmentStartDate(e, sourceAppointment, info.appointment);\r\n            var {\r\n                endDate: endDate\r\n            } = info.appointment;\r\n            dateRange = this._getDateRange(e, startDate, endDate)\r\n        }\r\n        this.updateResizedAppointment($element, dateRange, this.option(\"dataAccessors\"), this.option(\"timeZoneCalculator\"))\r\n    }\r\n    resizeAllDay(e) {\r\n        var $element = $(e.element);\r\n        var timeZoneCalculator = this.option(\"timeZoneCalculator\");\r\n        var dataAccessors = this.option(\"dataAccessors\");\r\n        return getAppointmentDateRange({\r\n            handles: e.handles,\r\n            appointmentSettings: $element.data(\"dxAppointmentSettings\"),\r\n            isVerticalViewDirection: this.option(\"isVerticalViewDirection\")(),\r\n            isVerticalGroupedWorkSpace: this.option(\"isVerticalGroupedWorkSpace\")(),\r\n            appointmentRect: getBoundingRect($element[0]),\r\n            parentAppointmentRect: getBoundingRect($element.parent()[0]),\r\n            viewDataProvider: this.option(\"getViewDataProvider\")(),\r\n            isDateAndTimeView: this.option(\"isDateAndTimeView\")(),\r\n            startDayHour: this.invoke(\"getStartDayHour\"),\r\n            endDayHour: this.invoke(\"getEndDayHour\"),\r\n            timeZoneCalculator: timeZoneCalculator,\r\n            dataAccessors: dataAccessors,\r\n            rtlEnabled: this.option(\"rtlEnabled\"),\r\n            DOMMetaData: this.option(\"getDOMElementsMetaData\")()\r\n        })\r\n    }\r\n    updateResizedAppointment($element, dateRange, dataAccessors, timeZoneCalculator) {\r\n        var sourceAppointment = this._getItemData($element);\r\n        var modifiedAppointmentAdapter = createAppointmentAdapter(sourceAppointment, dataAccessors, timeZoneCalculator).clone();\r\n        modifiedAppointmentAdapter.startDate = new Date(dateRange.startDate);\r\n        modifiedAppointmentAdapter.endDate = new Date(dateRange.endDate);\r\n        this.notifyObserver(\"updateAppointmentAfterResize\", {\r\n            target: sourceAppointment,\r\n            data: modifiedAppointmentAdapter.clone({\r\n                pathTimeZone: \"fromGrid\"\r\n            }).source(),\r\n            $appointment: $element\r\n        })\r\n    }\r\n    _getEndResizeAppointmentStartDate(e, rawAppointment, appointmentInfo) {\r\n        var timeZoneCalculator = this.option(\"timeZoneCalculator\");\r\n        var appointmentAdapter = createAppointmentAdapter(rawAppointment, this.option(\"dataAccessors\"), timeZoneCalculator);\r\n        var {\r\n            startDate: startDate\r\n        } = appointmentInfo;\r\n        var recurrenceProcessor = getRecurrenceProcessor();\r\n        var {\r\n            recurrenceRule: recurrenceRule,\r\n            startDateTimeZone: startDateTimeZone\r\n        } = appointmentAdapter;\r\n        var isAllDay = this.invoke(\"isAllDay\", rawAppointment);\r\n        var isRecurrent = recurrenceProcessor.isValidRecurrenceRule(recurrenceRule);\r\n        if (!e.handles.top && !isRecurrent && !isAllDay) {\r\n            startDate = timeZoneCalculator.createDate(appointmentAdapter.startDate, {\r\n                appointmentTimeZone: startDateTimeZone,\r\n                path: \"toGrid\"\r\n            })\r\n        }\r\n        return startDate\r\n    }\r\n    _getDateRange(e, startDate, endDate) {\r\n        var itemData = this._getItemData(e.element);\r\n        var deltaTime = this.invoke(\"getDeltaTime\", e, this._initialSize, itemData);\r\n        var renderingStrategyDirection = this.invoke(\"getRenderingStrategyDirection\");\r\n        var isStartDateChanged = false;\r\n        var isAllDay = this.invoke(\"isAllDay\", itemData);\r\n        var needCorrectDates = this.invoke(\"needCorrectAppointmentDates\") && !isAllDay;\r\n        var startTime;\r\n        var endTime;\r\n        if (\"vertical\" !== renderingStrategyDirection || isAllDay) {\r\n            isStartDateChanged = this.option(\"rtlEnabled\") ? e.handles.right : e.handles.left\r\n        } else {\r\n            isStartDateChanged = e.handles.top\r\n        }\r\n        if (isStartDateChanged) {\r\n            startTime = needCorrectDates ? this._correctStartDateByDelta(startDate, deltaTime) : startDate.getTime() - deltaTime;\r\n            startTime += timeZoneUtils.getTimezoneOffsetChangeInMs(startDate, endDate, startTime, endDate);\r\n            endTime = endDate.getTime()\r\n        } else {\r\n            startTime = startDate.getTime();\r\n            endTime = needCorrectDates ? this._correctEndDateByDelta(endDate, deltaTime) : endDate.getTime() + deltaTime;\r\n            endTime -= timeZoneUtils.getTimezoneOffsetChangeInMs(startDate, endDate, startDate, endTime)\r\n        }\r\n        return {\r\n            startDate: new Date(startTime),\r\n            endDate: new Date(endTime)\r\n        }\r\n    }\r\n    _correctEndDateByDelta(endDate, deltaTime) {\r\n        var endDayHour = this.invoke(\"getEndDayHour\");\r\n        var startDayHour = this.invoke(\"getStartDayHour\");\r\n        var result = endDate.getTime() + deltaTime;\r\n        var visibleDayDuration = (endDayHour - startDayHour) * toMs(\"hour\");\r\n        var daysCount = deltaTime > 0 ? Math.ceil(deltaTime / visibleDayDuration) : Math.floor(deltaTime / visibleDayDuration);\r\n        var maxDate = new Date(endDate);\r\n        var minDate = new Date(endDate);\r\n        minDate.setHours(startDayHour, 0, 0, 0);\r\n        maxDate.setHours(endDayHour, 0, 0, 0);\r\n        if (result > maxDate.getTime() || result <= minDate.getTime()) {\r\n            var tailOfCurrentDay = maxDate.getTime() - endDate.getTime();\r\n            var tailOfPrevDays = deltaTime - tailOfCurrentDay;\r\n            var correctedEndDate = new Date(endDate).setDate(endDate.getDate() + daysCount);\r\n            var lastDay = new Date(correctedEndDate);\r\n            lastDay.setHours(startDayHour, 0, 0, 0);\r\n            result = lastDay.getTime() + tailOfPrevDays - visibleDayDuration * (daysCount - 1)\r\n        }\r\n        return result\r\n    }\r\n    _correctStartDateByDelta(startDate, deltaTime) {\r\n        var endDayHour = this.invoke(\"getEndDayHour\");\r\n        var startDayHour = this.invoke(\"getStartDayHour\");\r\n        var result = startDate.getTime() - deltaTime;\r\n        var visibleDayDuration = (endDayHour - startDayHour) * toMs(\"hour\");\r\n        var daysCount = deltaTime > 0 ? Math.ceil(deltaTime / visibleDayDuration) : Math.floor(deltaTime / visibleDayDuration);\r\n        var maxDate = new Date(startDate);\r\n        var minDate = new Date(startDate);\r\n        minDate.setHours(startDayHour, 0, 0, 0);\r\n        maxDate.setHours(endDayHour, 0, 0, 0);\r\n        if (result < minDate.getTime() || result >= maxDate.getTime()) {\r\n            var tailOfCurrentDay = startDate.getTime() - minDate.getTime();\r\n            var tailOfPrevDays = deltaTime - tailOfCurrentDay;\r\n            var firstDay = new Date(startDate.setDate(startDate.getDate() - daysCount));\r\n            firstDay.setHours(endDayHour, 0, 0, 0);\r\n            result = firstDay.getTime() - tailOfPrevDays + visibleDayDuration * (daysCount - 1)\r\n        }\r\n        return result\r\n    }\r\n    _processVirtualAppointment(appointmentSetting, $appointment, appointmentData, color) {\r\n        var virtualAppointment = appointmentSetting.virtual;\r\n        var virtualGroupIndex = virtualAppointment.index;\r\n        if (!isDefined(this._virtualAppointments[virtualGroupIndex])) {\r\n            this._virtualAppointments[virtualGroupIndex] = {\r\n                coordinates: {\r\n                    top: virtualAppointment.top,\r\n                    left: virtualAppointment.left\r\n                },\r\n                items: {\r\n                    data: [],\r\n                    colors: [],\r\n                    settings: []\r\n                },\r\n                isAllDay: !!virtualAppointment.isAllDay,\r\n                buttonColor: color\r\n            }\r\n        }\r\n        appointmentSetting.targetedAppointmentData = this.invoke(\"getTargetedAppointmentData\", appointmentData, $appointment);\r\n        this._virtualAppointments[virtualGroupIndex].items.settings.push(appointmentSetting);\r\n        this._virtualAppointments[virtualGroupIndex].items.data.push(appointmentData);\r\n        this._virtualAppointments[virtualGroupIndex].items.colors.push(color);\r\n        $appointment.remove()\r\n    }\r\n    _renderContentImpl() {\r\n        super._renderContentImpl();\r\n        this._renderDropDownAppointments()\r\n    }\r\n    _renderDropDownAppointments() {\r\n        this._renderByFragments(($commonFragment, $allDayFragment) => {\r\n            each(this._virtualAppointments, groupIndex => {\r\n                var virtualGroup = this._virtualAppointments[groupIndex];\r\n                var virtualItems = virtualGroup.items;\r\n                var virtualCoordinates = virtualGroup.coordinates;\r\n                var $fragment = virtualGroup.isAllDay ? $allDayFragment : $commonFragment;\r\n                var {\r\n                    left: left\r\n                } = virtualCoordinates;\r\n                var buttonWidth = this.invoke(\"getDropDownAppointmentWidth\", virtualGroup.isAllDay);\r\n                var buttonHeight = this.invoke(\"getDropDownAppointmentHeight\");\r\n                var rtlOffset = this.option(\"rtlEnabled\") ? buttonWidth : 0;\r\n                this.notifyObserver(\"renderCompactAppointments\", {\r\n                    $container: $fragment,\r\n                    coordinates: {\r\n                        top: virtualCoordinates.top,\r\n                        left: left + rtlOffset\r\n                    },\r\n                    items: virtualItems,\r\n                    buttonColor: virtualGroup.buttonColor,\r\n                    width: buttonWidth - this.option(\"_collectorOffset\"),\r\n                    height: buttonHeight,\r\n                    onAppointmentClick: this.option(\"onItemClick\"),\r\n                    allowDrag: this.option(\"allowDrag\"),\r\n                    cellWidth: this.invoke(\"getCellWidth\"),\r\n                    isCompact: this.invoke(\"isAdaptive\") || this._isGroupCompact(virtualGroup)\r\n                })\r\n            })\r\n        })\r\n    }\r\n    _isGroupCompact(virtualGroup) {\r\n        return !virtualGroup.isAllDay && this.invoke(\"supportCompactDropDownAppointments\")\r\n    }\r\n    _sortAppointmentsByStartDate(appointments) {\r\n        return sortAppointmentsByStartDate(appointments, this.option(\"dataAccessors\"))\r\n    }\r\n    _processRecurrenceAppointment(appointment, index, skipLongAppointments) {\r\n        var recurrenceRule = ExpressionUtils.getField(this.option(\"dataAccessors\"), \"recurrenceRule\", appointment);\r\n        var result = {\r\n            parts: [],\r\n            indexes: []\r\n        };\r\n        if (recurrenceRule) {\r\n            var dates = appointment.settings || appointment;\r\n            var startDate = new Date(ExpressionUtils.getField(this.option(\"dataAccessors\"), \"startDate\", dates));\r\n            var startDateTimeZone = ExpressionUtils.getField(this.option(\"dataAccessors\"), \"startDateTimeZone\", appointment);\r\n            var endDate = new Date(ExpressionUtils.getField(this.option(\"dataAccessors\"), \"endDate\", dates));\r\n            var appointmentDuration = endDate.getTime() - startDate.getTime();\r\n            var recurrenceException = ExpressionUtils.getField(this.option(\"dataAccessors\"), \"recurrenceException\", appointment);\r\n            var startViewDate = this.invoke(\"getStartViewDate\");\r\n            var endViewDate = this.invoke(\"getEndViewDate\");\r\n            var timezoneCalculator = this.option(\"timeZoneCalculator\");\r\n            var recurrentDates = getRecurrenceProcessor().generateDates({\r\n                rule: recurrenceRule,\r\n                exception: recurrenceException,\r\n                start: startDate,\r\n                end: endDate,\r\n                min: startViewDate,\r\n                max: endViewDate,\r\n                appointmentTimezoneOffset: timezoneCalculator.getOriginStartDateOffsetInMs(startDate, startDateTimeZone, false)\r\n            });\r\n            var recurrentDateCount = appointment.settings ? 1 : recurrentDates.length;\r\n            for (var i = 0; i < recurrentDateCount; i++) {\r\n                var appointmentPart = extend({}, appointment, true);\r\n                if (recurrentDates[i]) {\r\n                    var appointmentSettings = this._applyStartDateToObj(recurrentDates[i], {});\r\n                    this._applyEndDateToObj(new Date(recurrentDates[i].getTime() + appointmentDuration), appointmentSettings);\r\n                    appointmentPart.settings = appointmentSettings\r\n                } else {\r\n                    appointmentPart.settings = dates\r\n                }\r\n                result.parts.push(appointmentPart);\r\n                if (!skipLongAppointments) {\r\n                    this._processLongAppointment(appointmentPart, result)\r\n                }\r\n            }\r\n            result.indexes.push(index)\r\n        }\r\n        return result\r\n    }\r\n    _processLongAppointment(appointment, result) {\r\n        var parts = this.splitAppointmentByDay(appointment);\r\n        var partCount = parts.length;\r\n        var endViewDate = this.invoke(\"getEndViewDate\").getTime();\r\n        var startViewDate = this.invoke(\"getStartViewDate\").getTime();\r\n        var timeZoneCalculator = this.option(\"timeZoneCalculator\");\r\n        result = result || {\r\n            parts: []\r\n        };\r\n        if (partCount > 1) {\r\n            extend(appointment, parts[0]);\r\n            for (var i = 1; i < partCount; i++) {\r\n                var startDate = ExpressionUtils.getField(this.option(\"dataAccessors\"), \"startDate\", parts[i].settings).getTime();\r\n                startDate = timeZoneCalculator.createDate(startDate, {\r\n                    path: \"toGrid\"\r\n                });\r\n                if (startDate < endViewDate && startDate > startViewDate) {\r\n                    result.parts.push(parts[i])\r\n                }\r\n            }\r\n        }\r\n        return result\r\n    }\r\n    _reduceRecurrenceAppointments(recurrenceIndexes, appointments) {\r\n        each(recurrenceIndexes, (i, index) => {\r\n            appointments.splice(index - i, 1)\r\n        })\r\n    }\r\n    _combineAppointments(appointments, additionalAppointments) {\r\n        if (additionalAppointments.length) {\r\n            appointments.push(...additionalAppointments)\r\n        }\r\n        this._sortAppointmentsByStartDate(appointments)\r\n    }\r\n    _applyStartDateToObj(startDate, obj) {\r\n        ExpressionUtils.setField(this.option(\"dataAccessors\"), \"startDate\", obj, startDate);\r\n        return obj\r\n    }\r\n    _applyEndDateToObj(endDate, obj) {\r\n        ExpressionUtils.setField(this.option(\"dataAccessors\"), \"endDate\", obj, endDate);\r\n        return obj\r\n    }\r\n    moveAppointmentBack(dragEvent) {\r\n        var $appointment = this._$currentAppointment;\r\n        var size = this._initialSize;\r\n        var coords = this._initialCoordinates;\r\n        if (dragEvent) {\r\n            this._removeDragSourceClassFromDraggedAppointment();\r\n            if (isDeferred(dragEvent.cancel)) {\r\n                dragEvent.cancel.resolve(true)\r\n            } else {\r\n                dragEvent.cancel = true\r\n            }\r\n        }\r\n        if ($appointment && !dragEvent) {\r\n            if (coords) {\r\n                move($appointment, coords);\r\n                delete this._initialSize\r\n            }\r\n            if (size) {\r\n                setOuterWidth($appointment, size.width);\r\n                setOuterHeight($appointment, size.height);\r\n                delete this._initialCoordinates\r\n            }\r\n        }\r\n    }\r\n    focus() {\r\n        if (this._$currentAppointment) {\r\n            var focusedElement = getPublicElement(this._$currentAppointment);\r\n            this.option(\"focusedElement\", focusedElement);\r\n            eventsEngine.trigger(focusedElement, \"focus\")\r\n        }\r\n    }\r\n    splitAppointmentByDay(appointment) {\r\n        var dates = appointment.settings || appointment;\r\n        var dataAccessors = this.option(\"dataAccessors\");\r\n        var originalStartDate = new Date(ExpressionUtils.getField(dataAccessors, \"startDate\", dates));\r\n        var startDate = dateUtils.makeDate(originalStartDate);\r\n        var endDate = dateUtils.makeDate(ExpressionUtils.getField(dataAccessors, \"endDate\", dates));\r\n        var maxAllowedDate = this.invoke(\"getEndViewDate\");\r\n        var startDayHour = this.invoke(\"getStartDayHour\");\r\n        var endDayHour = this.invoke(\"getEndDayHour\");\r\n        var timeZoneCalculator = this.option(\"timeZoneCalculator\");\r\n        var adapter = createAppointmentAdapter(appointment, dataAccessors, timeZoneCalculator);\r\n        var appointmentIsLong = getAppointmentTakesSeveralDays(adapter);\r\n        var result = [];\r\n        startDate = timeZoneCalculator.createDate(startDate, {\r\n            path: \"toGrid\"\r\n        });\r\n        endDate = timeZoneCalculator.createDate(endDate, {\r\n            path: \"toGrid\"\r\n        });\r\n        if (startDate.getHours() <= endDayHour && startDate.getHours() >= startDayHour && !appointmentIsLong) {\r\n            result.push(this._applyStartDateToObj(new Date(startDate), {\r\n                appointmentData: appointment\r\n            }));\r\n            startDate.setDate(startDate.getDate() + 1)\r\n        }\r\n        while (appointmentIsLong && startDate.getTime() < endDate.getTime() && startDate < maxAllowedDate) {\r\n            var currentStartDate = new Date(startDate);\r\n            var currentEndDate = new Date(startDate);\r\n            this._checkStartDate(currentStartDate, originalStartDate, startDayHour);\r\n            this._checkEndDate(currentEndDate, endDate, endDayHour);\r\n            var appointmentData = deepExtendArraySafe({}, appointment, true);\r\n            var appointmentSettings = {};\r\n            this._applyStartDateToObj(currentStartDate, appointmentSettings);\r\n            this._applyEndDateToObj(currentEndDate, appointmentSettings);\r\n            appointmentData.settings = appointmentSettings;\r\n            result.push(appointmentData);\r\n            startDate = dateUtils.trimTime(startDate);\r\n            startDate.setDate(startDate.getDate() + 1);\r\n            startDate.setHours(startDayHour)\r\n        }\r\n        return result\r\n    }\r\n    _checkStartDate(currentDate, originalDate, startDayHour) {\r\n        if (!dateUtils.sameDate(currentDate, originalDate) || currentDate.getHours() <= startDayHour) {\r\n            currentDate.setHours(startDayHour, 0, 0, 0)\r\n        } else {\r\n            currentDate.setHours(originalDate.getHours(), originalDate.getMinutes(), originalDate.getSeconds(), originalDate.getMilliseconds())\r\n        }\r\n    }\r\n    _checkEndDate(currentDate, originalDate, endDayHour) {\r\n        if (!dateUtils.sameDate(currentDate, originalDate) || currentDate.getHours() > endDayHour) {\r\n            currentDate.setHours(endDayHour, 0, 0, 0)\r\n        } else {\r\n            currentDate.setHours(originalDate.getHours(), originalDate.getMinutes(), originalDate.getSeconds(), originalDate.getMilliseconds())\r\n        }\r\n    }\r\n    _removeDragSourceClassFromDraggedAppointment() {\r\n        var $appointments = this._itemElements().filter(\".\".concat(APPOINTMENT_DRAG_SOURCE_CLASS));\r\n        $appointments.each((_, element) => {\r\n            var appointmentInstance = $(element).dxSchedulerAppointment(\"instance\");\r\n            appointmentInstance.option(\"isDragSource\", false)\r\n        })\r\n    }\r\n    _setDragSourceAppointment(appointment, settings) {\r\n        var $appointments = this._findItemElementByItem(appointment);\r\n        var {\r\n            startDate: startDate,\r\n            endDate: endDate\r\n        } = settings.info.sourceAppointment;\r\n        var {\r\n            groupIndex: groupIndex\r\n        } = settings;\r\n        $appointments.forEach($item => {\r\n            var {\r\n                info: itemInfo,\r\n                groupIndex: itemGroupIndex\r\n            } = $item.data(APPOINTMENT_SETTINGS_KEY);\r\n            var {\r\n                startDate: itemStartDate,\r\n                endDate: itemEndDate\r\n            } = itemInfo.sourceAppointment;\r\n            var appointmentInstance = $item.dxSchedulerAppointment(\"instance\");\r\n            var isDragSource = startDate.getTime() === itemStartDate.getTime() && endDate.getTime() === itemEndDate.getTime() && groupIndex === itemGroupIndex;\r\n            appointmentInstance.option(\"isDragSource\", isDragSource)\r\n        })\r\n    }\r\n    updateResizableArea() {\r\n        var $allResizableElements = this.$element().find(\".dx-scheduler-appointment.dx-resizable\");\r\n        var horizontalResizables = grep($allResizableElements, el => {\r\n            var $el = $(el);\r\n            var resizableInst = $el.dxResizable(\"instance\");\r\n            var {\r\n                area: area,\r\n                handles: handles\r\n            } = resizableInst.option();\r\n            return (\"right left\" === handles || \"left right\" === handles) && isPlainObject(area)\r\n        });\r\n        each(horizontalResizables, (_, el) => {\r\n            var $el = $(el);\r\n            var position = locate($el);\r\n            var appointmentData = this._getItemData($el);\r\n            var area = this._calculateResizableArea({\r\n                left: position.left\r\n            }, appointmentData);\r\n            $el.dxResizable(\"instance\").option(\"area\", area)\r\n        })\r\n    }\r\n}\r\nregisterComponent(\"dxSchedulerAppointments\", SchedulerAppointments);\r\nexport default SchedulerAppointments;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}