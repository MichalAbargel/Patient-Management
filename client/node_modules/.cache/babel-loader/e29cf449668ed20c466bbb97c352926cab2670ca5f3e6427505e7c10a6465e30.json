{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/scheduler/timeZoneCalculator/createTimeZoneCalculator.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { TimeZoneCalculator } from \"./utils\";\nimport timeZoneUtils from \"../../../../ui/scheduler/utils.timeZone\";\nexport var createTimeZoneCalculator = currentTimeZone => new TimeZoneCalculator({\n  getClientOffset: date => timeZoneUtils.getClientTimezoneOffset(date),\n  tryGetCommonOffset: date => timeZoneUtils.calculateTimezoneByValue(currentTimeZone, date),\n  tryGetAppointmentOffset: (date, appointmentTimezone) => timeZoneUtils.calculateTimezoneByValue(appointmentTimezone, date)\n});","map":{"version":3,"names":["TimeZoneCalculator","timeZoneUtils","createTimeZoneCalculator","currentTimeZone","getClientOffset","date","getClientTimezoneOffset","tryGetCommonOffset","calculateTimezoneByValue","tryGetAppointmentOffset","appointmentTimezone"],"sources":["C:/Users/Michal Abargel/Desktop/FULLSTACK_PROJECTS/PrivateLessones/PL/client/gui/node_modules/devextreme/esm/renovation/ui/scheduler/timeZoneCalculator/createTimeZoneCalculator.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/scheduler/timeZoneCalculator/createTimeZoneCalculator.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    TimeZoneCalculator\r\n} from \"./utils\";\r\nimport timeZoneUtils from \"../../../../ui/scheduler/utils.timeZone\";\r\nexport var createTimeZoneCalculator = currentTimeZone => new TimeZoneCalculator({\r\n    getClientOffset: date => timeZoneUtils.getClientTimezoneOffset(date),\r\n    tryGetCommonOffset: date => timeZoneUtils.calculateTimezoneByValue(currentTimeZone, date),\r\n    tryGetAppointmentOffset: (date, appointmentTimezone) => timeZoneUtils.calculateTimezoneByValue(appointmentTimezone, date)\r\n});\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,kBAAkB,QACf,SAAS;AAChB,OAAOC,aAAa,MAAM,yCAAyC;AACnE,OAAO,IAAIC,wBAAwB,GAAGC,eAAe,IAAI,IAAIH,kBAAkB,CAAC;EAC5EI,eAAe,EAAEC,IAAI,IAAIJ,aAAa,CAACK,uBAAuB,CAACD,IAAI,CAAC;EACpEE,kBAAkB,EAAEF,IAAI,IAAIJ,aAAa,CAACO,wBAAwB,CAACL,eAAe,EAAEE,IAAI,CAAC;EACzFI,uBAAuB,EAAEA,CAACJ,IAAI,EAAEK,mBAAmB,KAAKT,aAAa,CAACO,wBAAwB,CAACE,mBAAmB,EAAEL,IAAI;AAC5H,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}