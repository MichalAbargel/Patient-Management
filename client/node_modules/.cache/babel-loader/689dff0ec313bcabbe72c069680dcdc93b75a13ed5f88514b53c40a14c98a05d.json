{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/scheduler/appointment_popup/m_form.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport \"../../../ui/scheduler/recurrence_editor\";\nimport \"../../../ui/text_area\";\nimport \"../../../ui/tag_box\";\nimport \"../../../ui/switch\";\nimport \"../../../ui/select_box\";\nimport devices from \"../../../core/devices\";\nimport $ from \"../../../core/renderer\";\nimport dateUtils from \"../../../core/utils/date\";\nimport dateSerialization from \"../../../core/utils/date_serialization\";\nimport { extend } from \"../../../core/utils/extend\";\nimport DataSource from \"../../../data/data_source\";\nimport messageLocalization from \"../../../localization/message\";\nimport { Semaphore } from \"../../../renovation/ui/scheduler/utils/semaphore/semaphore\";\nimport Form from \"../../../ui/form\";\nimport { createAppointmentAdapter } from \"../../../ui/scheduler/appointmentAdapter\";\nimport timeZoneDataUtils from \"../timezones/m_utils_timezones_data\";\nvar SCREEN_SIZE_OF_SINGLE_COLUMN = 600;\nexport var APPOINTMENT_FORM_GROUP_NAMES = {\n  Main: \"mainGroup\",\n  Recurrence: \"recurrenceGroup\"\n};\nvar getStartDateWithStartHour = (startDate, startDayHour) => new Date(new Date(startDate).setHours(startDayHour));\nvar validateAppointmentFormDate = (editor, value, previousValue) => {\n  var isCurrentDateCorrect = null === value || !!value;\n  var isPreviousDateCorrect = null === previousValue || !!previousValue;\n  if (!isCurrentDateCorrect && isPreviousDateCorrect) {\n    editor.option(\"value\", previousValue);\n  }\n};\nvar updateRecurrenceItemVisibility = (recurrenceRuleExpr, value, form) => {\n  var _a;\n  form.itemOption(APPOINTMENT_FORM_GROUP_NAMES.Recurrence, \"visible\", value);\n  !value && form.updateData(recurrenceRuleExpr, \"\");\n  null === (_a = form.getEditor(recurrenceRuleExpr)) || void 0 === _a ? void 0 : _a.changeValueByVisibility(value);\n};\nvar createDateBoxEditor = (dataField, colSpan, firstDayOfWeek, label, onValueChanged) => ({\n  editorType: \"dxDateBox\",\n  dataField: dataField,\n  colSpan: colSpan,\n  label: {\n    text: messageLocalization.format(label)\n  },\n  validationRules: [{\n    type: \"required\"\n  }],\n  editorOptions: {\n    width: \"100%\",\n    calendarOptions: {\n      firstDayOfWeek: firstDayOfWeek\n    },\n    onValueChanged: onValueChanged,\n    useMaskBehavior: true\n  }\n});\nexport class AppointmentForm {\n  constructor(scheduler) {\n    this.scheduler = scheduler;\n    this.form = null;\n    this.semaphore = new Semaphore();\n  }\n  get dxForm() {\n    return this.form;\n  }\n  set readOnly(value) {\n    this.form.option(\"readOnly\", value);\n    var {\n      recurrenceRuleExpr: recurrenceRuleExpr\n    } = this.scheduler.getDataAccessors().expr;\n    var recurrenceEditor = this.form.getEditor(recurrenceRuleExpr);\n    null === recurrenceEditor || void 0 === recurrenceEditor ? void 0 : recurrenceEditor.option(\"readOnly\", value);\n  }\n  get formData() {\n    return this.form.option(\"formData\");\n  }\n  set formData(value) {\n    this.form.option(\"formData\", value);\n  }\n  create(triggerResize, changeSize, formData) {\n    var {\n      allowTimeZoneEditing: allowTimeZoneEditing\n    } = this.scheduler.getEditingConfig();\n    var {\n      expr: expr\n    } = this.scheduler.getDataAccessors();\n    var recurrenceEditorVisibility = !!formData[expr.recurrenceRuleExpr];\n    var colSpan = recurrenceEditorVisibility ? 1 : 2;\n    var mainItems = [...this._createMainItems(expr, triggerResize, changeSize, allowTimeZoneEditing), ...this.scheduler.createResourceEditorModel()];\n    changeSize(recurrenceEditorVisibility);\n    var items = [{\n      itemType: \"group\",\n      name: APPOINTMENT_FORM_GROUP_NAMES.Main,\n      colCountByScreen: {\n        lg: 2,\n        xs: 1\n      },\n      colSpan: colSpan,\n      items: mainItems\n    }, {\n      itemType: \"group\",\n      name: APPOINTMENT_FORM_GROUP_NAMES.Recurrence,\n      visible: recurrenceEditorVisibility,\n      colSpan: colSpan,\n      items: this._createRecurrenceEditor(expr)\n    }];\n    var element = $(\"<div>\");\n    this.form = this.scheduler.createComponent(element, Form, {\n      items: items,\n      showValidationSummary: true,\n      scrollingEnabled: true,\n      colCount: \"auto\",\n      colCountByScreen: {\n        lg: 2,\n        xs: 1\n      },\n      formData: formData,\n      showColonAfterLabel: false,\n      labelLocation: \"top\",\n      customizeItem: e => {\n        if (this.form && \"group\" === e.itemType) {\n          var dataExprs = this.scheduler.getDataAccessors().expr;\n          var startDate = new Date(this.formData[dataExprs.startDateExpr]);\n          var endDate = new Date(this.formData[dataExprs.endDateExpr]);\n          var startTimeZoneEditor = e.items.find(i => i.dataField === dataExprs.startDateTimeZoneExpr);\n          var endTimeZoneEditor = e.items.find(i => i.dataField === dataExprs.endDateTimeZoneExpr);\n          if (startTimeZoneEditor) {\n            startTimeZoneEditor.editorOptions.dataSource = this.createTimeZoneDataSource(startDate);\n          }\n          if (endTimeZoneEditor) {\n            endTimeZoneEditor.editorOptions.dataSource = this.createTimeZoneDataSource(endDate);\n          }\n        }\n      },\n      screenByWidth: width => width < SCREEN_SIZE_OF_SINGLE_COLUMN || \"desktop\" !== devices.current().deviceType ? \"xs\" : \"lg\"\n    });\n  }\n  createTimeZoneDataSource(date) {\n    return new DataSource({\n      store: timeZoneDataUtils.getDisplayedTimeZones(date),\n      paginate: true,\n      pageSize: 10\n    });\n  }\n  _createAppointmentAdapter(rawAppointment) {\n    return createAppointmentAdapter(rawAppointment, this.scheduler.getDataAccessors());\n  }\n  _dateBoxValueChanged(args, dateExpr, isNeedCorrect) {\n    validateAppointmentFormDate(args.component, args.value, args.previousValue);\n    var value = dateSerialization.deserializeDate(args.value);\n    var previousValue = dateSerialization.deserializeDate(args.previousValue);\n    var dateEditor = this.form.getEditor(dateExpr);\n    var dateValue = dateSerialization.deserializeDate(dateEditor.option(\"value\"));\n    if (this.semaphore.isFree() && dateValue && value && isNeedCorrect(dateValue, value)) {\n      var duration = previousValue ? dateValue.getTime() - previousValue.getTime() : 0;\n      dateEditor.option(\"value\", new Date(value.getTime() + duration));\n    }\n  }\n  _createTimezoneEditor(timeZoneExpr, secondTimeZoneExpr, visibleIndex, colSpan, isMainTimeZone) {\n    var visible = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : false;\n    var noTzTitle = messageLocalization.format(\"dxScheduler-noTimezoneTitle\");\n    return {\n      dataField: timeZoneExpr,\n      editorType: \"dxSelectBox\",\n      visibleIndex: visibleIndex,\n      colSpan: colSpan,\n      label: {\n        text: \" \"\n      },\n      editorOptions: {\n        displayExpr: \"title\",\n        valueExpr: \"id\",\n        placeholder: noTzTitle,\n        searchEnabled: true,\n        onValueChanged: args => {\n          var {\n            form: form\n          } = this;\n          var secondTimezoneEditor = form.getEditor(secondTimeZoneExpr);\n          if (isMainTimeZone) {\n            secondTimezoneEditor.option(\"value\", args.value);\n          }\n        }\n      },\n      visible: visible\n    };\n  }\n  _createDateBoxItems(dataExprs, allowTimeZoneEditing) {\n    var colSpan = allowTimeZoneEditing ? 2 : 1;\n    var firstDayOfWeek = this.scheduler.getFirstDayOfWeek();\n    return [createDateBoxEditor(dataExprs.startDateExpr, colSpan, firstDayOfWeek, \"dxScheduler-editorLabelStartDate\", args => {\n      this._dateBoxValueChanged(args, dataExprs.endDateExpr, (endValue, startValue) => endValue < startValue);\n    }), this._createTimezoneEditor(dataExprs.startDateTimeZoneExpr, dataExprs.endDateTimeZoneExpr, 1, colSpan, true, allowTimeZoneEditing), createDateBoxEditor(dataExprs.endDateExpr, colSpan, firstDayOfWeek, \"dxScheduler-editorLabelEndDate\", args => {\n      this._dateBoxValueChanged(args, dataExprs.startDateExpr, (startValue, endValue) => endValue < startValue);\n    }), this._createTimezoneEditor(dataExprs.endDateTimeZoneExpr, dataExprs.startDateTimeZoneExpr, 3, colSpan, false, allowTimeZoneEditing)];\n  }\n  _changeFormItemDateType(itemPath, isAllDay) {\n    var itemEditorOptions = this.form.itemOption(itemPath).editorOptions;\n    var type = isAllDay ? \"date\" : \"datetime\";\n    var newEditorOption = _extends(_extends({}, itemEditorOptions), {\n      type: type\n    });\n    this.form.itemOption(itemPath, \"editorOptions\", newEditorOption);\n  }\n  _createMainItems(dataExprs, triggerResize, changeSize, allowTimeZoneEditing) {\n    return [{\n      dataField: dataExprs.textExpr,\n      editorType: \"dxTextBox\",\n      colSpan: 2,\n      label: {\n        text: messageLocalization.format(\"dxScheduler-editorLabelTitle\")\n      }\n    }, {\n      itemType: \"group\",\n      colSpan: 2,\n      colCountByScreen: {\n        lg: 2,\n        xs: 1\n      },\n      items: this._createDateBoxItems(dataExprs, allowTimeZoneEditing)\n    }, {\n      itemType: \"group\",\n      colSpan: 2,\n      colCountByScreen: {\n        lg: 2,\n        xs: 2\n      },\n      items: [{\n        dataField: dataExprs.allDayExpr,\n        cssClass: \"dx-appointment-form-switch\",\n        editorType: \"dxSwitch\",\n        label: {\n          text: messageLocalization.format(\"dxScheduler-allDay\"),\n          location: \"right\"\n        },\n        editorOptions: {\n          onValueChanged: args => {\n            var {\n              value: value\n            } = args;\n            var startDateEditor = this.form.getEditor(dataExprs.startDateExpr);\n            var endDateEditor = this.form.getEditor(dataExprs.endDateExpr);\n            var startDate = dateSerialization.deserializeDate(startDateEditor.option(\"value\"));\n            if (this.semaphore.isFree() && startDate) {\n              if (value) {\n                var allDayStartDate = dateUtils.trimTime(startDate);\n                startDateEditor.option(\"value\", new Date(allDayStartDate));\n                endDateEditor.option(\"value\", new Date(allDayStartDate));\n              } else {\n                var startDateWithStartHour = getStartDateWithStartHour(startDate, this.scheduler.getStartDayHour());\n                var endDate = this.scheduler.getCalculatedEndDate(startDateWithStartHour);\n                startDateEditor.option(\"value\", startDateWithStartHour);\n                endDateEditor.option(\"value\", endDate);\n              }\n            }\n            var startDateItemPath = \"\".concat(APPOINTMENT_FORM_GROUP_NAMES.Main, \".\").concat(dataExprs.startDateExpr);\n            var endDateItemPath = \"\".concat(APPOINTMENT_FORM_GROUP_NAMES.Main, \".\").concat(dataExprs.endDateExpr);\n            this._changeFormItemDateType(startDateItemPath, value);\n            this._changeFormItemDateType(endDateItemPath, value);\n          }\n        }\n      }, {\n        editorType: \"dxSwitch\",\n        dataField: \"repeat\",\n        cssClass: \"dx-appointment-form-switch\",\n        name: \"visibilityChanged\",\n        label: {\n          text: messageLocalization.format(\"dxScheduler-editorLabelRecurrence\"),\n          location: \"right\"\n        },\n        editorOptions: {\n          onValueChanged: args => {\n            var {\n              form: form\n            } = this;\n            var colSpan = args.value ? 1 : 2;\n            form.itemOption(APPOINTMENT_FORM_GROUP_NAMES.Main, \"colSpan\", colSpan);\n            form.itemOption(APPOINTMENT_FORM_GROUP_NAMES.Recurrence, \"colSpan\", colSpan);\n            updateRecurrenceItemVisibility(dataExprs.recurrenceRuleExpr, args.value, form);\n            changeSize(args.value);\n            triggerResize();\n          }\n        }\n      }]\n    }, {\n      itemType: \"empty\",\n      colSpan: 2\n    }, {\n      dataField: dataExprs.descriptionExpr,\n      editorType: \"dxTextArea\",\n      colSpan: 2,\n      label: {\n        text: messageLocalization.format(\"dxScheduler-editorLabelDescription\")\n      }\n    }, {\n      itemType: \"empty\",\n      colSpan: 2\n    }];\n  }\n  _createRecurrenceEditor(dataExprs) {\n    return [{\n      dataField: dataExprs.recurrenceRuleExpr,\n      editorType: \"dxRecurrenceEditor\",\n      editorOptions: {\n        firstDayOfWeek: this.scheduler.getFirstDayOfWeek(),\n        timeZoneCalculator: this.scheduler.getTimeZoneCalculator(),\n        getStartDateTimeZone: () => this._createAppointmentAdapter(this.formData).startDateTimeZone\n      },\n      label: {\n        text: \" \",\n        visible: false\n      }\n    }];\n  }\n  setEditorsType(allDay) {\n    var {\n      startDateExpr: startDateExpr,\n      endDateExpr: endDateExpr\n    } = this.scheduler.getDataAccessors().expr;\n    var startDateItemPath = \"\".concat(APPOINTMENT_FORM_GROUP_NAMES.Main, \".\").concat(startDateExpr);\n    var endDateItemPath = \"\".concat(APPOINTMENT_FORM_GROUP_NAMES.Main, \".\").concat(endDateExpr);\n    var startDateFormItem = this.form.itemOption(startDateItemPath);\n    var endDateFormItem = this.form.itemOption(endDateItemPath);\n    if (startDateFormItem && endDateFormItem) {\n      var startDateEditorOptions = startDateFormItem.editorOptions;\n      var endDateEditorOptions = endDateFormItem.editorOptions;\n      startDateEditorOptions.type = endDateEditorOptions.type = allDay ? \"date\" : \"datetime\";\n      this.form.itemOption(startDateItemPath, \"editorOptions\", startDateEditorOptions);\n      this.form.itemOption(endDateItemPath, \"editorOptions\", endDateEditorOptions);\n    }\n  }\n  updateRecurrenceEditorStartDate(date, expression) {\n    var options = {\n      startDate: date\n    };\n    this.setEditorOptions(expression, \"Recurrence\", options);\n  }\n  setEditorOptions(name, groupName, options) {\n    var editorPath = \"\".concat(APPOINTMENT_FORM_GROUP_NAMES[groupName], \".\").concat(name);\n    var editor = this.form.itemOption(editorPath);\n    editor && this.form.itemOption(editorPath, \"editorOptions\", extend({}, editor.editorOptions, options));\n  }\n  setTimeZoneEditorDataSource(date, path) {\n    var dataSource = this.createTimeZoneDataSource(date);\n    this.setEditorOptions(path, \"Main\", {\n      dataSource: dataSource\n    });\n  }\n  updateFormData(formData) {\n    this.semaphore.take();\n    this.form.option(\"formData\", formData);\n    var dataExprs = this.scheduler.getDataAccessors().expr;\n    var allDay = formData[dataExprs.allDayExpr];\n    var startDate = new Date(formData[dataExprs.startDateExpr]);\n    var endDate = new Date(formData[dataExprs.endDateExpr]);\n    this.setTimeZoneEditorDataSource(startDate, dataExprs.startDateTimeZoneExpr);\n    this.setTimeZoneEditorDataSource(endDate, dataExprs.endDateTimeZoneExpr);\n    this.updateRecurrenceEditorStartDate(startDate, dataExprs.recurrenceRuleExpr);\n    this.setEditorsType(allDay);\n    this.semaphore.release();\n  }\n}","map":{"version":3,"names":["_extends","devices","$","dateUtils","dateSerialization","extend","DataSource","messageLocalization","Semaphore","Form","createAppointmentAdapter","timeZoneDataUtils","SCREEN_SIZE_OF_SINGLE_COLUMN","APPOINTMENT_FORM_GROUP_NAMES","Main","Recurrence","getStartDateWithStartHour","startDate","startDayHour","Date","setHours","validateAppointmentFormDate","editor","value","previousValue","isCurrentDateCorrect","isPreviousDateCorrect","option","updateRecurrenceItemVisibility","recurrenceRuleExpr","form","_a","itemOption","updateData","getEditor","changeValueByVisibility","createDateBoxEditor","dataField","colSpan","firstDayOfWeek","label","onValueChanged","editorType","text","format","validationRules","type","editorOptions","width","calendarOptions","useMaskBehavior","AppointmentForm","constructor","scheduler","semaphore","dxForm","readOnly","getDataAccessors","expr","recurrenceEditor","formData","create","triggerResize","changeSize","allowTimeZoneEditing","getEditingConfig","recurrenceEditorVisibility","mainItems","_createMainItems","createResourceEditorModel","items","itemType","name","colCountByScreen","lg","xs","visible","_createRecurrenceEditor","element","createComponent","showValidationSummary","scrollingEnabled","colCount","showColonAfterLabel","labelLocation","customizeItem","e","dataExprs","startDateExpr","endDate","endDateExpr","startTimeZoneEditor","find","i","startDateTimeZoneExpr","endTimeZoneEditor","endDateTimeZoneExpr","dataSource","createTimeZoneDataSource","screenByWidth","current","deviceType","date","store","getDisplayedTimeZones","paginate","pageSize","_createAppointmentAdapter","rawAppointment","_dateBoxValueChanged","args","dateExpr","isNeedCorrect","component","deserializeDate","dateEditor","dateValue","isFree","duration","getTime","_createTimezoneEditor","timeZoneExpr","secondTimeZoneExpr","visibleIndex","isMainTimeZone","arguments","length","noTzTitle","displayExpr","valueExpr","placeholder","searchEnabled","secondTimezoneEditor","_createDateBoxItems","getFirstDayOfWeek","endValue","startValue","_changeFormItemDateType","itemPath","isAllDay","itemEditorOptions","newEditorOption","textExpr","allDayExpr","cssClass","location","startDateEditor","endDateEditor","allDayStartDate","trimTime","startDateWithStartHour","getStartDayHour","getCalculatedEndDate","startDateItemPath","concat","endDateItemPath","descriptionExpr","timeZoneCalculator","getTimeZoneCalculator","getStartDateTimeZone","startDateTimeZone","setEditorsType","allDay","startDateFormItem","endDateFormItem","startDateEditorOptions","endDateEditorOptions","updateRecurrenceEditorStartDate","expression","options","setEditorOptions","groupName","editorPath","setTimeZoneEditorDataSource","path","updateFormData","take","release"],"sources":["C:/Users/Michal Abargel/Desktop/FULLSTACK_PROJECTS/PrivateLessones/F(x)/client/gui/node_modules/devextreme/esm/__internal/scheduler/appointment_popup/m_form.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/scheduler/appointment_popup/m_form.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport \"../../../ui/scheduler/recurrence_editor\";\r\nimport \"../../../ui/text_area\";\r\nimport \"../../../ui/tag_box\";\r\nimport \"../../../ui/switch\";\r\nimport \"../../../ui/select_box\";\r\nimport devices from \"../../../core/devices\";\r\nimport $ from \"../../../core/renderer\";\r\nimport dateUtils from \"../../../core/utils/date\";\r\nimport dateSerialization from \"../../../core/utils/date_serialization\";\r\nimport {\r\n    extend\r\n} from \"../../../core/utils/extend\";\r\nimport DataSource from \"../../../data/data_source\";\r\nimport messageLocalization from \"../../../localization/message\";\r\nimport {\r\n    Semaphore\r\n} from \"../../../renovation/ui/scheduler/utils/semaphore/semaphore\";\r\nimport Form from \"../../../ui/form\";\r\nimport {\r\n    createAppointmentAdapter\r\n} from \"../../../ui/scheduler/appointmentAdapter\";\r\nimport timeZoneDataUtils from \"../timezones/m_utils_timezones_data\";\r\nvar SCREEN_SIZE_OF_SINGLE_COLUMN = 600;\r\nexport var APPOINTMENT_FORM_GROUP_NAMES = {\r\n    Main: \"mainGroup\",\r\n    Recurrence: \"recurrenceGroup\"\r\n};\r\nvar getStartDateWithStartHour = (startDate, startDayHour) => new Date(new Date(startDate).setHours(startDayHour));\r\nvar validateAppointmentFormDate = (editor, value, previousValue) => {\r\n    var isCurrentDateCorrect = null === value || !!value;\r\n    var isPreviousDateCorrect = null === previousValue || !!previousValue;\r\n    if (!isCurrentDateCorrect && isPreviousDateCorrect) {\r\n        editor.option(\"value\", previousValue)\r\n    }\r\n};\r\nvar updateRecurrenceItemVisibility = (recurrenceRuleExpr, value, form) => {\r\n    var _a;\r\n    form.itemOption(APPOINTMENT_FORM_GROUP_NAMES.Recurrence, \"visible\", value);\r\n    !value && form.updateData(recurrenceRuleExpr, \"\");\r\n    null === (_a = form.getEditor(recurrenceRuleExpr)) || void 0 === _a ? void 0 : _a.changeValueByVisibility(value)\r\n};\r\nvar createDateBoxEditor = (dataField, colSpan, firstDayOfWeek, label, onValueChanged) => ({\r\n    editorType: \"dxDateBox\",\r\n    dataField: dataField,\r\n    colSpan: colSpan,\r\n    label: {\r\n        text: messageLocalization.format(label)\r\n    },\r\n    validationRules: [{\r\n        type: \"required\"\r\n    }],\r\n    editorOptions: {\r\n        width: \"100%\",\r\n        calendarOptions: {\r\n            firstDayOfWeek: firstDayOfWeek\r\n        },\r\n        onValueChanged: onValueChanged,\r\n        useMaskBehavior: true\r\n    }\r\n});\r\nexport class AppointmentForm {\r\n    constructor(scheduler) {\r\n        this.scheduler = scheduler;\r\n        this.form = null;\r\n        this.semaphore = new Semaphore\r\n    }\r\n    get dxForm() {\r\n        return this.form\r\n    }\r\n    set readOnly(value) {\r\n        this.form.option(\"readOnly\", value);\r\n        var {\r\n            recurrenceRuleExpr: recurrenceRuleExpr\r\n        } = this.scheduler.getDataAccessors().expr;\r\n        var recurrenceEditor = this.form.getEditor(recurrenceRuleExpr);\r\n        null === recurrenceEditor || void 0 === recurrenceEditor ? void 0 : recurrenceEditor.option(\"readOnly\", value)\r\n    }\r\n    get formData() {\r\n        return this.form.option(\"formData\")\r\n    }\r\n    set formData(value) {\r\n        this.form.option(\"formData\", value)\r\n    }\r\n    create(triggerResize, changeSize, formData) {\r\n        var {\r\n            allowTimeZoneEditing: allowTimeZoneEditing\r\n        } = this.scheduler.getEditingConfig();\r\n        var {\r\n            expr: expr\r\n        } = this.scheduler.getDataAccessors();\r\n        var recurrenceEditorVisibility = !!formData[expr.recurrenceRuleExpr];\r\n        var colSpan = recurrenceEditorVisibility ? 1 : 2;\r\n        var mainItems = [...this._createMainItems(expr, triggerResize, changeSize, allowTimeZoneEditing), ...this.scheduler.createResourceEditorModel()];\r\n        changeSize(recurrenceEditorVisibility);\r\n        var items = [{\r\n            itemType: \"group\",\r\n            name: APPOINTMENT_FORM_GROUP_NAMES.Main,\r\n            colCountByScreen: {\r\n                lg: 2,\r\n                xs: 1\r\n            },\r\n            colSpan: colSpan,\r\n            items: mainItems\r\n        }, {\r\n            itemType: \"group\",\r\n            name: APPOINTMENT_FORM_GROUP_NAMES.Recurrence,\r\n            visible: recurrenceEditorVisibility,\r\n            colSpan: colSpan,\r\n            items: this._createRecurrenceEditor(expr)\r\n        }];\r\n        var element = $(\"<div>\");\r\n        this.form = this.scheduler.createComponent(element, Form, {\r\n            items: items,\r\n            showValidationSummary: true,\r\n            scrollingEnabled: true,\r\n            colCount: \"auto\",\r\n            colCountByScreen: {\r\n                lg: 2,\r\n                xs: 1\r\n            },\r\n            formData: formData,\r\n            showColonAfterLabel: false,\r\n            labelLocation: \"top\",\r\n            customizeItem: e => {\r\n                if (this.form && \"group\" === e.itemType) {\r\n                    var dataExprs = this.scheduler.getDataAccessors().expr;\r\n                    var startDate = new Date(this.formData[dataExprs.startDateExpr]);\r\n                    var endDate = new Date(this.formData[dataExprs.endDateExpr]);\r\n                    var startTimeZoneEditor = e.items.find(i => i.dataField === dataExprs.startDateTimeZoneExpr);\r\n                    var endTimeZoneEditor = e.items.find(i => i.dataField === dataExprs.endDateTimeZoneExpr);\r\n                    if (startTimeZoneEditor) {\r\n                        startTimeZoneEditor.editorOptions.dataSource = this.createTimeZoneDataSource(startDate)\r\n                    }\r\n                    if (endTimeZoneEditor) {\r\n                        endTimeZoneEditor.editorOptions.dataSource = this.createTimeZoneDataSource(endDate)\r\n                    }\r\n                }\r\n            },\r\n            screenByWidth: width => width < SCREEN_SIZE_OF_SINGLE_COLUMN || \"desktop\" !== devices.current().deviceType ? \"xs\" : \"lg\"\r\n        })\r\n    }\r\n    createTimeZoneDataSource(date) {\r\n        return new DataSource({\r\n            store: timeZoneDataUtils.getDisplayedTimeZones(date),\r\n            paginate: true,\r\n            pageSize: 10\r\n        })\r\n    }\r\n    _createAppointmentAdapter(rawAppointment) {\r\n        return createAppointmentAdapter(rawAppointment, this.scheduler.getDataAccessors())\r\n    }\r\n    _dateBoxValueChanged(args, dateExpr, isNeedCorrect) {\r\n        validateAppointmentFormDate(args.component, args.value, args.previousValue);\r\n        var value = dateSerialization.deserializeDate(args.value);\r\n        var previousValue = dateSerialization.deserializeDate(args.previousValue);\r\n        var dateEditor = this.form.getEditor(dateExpr);\r\n        var dateValue = dateSerialization.deserializeDate(dateEditor.option(\"value\"));\r\n        if (this.semaphore.isFree() && dateValue && value && isNeedCorrect(dateValue, value)) {\r\n            var duration = previousValue ? dateValue.getTime() - previousValue.getTime() : 0;\r\n            dateEditor.option(\"value\", new Date(value.getTime() + duration))\r\n        }\r\n    }\r\n    _createTimezoneEditor(timeZoneExpr, secondTimeZoneExpr, visibleIndex, colSpan, isMainTimeZone) {\r\n        var visible = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : false;\r\n        var noTzTitle = messageLocalization.format(\"dxScheduler-noTimezoneTitle\");\r\n        return {\r\n            dataField: timeZoneExpr,\r\n            editorType: \"dxSelectBox\",\r\n            visibleIndex: visibleIndex,\r\n            colSpan: colSpan,\r\n            label: {\r\n                text: \" \"\r\n            },\r\n            editorOptions: {\r\n                displayExpr: \"title\",\r\n                valueExpr: \"id\",\r\n                placeholder: noTzTitle,\r\n                searchEnabled: true,\r\n                onValueChanged: args => {\r\n                    var {\r\n                        form: form\r\n                    } = this;\r\n                    var secondTimezoneEditor = form.getEditor(secondTimeZoneExpr);\r\n                    if (isMainTimeZone) {\r\n                        secondTimezoneEditor.option(\"value\", args.value)\r\n                    }\r\n                }\r\n            },\r\n            visible: visible\r\n        }\r\n    }\r\n    _createDateBoxItems(dataExprs, allowTimeZoneEditing) {\r\n        var colSpan = allowTimeZoneEditing ? 2 : 1;\r\n        var firstDayOfWeek = this.scheduler.getFirstDayOfWeek();\r\n        return [createDateBoxEditor(dataExprs.startDateExpr, colSpan, firstDayOfWeek, \"dxScheduler-editorLabelStartDate\", args => {\r\n            this._dateBoxValueChanged(args, dataExprs.endDateExpr, (endValue, startValue) => endValue < startValue)\r\n        }), this._createTimezoneEditor(dataExprs.startDateTimeZoneExpr, dataExprs.endDateTimeZoneExpr, 1, colSpan, true, allowTimeZoneEditing), createDateBoxEditor(dataExprs.endDateExpr, colSpan, firstDayOfWeek, \"dxScheduler-editorLabelEndDate\", args => {\r\n            this._dateBoxValueChanged(args, dataExprs.startDateExpr, (startValue, endValue) => endValue < startValue)\r\n        }), this._createTimezoneEditor(dataExprs.endDateTimeZoneExpr, dataExprs.startDateTimeZoneExpr, 3, colSpan, false, allowTimeZoneEditing)]\r\n    }\r\n    _changeFormItemDateType(itemPath, isAllDay) {\r\n        var itemEditorOptions = this.form.itemOption(itemPath).editorOptions;\r\n        var type = isAllDay ? \"date\" : \"datetime\";\r\n        var newEditorOption = _extends(_extends({}, itemEditorOptions), {\r\n            type: type\r\n        });\r\n        this.form.itemOption(itemPath, \"editorOptions\", newEditorOption)\r\n    }\r\n    _createMainItems(dataExprs, triggerResize, changeSize, allowTimeZoneEditing) {\r\n        return [{\r\n            dataField: dataExprs.textExpr,\r\n            editorType: \"dxTextBox\",\r\n            colSpan: 2,\r\n            label: {\r\n                text: messageLocalization.format(\"dxScheduler-editorLabelTitle\")\r\n            }\r\n        }, {\r\n            itemType: \"group\",\r\n            colSpan: 2,\r\n            colCountByScreen: {\r\n                lg: 2,\r\n                xs: 1\r\n            },\r\n            items: this._createDateBoxItems(dataExprs, allowTimeZoneEditing)\r\n        }, {\r\n            itemType: \"group\",\r\n            colSpan: 2,\r\n            colCountByScreen: {\r\n                lg: 2,\r\n                xs: 2\r\n            },\r\n            items: [{\r\n                dataField: dataExprs.allDayExpr,\r\n                cssClass: \"dx-appointment-form-switch\",\r\n                editorType: \"dxSwitch\",\r\n                label: {\r\n                    text: messageLocalization.format(\"dxScheduler-allDay\"),\r\n                    location: \"right\"\r\n                },\r\n                editorOptions: {\r\n                    onValueChanged: args => {\r\n                        var {\r\n                            value: value\r\n                        } = args;\r\n                        var startDateEditor = this.form.getEditor(dataExprs.startDateExpr);\r\n                        var endDateEditor = this.form.getEditor(dataExprs.endDateExpr);\r\n                        var startDate = dateSerialization.deserializeDate(startDateEditor.option(\"value\"));\r\n                        if (this.semaphore.isFree() && startDate) {\r\n                            if (value) {\r\n                                var allDayStartDate = dateUtils.trimTime(startDate);\r\n                                startDateEditor.option(\"value\", new Date(allDayStartDate));\r\n                                endDateEditor.option(\"value\", new Date(allDayStartDate))\r\n                            } else {\r\n                                var startDateWithStartHour = getStartDateWithStartHour(startDate, this.scheduler.getStartDayHour());\r\n                                var endDate = this.scheduler.getCalculatedEndDate(startDateWithStartHour);\r\n                                startDateEditor.option(\"value\", startDateWithStartHour);\r\n                                endDateEditor.option(\"value\", endDate)\r\n                            }\r\n                        }\r\n                        var startDateItemPath = \"\".concat(APPOINTMENT_FORM_GROUP_NAMES.Main, \".\").concat(dataExprs.startDateExpr);\r\n                        var endDateItemPath = \"\".concat(APPOINTMENT_FORM_GROUP_NAMES.Main, \".\").concat(dataExprs.endDateExpr);\r\n                        this._changeFormItemDateType(startDateItemPath, value);\r\n                        this._changeFormItemDateType(endDateItemPath, value)\r\n                    }\r\n                }\r\n            }, {\r\n                editorType: \"dxSwitch\",\r\n                dataField: \"repeat\",\r\n                cssClass: \"dx-appointment-form-switch\",\r\n                name: \"visibilityChanged\",\r\n                label: {\r\n                    text: messageLocalization.format(\"dxScheduler-editorLabelRecurrence\"),\r\n                    location: \"right\"\r\n                },\r\n                editorOptions: {\r\n                    onValueChanged: args => {\r\n                        var {\r\n                            form: form\r\n                        } = this;\r\n                        var colSpan = args.value ? 1 : 2;\r\n                        form.itemOption(APPOINTMENT_FORM_GROUP_NAMES.Main, \"colSpan\", colSpan);\r\n                        form.itemOption(APPOINTMENT_FORM_GROUP_NAMES.Recurrence, \"colSpan\", colSpan);\r\n                        updateRecurrenceItemVisibility(dataExprs.recurrenceRuleExpr, args.value, form);\r\n                        changeSize(args.value);\r\n                        triggerResize()\r\n                    }\r\n                }\r\n            }]\r\n        }, {\r\n            itemType: \"empty\",\r\n            colSpan: 2\r\n        }, {\r\n            dataField: dataExprs.descriptionExpr,\r\n            editorType: \"dxTextArea\",\r\n            colSpan: 2,\r\n            label: {\r\n                text: messageLocalization.format(\"dxScheduler-editorLabelDescription\")\r\n            }\r\n        }, {\r\n            itemType: \"empty\",\r\n            colSpan: 2\r\n        }]\r\n    }\r\n    _createRecurrenceEditor(dataExprs) {\r\n        return [{\r\n            dataField: dataExprs.recurrenceRuleExpr,\r\n            editorType: \"dxRecurrenceEditor\",\r\n            editorOptions: {\r\n                firstDayOfWeek: this.scheduler.getFirstDayOfWeek(),\r\n                timeZoneCalculator: this.scheduler.getTimeZoneCalculator(),\r\n                getStartDateTimeZone: () => this._createAppointmentAdapter(this.formData).startDateTimeZone\r\n            },\r\n            label: {\r\n                text: \" \",\r\n                visible: false\r\n            }\r\n        }]\r\n    }\r\n    setEditorsType(allDay) {\r\n        var {\r\n            startDateExpr: startDateExpr,\r\n            endDateExpr: endDateExpr\r\n        } = this.scheduler.getDataAccessors().expr;\r\n        var startDateItemPath = \"\".concat(APPOINTMENT_FORM_GROUP_NAMES.Main, \".\").concat(startDateExpr);\r\n        var endDateItemPath = \"\".concat(APPOINTMENT_FORM_GROUP_NAMES.Main, \".\").concat(endDateExpr);\r\n        var startDateFormItem = this.form.itemOption(startDateItemPath);\r\n        var endDateFormItem = this.form.itemOption(endDateItemPath);\r\n        if (startDateFormItem && endDateFormItem) {\r\n            var startDateEditorOptions = startDateFormItem.editorOptions;\r\n            var endDateEditorOptions = endDateFormItem.editorOptions;\r\n            startDateEditorOptions.type = endDateEditorOptions.type = allDay ? \"date\" : \"datetime\";\r\n            this.form.itemOption(startDateItemPath, \"editorOptions\", startDateEditorOptions);\r\n            this.form.itemOption(endDateItemPath, \"editorOptions\", endDateEditorOptions)\r\n        }\r\n    }\r\n    updateRecurrenceEditorStartDate(date, expression) {\r\n        var options = {\r\n            startDate: date\r\n        };\r\n        this.setEditorOptions(expression, \"Recurrence\", options)\r\n    }\r\n    setEditorOptions(name, groupName, options) {\r\n        var editorPath = \"\".concat(APPOINTMENT_FORM_GROUP_NAMES[groupName], \".\").concat(name);\r\n        var editor = this.form.itemOption(editorPath);\r\n        editor && this.form.itemOption(editorPath, \"editorOptions\", extend({}, editor.editorOptions, options))\r\n    }\r\n    setTimeZoneEditorDataSource(date, path) {\r\n        var dataSource = this.createTimeZoneDataSource(date);\r\n        this.setEditorOptions(path, \"Main\", {\r\n            dataSource: dataSource\r\n        })\r\n    }\r\n    updateFormData(formData) {\r\n        this.semaphore.take();\r\n        this.form.option(\"formData\", formData);\r\n        var dataExprs = this.scheduler.getDataAccessors().expr;\r\n        var allDay = formData[dataExprs.allDayExpr];\r\n        var startDate = new Date(formData[dataExprs.startDateExpr]);\r\n        var endDate = new Date(formData[dataExprs.endDateExpr]);\r\n        this.setTimeZoneEditorDataSource(startDate, dataExprs.startDateTimeZoneExpr);\r\n        this.setTimeZoneEditorDataSource(endDate, dataExprs.endDateTimeZoneExpr);\r\n        this.updateRecurrenceEditorStartDate(startDate, dataExprs.recurrenceRuleExpr);\r\n        this.setEditorsType(allDay);\r\n        this.semaphore.release()\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}