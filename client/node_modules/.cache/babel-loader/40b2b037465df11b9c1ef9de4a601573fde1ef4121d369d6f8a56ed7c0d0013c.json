{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/m_draggable.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport positionUtils from \"../animation/position\";\nimport { locate, move } from \"../animation/translator\";\nimport registerComponent from \"../core/component_registrator\";\nimport domAdapter from \"../core/dom_adapter\";\nimport DOMComponent from \"../core/dom_component\";\nimport { getPublicElement } from \"../core/element\";\nimport $ from \"../core/renderer\";\nimport { EmptyTemplate } from \"../core/templates/empty_template\";\nimport { noop, splitPair } from \"../core/utils/common\";\nimport { Deferred, fromPromise, when } from \"../core/utils/deferred\";\nimport { extend } from \"../core/utils/extend\";\nimport { dasherize } from \"../core/utils/inflector\";\nimport { getBoundingRect } from \"../core/utils/position\";\nimport { getHeight, getOuterHeight, getOuterWidth, getWidth } from \"../core/utils/size\";\nimport { quadToObject } from \"../core/utils/string\";\nimport { isFunction, isNumeric, isObject } from \"../core/utils/type\";\nimport { value as viewPort } from \"../core/utils/view_port\";\nimport { getWindow } from \"../core/utils/window\";\nimport eventsEngine from \"../events/core/events_engine\";\nimport { end as dragEventEnd, enter as dragEventEnter, leave as dragEventLeave, move as dragEventMove, start as dragEventStart } from \"../events/drag\";\nimport pointerEvents from \"../events/pointer\";\nimport { addNamespace, needSkipEvent } from \"../events/utils/index\";\nimport Animator from \"../ui/scroll_view/animator\";\nvar window = getWindow();\nvar KEYDOWN_EVENT = \"keydown\";\nvar DRAGGABLE = \"dxDraggable\";\nvar DRAGSTART_EVENT_NAME = addNamespace(dragEventStart, DRAGGABLE);\nvar DRAG_EVENT_NAME = addNamespace(dragEventMove, DRAGGABLE);\nvar DRAGEND_EVENT_NAME = addNamespace(dragEventEnd, DRAGGABLE);\nvar DRAG_ENTER_EVENT_NAME = addNamespace(dragEventEnter, DRAGGABLE);\nvar DRAGEND_LEAVE_EVENT_NAME = addNamespace(dragEventLeave, DRAGGABLE);\nvar POINTERDOWN_EVENT_NAME = addNamespace(pointerEvents.down, DRAGGABLE);\nvar KEYDOWN_EVENT_NAME = addNamespace(KEYDOWN_EVENT, DRAGGABLE);\nvar CLONE_CLASS = \"clone\";\nvar targetDraggable;\nvar sourceDraggable;\nvar ANONYMOUS_TEMPLATE_NAME = \"content\";\nvar getMousePosition = event => ({\n  x: event.pageX - $(window).scrollLeft(),\n  y: event.pageY - $(window).scrollTop()\n});\nvar GESTURE_COVER_CLASS = \"dx-gesture-cover\";\nvar OVERLAY_WRAPPER_CLASS = \"dx-overlay-wrapper\";\nvar OVERLAY_CONTENT_CLASS = \"dx-overlay-content\";\nclass ScrollHelper {\n  constructor(orientation, component) {\n    this._$scrollableAtPointer = null;\n    this._preventScroll = true;\n    this._component = component;\n    if (\"vertical\" === orientation) {\n      this._scrollValue = \"scrollTop\";\n      this._overFlowAttr = \"overflowY\";\n      this._sizeAttr = \"height\";\n      this._scrollSizeProp = \"scrollHeight\";\n      this._clientSizeProp = \"clientHeight\";\n      this._limitProps = {\n        start: \"top\",\n        end: \"bottom\"\n      };\n    } else {\n      this._scrollValue = \"scrollLeft\";\n      this._overFlowAttr = \"overflowX\";\n      this._sizeAttr = \"width\";\n      this._scrollSizeProp = \"scrollWidth\";\n      this._clientSizeProp = \"clientWidth\";\n      this._limitProps = {\n        start: \"left\",\n        end: \"right\"\n      };\n    }\n  }\n  updateScrollable(elements, mousePosition) {\n    var isScrollableFound = false;\n    elements.some(element => {\n      var $element = $(element);\n      var isTargetOverOverlayWrapper = $element.hasClass(OVERLAY_WRAPPER_CLASS);\n      var isTargetOverOverlayContent = $element.hasClass(OVERLAY_CONTENT_CLASS);\n      if (isTargetOverOverlayWrapper || isTargetOverOverlayContent) {\n        return true;\n      }\n      isScrollableFound = this._trySetScrollable(element, mousePosition);\n      return isScrollableFound;\n    });\n    if (!isScrollableFound) {\n      this._$scrollableAtPointer = null;\n      this._scrollSpeed = 0;\n    }\n  }\n  isScrolling() {\n    return !!this._scrollSpeed;\n  }\n  isScrollable($element) {\n    return (\"auto\" === $element.css(this._overFlowAttr) || $element.hasClass(\"dx-scrollable-container\")) && $element.prop(this._scrollSizeProp) > Math.ceil(\"width\" === this._sizeAttr ? getWidth($element) : getHeight($element));\n  }\n  _trySetScrollable(element, mousePosition) {\n    var $element = $(element);\n    var distanceToBorders;\n    var sensitivity = this._component.option(\"scrollSensitivity\");\n    var isScrollable = this.isScrollable($element);\n    if (isScrollable) {\n      distanceToBorders = this._calculateDistanceToBorders($element, mousePosition);\n      if (sensitivity > distanceToBorders[this._limitProps.start]) {\n        if (!this._preventScroll) {\n          this._scrollSpeed = -this._calculateScrollSpeed(distanceToBorders[this._limitProps.start]);\n          this._$scrollableAtPointer = $element;\n        }\n      } else if (sensitivity > distanceToBorders[this._limitProps.end]) {\n        if (!this._preventScroll) {\n          this._scrollSpeed = this._calculateScrollSpeed(distanceToBorders[this._limitProps.end]);\n          this._$scrollableAtPointer = $element;\n        }\n      } else {\n        isScrollable = false;\n        this._preventScroll = false;\n      }\n    }\n    return isScrollable;\n  }\n  _calculateDistanceToBorders($area, mousePosition) {\n    var area = $area.get(0);\n    var areaBoundingRect;\n    if (area) {\n      areaBoundingRect = getBoundingRect(area);\n      return {\n        left: mousePosition.x - areaBoundingRect.left,\n        top: mousePosition.y - areaBoundingRect.top,\n        right: areaBoundingRect.right - mousePosition.x,\n        bottom: areaBoundingRect.bottom - mousePosition.y\n      };\n    }\n    return {};\n  }\n  _calculateScrollSpeed(distance) {\n    var component = this._component;\n    var sensitivity = component.option(\"scrollSensitivity\");\n    var maxSpeed = component.option(\"scrollSpeed\");\n    return Math.ceil(Math.pow((sensitivity - distance) / sensitivity, 2) * maxSpeed);\n  }\n  scrollByStep() {\n    if (this._$scrollableAtPointer && this._scrollSpeed) {\n      if (this._$scrollableAtPointer.hasClass(\"dx-scrollable-container\")) {\n        var $scrollable = this._$scrollableAtPointer.closest(\".dx-scrollable\");\n        var scrollableInstance = $scrollable.data(\"dxScrollable\") || $scrollable.data(\"dxScrollView\");\n        if (scrollableInstance) {\n          var nextScrollPosition = scrollableInstance.scrollOffset()[this._limitProps.start] + this._scrollSpeed;\n          scrollableInstance.scrollTo({\n            [this._limitProps.start]: nextScrollPosition\n          });\n        }\n      } else {\n        var _nextScrollPosition = this._$scrollableAtPointer[this._scrollValue]() + this._scrollSpeed;\n        this._$scrollableAtPointer[this._scrollValue](_nextScrollPosition);\n      }\n      var dragMoveArgs = this._component._dragMoveArgs;\n      if (dragMoveArgs) {\n        this._component._dragMoveHandler(dragMoveArgs);\n      }\n    }\n  }\n  reset() {\n    this._$scrollableAtPointer = null;\n    this._scrollSpeed = 0;\n    this._preventScroll = true;\n  }\n  isOutsideScrollable($scrollable, event) {\n    if (!$scrollable) {\n      return false;\n    }\n    var scrollableSize = getBoundingRect($scrollable.get(0));\n    var start = scrollableSize[this._limitProps.start];\n    var size = scrollableSize[this._sizeAttr];\n    var mousePosition = getMousePosition(event);\n    var location = \"width\" === this._sizeAttr ? mousePosition.x : mousePosition.y;\n    return location < start || location > start + size;\n  }\n}\nvar ScrollAnimator = Animator.inherit({\n  ctor(strategy) {\n    this.callBase();\n    this._strategy = strategy;\n  },\n  _step() {\n    var horizontalScrollHelper = this._strategy._horizontalScrollHelper;\n    var verticalScrollHelper = this._strategy._verticalScrollHelper;\n    horizontalScrollHelper && horizontalScrollHelper.scrollByStep();\n    verticalScrollHelper && verticalScrollHelper.scrollByStep();\n  }\n});\nvar Draggable = DOMComponent.inherit({\n  reset: noop,\n  dragMove: noop,\n  dragEnter: noop,\n  dragLeave: noop,\n  dragEnd(sourceEvent) {\n    var sourceDraggable = this._getSourceDraggable();\n    sourceDraggable._fireRemoveEvent(sourceEvent);\n    return Deferred().resolve();\n  },\n  _fireRemoveEvent: noop,\n  _getDefaultOptions() {\n    return extend(this.callBase(), {\n      onDragStart: null,\n      onDragMove: null,\n      onDragEnd: null,\n      onDragEnter: null,\n      onDragLeave: null,\n      onDragCancel: null,\n      onCancelByEsc: false,\n      onDrop: null,\n      immediate: true,\n      dragDirection: \"both\",\n      boundary: void 0,\n      boundOffset: 0,\n      allowMoveByClick: false,\n      itemData: null,\n      container: void 0,\n      dragTemplate: void 0,\n      contentTemplate: \"content\",\n      handle: \"\",\n      filter: \"\",\n      clone: false,\n      autoScroll: true,\n      scrollSpeed: 30,\n      scrollSensitivity: 60,\n      group: void 0,\n      data: void 0\n    });\n  },\n  _setOptionsByReference() {\n    this.callBase.apply(this, arguments);\n    extend(this._optionsByReference, {\n      component: true,\n      group: true,\n      itemData: true,\n      data: true\n    });\n  },\n  _init() {\n    this.callBase();\n    this._attachEventHandlers();\n    this._scrollAnimator = new ScrollAnimator(this);\n    this._horizontalScrollHelper = new ScrollHelper(\"horizontal\", this);\n    this._verticalScrollHelper = new ScrollHelper(\"vertical\", this);\n    this._initScrollTop = 0;\n    this._initScrollLeft = 0;\n  },\n  _normalizeCursorOffset(offset) {\n    if (isObject(offset)) {\n      offset = {\n        h: offset.x,\n        v: offset.y\n      };\n    }\n    offset = splitPair(offset).map(value => parseFloat(value));\n    return {\n      left: offset[0],\n      top: 1 === offset.length ? offset[0] : offset[1]\n    };\n  },\n  _getNormalizedCursorOffset(offset, options) {\n    if (isFunction(offset)) {\n      offset = offset.call(this, options);\n    }\n    return this._normalizeCursorOffset(offset);\n  },\n  _calculateElementOffset(options) {\n    var elementOffset;\n    var dragElementOffset;\n    var {\n      event: event\n    } = options;\n    var $element = $(options.itemElement);\n    var $dragElement = $(options.dragElement);\n    var isCloned = this._dragElementIsCloned();\n    var cursorOffset = this.option(\"cursorOffset\");\n    var normalizedCursorOffset = {\n      left: 0,\n      top: 0\n    };\n    var currentLocate = this._initialLocate = locate($dragElement);\n    if (isCloned || options.initialOffset || cursorOffset) {\n      elementOffset = options.initialOffset || $element.offset();\n      if (cursorOffset) {\n        normalizedCursorOffset = this._getNormalizedCursorOffset(cursorOffset, options);\n        if (isFinite(normalizedCursorOffset.left)) {\n          elementOffset.left = event.pageX;\n        }\n        if (isFinite(normalizedCursorOffset.top)) {\n          elementOffset.top = event.pageY;\n        }\n      }\n      dragElementOffset = $dragElement.offset();\n      elementOffset.top -= dragElementOffset.top + (normalizedCursorOffset.top || 0) - currentLocate.top;\n      elementOffset.left -= dragElementOffset.left + (normalizedCursorOffset.left || 0) - currentLocate.left;\n    }\n    return elementOffset;\n  },\n  _initPosition(options) {\n    var $dragElement = $(options.dragElement);\n    var elementOffset = this._calculateElementOffset(options);\n    if (elementOffset) {\n      this._move(elementOffset, $dragElement);\n    }\n    this._startPosition = locate($dragElement);\n  },\n  _startAnimator() {\n    if (!this._scrollAnimator.inProgress()) {\n      this._scrollAnimator.start();\n    }\n  },\n  _stopAnimator() {\n    this._scrollAnimator.stop();\n  },\n  _addWidgetPrefix(className) {\n    var componentName = this.NAME;\n    return dasherize(componentName) + (className ? \"-\".concat(className) : \"\");\n  },\n  _getItemsSelector() {\n    return this.option(\"filter\") || \"\";\n  },\n  _$content() {\n    var $element = this.$element();\n    var $wrapper = $element.children(\".dx-template-wrapper\");\n    return $wrapper.length ? $wrapper : $element;\n  },\n  _attachEventHandlers() {\n    if (this.option(\"disabled\")) {\n      return;\n    }\n    var $element = this._$content();\n    var itemsSelector = this._getItemsSelector();\n    var allowMoveByClick = this.option(\"allowMoveByClick\");\n    var data = {\n      direction: this.option(\"dragDirection\"),\n      immediate: this.option(\"immediate\"),\n      checkDropTarget: ($target, event) => {\n        var targetGroup = this.option(\"group\");\n        var sourceGroup = this._getSourceDraggable().option(\"group\");\n        var $scrollable = this._getScrollable($target);\n        if (this._verticalScrollHelper.isOutsideScrollable($scrollable, event) || this._horizontalScrollHelper.isOutsideScrollable($scrollable, event)) {\n          return false;\n        }\n        return sourceGroup && sourceGroup === targetGroup;\n      }\n    };\n    if (allowMoveByClick) {\n      $element = this._getArea();\n      eventsEngine.on($element, POINTERDOWN_EVENT_NAME, data, this._pointerDownHandler.bind(this));\n    }\n    if (\">\" === itemsSelector[0]) {\n      itemsSelector = itemsSelector.slice(1);\n    }\n    eventsEngine.on($element, DRAGSTART_EVENT_NAME, itemsSelector, data, this._dragStartHandler.bind(this));\n    eventsEngine.on($element, DRAG_EVENT_NAME, data, this._dragMoveHandler.bind(this));\n    eventsEngine.on($element, DRAGEND_EVENT_NAME, data, this._dragEndHandler.bind(this));\n    eventsEngine.on($element, DRAG_ENTER_EVENT_NAME, data, this._dragEnterHandler.bind(this));\n    eventsEngine.on($element, DRAGEND_LEAVE_EVENT_NAME, data, this._dragLeaveHandler.bind(this));\n    if (this.option(\"onCancelByEsc\")) {\n      eventsEngine.on($element, KEYDOWN_EVENT_NAME, this._keydownHandler.bind(this));\n    }\n  },\n  _dragElementIsCloned() {\n    return this._$dragElement && this._$dragElement.hasClass(this._addWidgetPrefix(CLONE_CLASS));\n  },\n  _getDragTemplateArgs($element, $container) {\n    return {\n      container: getPublicElement($container),\n      model: {\n        itemData: this.option(\"itemData\"),\n        itemElement: getPublicElement($element)\n      }\n    };\n  },\n  _createDragElement($element) {\n    var result = $element;\n    var clone = this.option(\"clone\");\n    var $container = this._getContainer();\n    var template = this.option(\"dragTemplate\");\n    if (template) {\n      template = this._getTemplate(template);\n      result = $(\"<div>\").appendTo($container);\n      template.render(this._getDragTemplateArgs($element, result));\n    } else if (clone) {\n      result = $(\"<div>\").appendTo($container);\n      $element.clone().css({\n        width: $element.css(\"width\"),\n        height: $element.css(\"height\")\n      }).appendTo(result);\n    }\n    return result.toggleClass(this._addWidgetPrefix(CLONE_CLASS), result.get(0) !== $element.get(0)).toggleClass(\"dx-rtl\", this.option(\"rtlEnabled\"));\n  },\n  _resetDragElement() {\n    if (this._dragElementIsCloned()) {\n      this._$dragElement.remove();\n    } else {\n      this._toggleDraggingClass(false);\n    }\n    this._$dragElement = null;\n  },\n  _resetSourceElement() {\n    this._toggleDragSourceClass(false);\n    this._$sourceElement = null;\n  },\n  _detachEventHandlers() {\n    eventsEngine.off(this._$content(), \".\".concat(DRAGGABLE));\n    eventsEngine.off(this._getArea(), \".\".concat(DRAGGABLE));\n  },\n  _move(position, $element) {\n    move($element || this._$dragElement, position);\n  },\n  _getDraggableElement(e) {\n    var $sourceElement = this._getSourceElement();\n    if ($sourceElement) {\n      return $sourceElement;\n    }\n    var allowMoveByClick = this.option(\"allowMoveByClick\");\n    if (allowMoveByClick) {\n      return this.$element();\n    }\n    var $target = $(e && e.target);\n    var itemsSelector = this._getItemsSelector();\n    if (\">\" === itemsSelector[0]) {\n      var $items = this._$content().find(itemsSelector);\n      if (!$items.is($target)) {\n        $target = $target.closest($items);\n      }\n    }\n    return $target;\n  },\n  _getSourceElement() {\n    var draggable = this._getSourceDraggable();\n    return draggable._$sourceElement;\n  },\n  _pointerDownHandler(e) {\n    if (needSkipEvent(e)) {\n      return;\n    }\n    var position = {};\n    var $element = this.$element();\n    var dragDirection = this.option(\"dragDirection\");\n    if (\"horizontal\" === dragDirection || \"both\" === dragDirection) {\n      position.left = e.pageX - $element.offset().left + locate($element).left - getWidth($element) / 2;\n    }\n    if (\"vertical\" === dragDirection || \"both\" === dragDirection) {\n      position.top = e.pageY - $element.offset().top + locate($element).top - getHeight($element) / 2;\n    }\n    this._move(position, $element);\n    this._getAction(\"onDragMove\")(this._getEventArgs(e));\n  },\n  _isValidElement(event, $element) {\n    var handle = this.option(\"handle\");\n    var $target = $(event.originalEvent && event.originalEvent.target);\n    if (handle && !$target.closest(handle).length) {\n      return false;\n    }\n    if (!$element.length) {\n      return false;\n    }\n    return !$element.is(\".dx-state-disabled, .dx-state-disabled *\");\n  },\n  _dragStartHandler(e) {\n    var $element = this._getDraggableElement(e);\n    this.dragInProgress = true;\n    if (!this._isValidElement(e, $element)) {\n      e.cancel = true;\n      return;\n    }\n    if (this._$sourceElement) {\n      return;\n    }\n    var dragStartArgs = this._getDragStartArgs(e, $element);\n    this._getAction(\"onDragStart\")(dragStartArgs);\n    if (dragStartArgs.cancel) {\n      e.cancel = true;\n      return;\n    }\n    this.option(\"itemData\", dragStartArgs.itemData);\n    this._setSourceDraggable();\n    this._$sourceElement = $element;\n    var initialOffset = $element.offset();\n    if (!this._hasClonedDraggable() && this.option(\"autoScroll\")) {\n      this._initScrollTop = this._getScrollableScrollTop();\n      this._initScrollLeft = this._getScrollableScrollLeft();\n      initialOffset = this._getDraggableElementOffset(initialOffset.left, initialOffset.top);\n    }\n    var $dragElement = this._$dragElement = this._createDragElement($element);\n    this._toggleDraggingClass(true);\n    this._toggleDragSourceClass(true);\n    this._setGestureCoverCursor($dragElement.children());\n    var isFixedPosition = \"fixed\" === $dragElement.css(\"position\");\n    this._initPosition(extend({}, dragStartArgs, {\n      dragElement: $dragElement.get(0),\n      initialOffset: isFixedPosition && initialOffset\n    }));\n    this._getAction(\"onDraggableElementShown\")(_extends(_extends({}, dragStartArgs), {\n      dragElement: $dragElement\n    }));\n    var $area = this._getArea();\n    var areaOffset = this._getAreaOffset($area);\n    var boundOffset = this._getBoundOffset();\n    var areaWidth = getOuterWidth($area);\n    var areaHeight = getOuterHeight($area);\n    var elementWidth = getWidth($dragElement);\n    var elementHeight = getHeight($dragElement);\n    var startOffset_left = $dragElement.offset().left - areaOffset.left,\n      startOffset_top = $dragElement.offset().top - areaOffset.top;\n    if ($area.length) {\n      e.maxLeftOffset = startOffset_left - boundOffset.left;\n      e.maxRightOffset = areaWidth - startOffset_left - elementWidth - boundOffset.right;\n      e.maxTopOffset = startOffset_top - boundOffset.top;\n      e.maxBottomOffset = areaHeight - startOffset_top - elementHeight - boundOffset.bottom;\n    }\n    if (this.option(\"autoScroll\")) {\n      this._startAnimator();\n    }\n  },\n  _getAreaOffset($area) {\n    var offset = $area && positionUtils.offset($area);\n    return offset || {\n      left: 0,\n      top: 0\n    };\n  },\n  _toggleDraggingClass(value) {\n    this._$dragElement && this._$dragElement.toggleClass(this._addWidgetPrefix(\"dragging\"), value);\n  },\n  _toggleDragSourceClass(value, $element) {\n    var $sourceElement = $element || this._$sourceElement;\n    $sourceElement && $sourceElement.toggleClass(this._addWidgetPrefix(\"source\"), value);\n  },\n  _setGestureCoverCursor($element) {\n    $(\".\".concat(GESTURE_COVER_CLASS)).css(\"cursor\", $element.css(\"cursor\"));\n  },\n  _getBoundOffset() {\n    var boundOffset = this.option(\"boundOffset\");\n    if (isFunction(boundOffset)) {\n      boundOffset = boundOffset.call(this);\n    }\n    return quadToObject(boundOffset);\n  },\n  _getArea() {\n    var area = this.option(\"boundary\");\n    if (isFunction(area)) {\n      area = area.call(this);\n    }\n    return $(area);\n  },\n  _getContainer() {\n    var container = this.option(\"container\");\n    if (void 0 === container) {\n      container = viewPort();\n    }\n    return $(container);\n  },\n  _getDraggableElementOffset(initialOffsetX, initialOffsetY) {\n    var _a, _b, _c, _d;\n    var initScrollTop = this._initScrollTop;\n    var initScrollLeft = this._initScrollLeft;\n    var scrollTop = this._getScrollableScrollTop();\n    var scrollLeft = this._getScrollableScrollLeft();\n    var elementPosition = $(this.element()).css(\"position\");\n    var isFixedPosition = \"fixed\" === elementPosition;\n    var result = {\n      left: (null !== (_b = null === (_a = this._startPosition) || void 0 === _a ? void 0 : _a.left) && void 0 !== _b ? _b : 0) + initialOffsetX,\n      top: (null !== (_d = null === (_c = this._startPosition) || void 0 === _c ? void 0 : _c.top) && void 0 !== _d ? _d : 0) + initialOffsetY\n    };\n    if (isFixedPosition || this._hasClonedDraggable()) {\n      return result;\n    }\n    return {\n      left: isNumeric(scrollLeft) ? result.left + scrollLeft - initScrollLeft : result.left,\n      top: isNumeric(scrollTop) ? result.top + scrollTop - initScrollTop : result.top\n    };\n  },\n  _hasClonedDraggable() {\n    return this.option(\"clone\") || this.option(\"dragTemplate\");\n  },\n  _dragMoveHandler(e) {\n    this._dragMoveArgs = e;\n    if (!this._$dragElement) {\n      e.cancel = true;\n      return;\n    }\n    var offset = this._getDraggableElementOffset(e.offset.x, e.offset.y);\n    this._move(offset);\n    this._updateScrollable(e);\n    var eventArgs = this._getEventArgs(e);\n    this._getAction(\"onDragMove\")(eventArgs);\n    if (true === eventArgs.cancel) {\n      return;\n    }\n    var targetDraggable = this._getTargetDraggable();\n    targetDraggable.dragMove(e, scrollBy);\n  },\n  _updateScrollable(e) {\n    if (this.option(\"autoScroll\")) {\n      var mousePosition = getMousePosition(e);\n      var allObjects = domAdapter.elementsFromPoint(mousePosition.x, mousePosition.y, this.$element().get(0));\n      this._verticalScrollHelper.updateScrollable(allObjects, mousePosition);\n      this._horizontalScrollHelper.updateScrollable(allObjects, mousePosition);\n    }\n  },\n  _getScrollable($element) {\n    var $scrollable;\n    $element.parents().toArray().some(parent => {\n      var $parent = $(parent);\n      if (this._horizontalScrollHelper.isScrollable($parent) || this._verticalScrollHelper.isScrollable($parent)) {\n        $scrollable = $parent;\n        return true;\n      }\n      return false;\n    });\n    return $scrollable;\n  },\n  _getScrollableScrollTop() {\n    var _a, _b;\n    return null !== (_b = null === (_a = this._getScrollable($(this.element()))) || void 0 === _a ? void 0 : _a.scrollTop()) && void 0 !== _b ? _b : 0;\n  },\n  _getScrollableScrollLeft() {\n    var _a, _b;\n    return null !== (_b = null === (_a = this._getScrollable($(this.element()))) || void 0 === _a ? void 0 : _a.scrollLeft()) && void 0 !== _b ? _b : 0;\n  },\n  _defaultActionArgs() {\n    var args = this.callBase.apply(this, arguments);\n    var component = this.option(\"component\");\n    if (component) {\n      args.component = component;\n      args.element = component.element();\n    }\n    return args;\n  },\n  _getEventArgs(e) {\n    var sourceDraggable = this._getSourceDraggable();\n    var targetDraggable = this._getTargetDraggable();\n    return {\n      event: e,\n      itemData: sourceDraggable.option(\"itemData\"),\n      itemElement: getPublicElement(sourceDraggable._$sourceElement),\n      fromComponent: sourceDraggable.option(\"component\") || sourceDraggable,\n      toComponent: targetDraggable.option(\"component\") || targetDraggable,\n      fromData: sourceDraggable.option(\"data\"),\n      toData: targetDraggable.option(\"data\")\n    };\n  },\n  _getDragStartArgs(e, $itemElement) {\n    var args = this._getEventArgs(e);\n    return {\n      event: args.event,\n      itemData: args.itemData,\n      itemElement: $itemElement,\n      fromData: args.fromData\n    };\n  },\n  _revertItemToInitialPosition() {\n    !this._dragElementIsCloned() && this._move(this._initialLocate, this._$sourceElement);\n  },\n  _dragEndHandler(e) {\n    var d = Deferred();\n    var dragEndEventArgs = this._getEventArgs(e);\n    var dropEventArgs = this._getEventArgs(e);\n    var targetDraggable = this._getTargetDraggable();\n    var needRevertPosition = true;\n    this.dragInProgress = false;\n    try {\n      this._getAction(\"onDragEnd\")(dragEndEventArgs);\n    } finally {\n      when(fromPromise(dragEndEventArgs.cancel)).done(cancel => {\n        if (!cancel) {\n          if (targetDraggable !== this) {\n            targetDraggable._getAction(\"onDrop\")(dropEventArgs);\n          }\n          if (!dropEventArgs.cancel) {\n            needRevertPosition = false;\n            when(fromPromise(targetDraggable.dragEnd(dragEndEventArgs))).always(d.resolve);\n            return;\n          }\n        }\n        d.resolve();\n      }).fail(d.resolve);\n      d.done(() => {\n        if (needRevertPosition) {\n          this._revertItemToInitialPosition();\n        }\n        this._resetDragOptions(targetDraggable);\n      });\n    }\n  },\n  _isTargetOverAnotherDraggable(e) {\n    var sourceDraggable = this._getSourceDraggable();\n    if (this === sourceDraggable) {\n      return false;\n    }\n    var $dragElement = sourceDraggable._$dragElement;\n    var $sourceDraggableElement = sourceDraggable.$element();\n    var $targetDraggableElement = this.$element();\n    var mousePosition = getMousePosition(e);\n    var elements = domAdapter.elementsFromPoint(mousePosition.x, mousePosition.y, this.element());\n    var firstWidgetElement = elements.filter(element => {\n      var $element = $(element);\n      if ($element.hasClass(this._addWidgetPrefix())) {\n        return !$element.closest($dragElement).length;\n      }\n      return false;\n    })[0];\n    var $sourceElement = this._getSourceElement();\n    var isTargetOverItself = firstWidgetElement === $sourceDraggableElement.get(0);\n    var isTargetOverNestedDraggable = $(firstWidgetElement).closest($sourceElement).length;\n    return !firstWidgetElement || firstWidgetElement === $targetDraggableElement.get(0) && !isTargetOverItself && !isTargetOverNestedDraggable;\n  },\n  _dragEnterHandler(e) {\n    this._fireDragEnterEvent(e);\n    if (this._isTargetOverAnotherDraggable(e)) {\n      this._setTargetDraggable();\n    }\n    var sourceDraggable = this._getSourceDraggable();\n    sourceDraggable.dragEnter(e);\n  },\n  _dragLeaveHandler(e) {\n    this._fireDragLeaveEvent(e);\n    this._resetTargetDraggable();\n    if (this !== this._getSourceDraggable()) {\n      this.reset();\n    }\n    var sourceDraggable = this._getSourceDraggable();\n    sourceDraggable.dragLeave(e);\n  },\n  _keydownHandler(e) {\n    if (this.dragInProgress && \"Escape\" === e.key) {\n      this._keydownEscapeHandler(e);\n    }\n  },\n  _keydownEscapeHandler(e) {\n    var $sourceElement = this._getSourceElement();\n    if (!$sourceElement) {\n      return;\n    }\n    var dragCancelEventArgs = this._getEventArgs(e);\n    this._getAction(\"onDragCancel\")(dragCancelEventArgs);\n    if (dragCancelEventArgs.cancel) {\n      return;\n    }\n    this.dragInProgress = false;\n    null === sourceDraggable || void 0 === sourceDraggable ? void 0 : sourceDraggable._toggleDraggingClass(false);\n    this._detachEventHandlers();\n    this._revertItemToInitialPosition();\n    var targetDraggable = this._getTargetDraggable();\n    this._resetDragOptions(targetDraggable);\n    this._attachEventHandlers();\n  },\n  _getAction(name) {\n    return this[\"_\".concat(name, \"Action\")] || this._createActionByOption(name);\n  },\n  _getAnonymousTemplateName: () => ANONYMOUS_TEMPLATE_NAME,\n  _initTemplates() {\n    if (!this.option(\"contentTemplate\")) {\n      return;\n    }\n    this._templateManager.addDefaultTemplates({\n      content: new EmptyTemplate()\n    });\n    this.callBase.apply(this, arguments);\n  },\n  _render() {\n    this.callBase();\n    this.$element().addClass(this._addWidgetPrefix());\n    var transclude = this._templateManager.anonymousTemplateName === this.option(\"contentTemplate\");\n    var template = this._getTemplateByOption(\"contentTemplate\");\n    if (template) {\n      $(template.render({\n        container: this.element(),\n        transclude: transclude\n      }));\n    }\n  },\n  _optionChanged(args) {\n    var {\n      name: name\n    } = args;\n    switch (name) {\n      case \"onDragStart\":\n      case \"onDragMove\":\n      case \"onDragEnd\":\n      case \"onDrop\":\n      case \"onDragEnter\":\n      case \"onDragLeave\":\n      case \"onDragCancel\":\n      case \"onDraggableElementShown\":\n        this[\"_\".concat(name, \"Action\")] = this._createActionByOption(name);\n        break;\n      case \"dragTemplate\":\n      case \"contentTemplate\":\n      case \"container\":\n      case \"clone\":\n        break;\n      case \"allowMoveByClick\":\n      case \"dragDirection\":\n      case \"disabled\":\n      case \"boundary\":\n      case \"filter\":\n      case \"immediate\":\n        this._resetDragElement();\n        this._detachEventHandlers();\n        this._attachEventHandlers();\n        break;\n      case \"onCancelByEsc\":\n        this._keydownHandler();\n        break;\n      case \"autoScroll\":\n        this._verticalScrollHelper.reset();\n        this._horizontalScrollHelper.reset();\n        break;\n      case \"scrollSensitivity\":\n      case \"scrollSpeed\":\n      case \"boundOffset\":\n      case \"handle\":\n      case \"group\":\n      case \"data\":\n      case \"itemData\":\n        break;\n      default:\n        this.callBase(args);\n    }\n  },\n  _getTargetDraggable() {\n    return targetDraggable || this;\n  },\n  _getSourceDraggable() {\n    return sourceDraggable || this;\n  },\n  _setTargetDraggable() {\n    var currentGroup = this.option(\"group\");\n    var sourceDraggable = this._getSourceDraggable();\n    if (currentGroup && currentGroup === sourceDraggable.option(\"group\")) {\n      targetDraggable = this;\n    }\n  },\n  _setSourceDraggable() {\n    sourceDraggable = this;\n  },\n  _resetSourceDraggable() {\n    sourceDraggable = null;\n  },\n  _resetTargetDraggable() {\n    targetDraggable = null;\n  },\n  _resetDragOptions(targetDraggable) {\n    this.reset();\n    targetDraggable.reset();\n    this._stopAnimator();\n    this._horizontalScrollHelper.reset();\n    this._verticalScrollHelper.reset();\n    this._resetDragElement();\n    this._resetSourceElement();\n    this._resetTargetDraggable();\n    this._resetSourceDraggable();\n  },\n  _dispose() {\n    this.callBase();\n    this._detachEventHandlers();\n    this._resetDragElement();\n    this._resetTargetDraggable();\n    this._resetSourceDraggable();\n    this._$sourceElement = null;\n    this._stopAnimator();\n  },\n  _fireDragEnterEvent(sourceEvent) {\n    var args = this._getEventArgs(sourceEvent);\n    this._getAction(\"onDragEnter\")(args);\n  },\n  _fireDragLeaveEvent(sourceEvent) {\n    var args = this._getEventArgs(sourceEvent);\n    this._getAction(\"onDragLeave\")(args);\n  }\n});\nregisterComponent(DRAGGABLE, Draggable);\nexport default Draggable;","map":{"version":3,"names":["_extends","positionUtils","locate","move","registerComponent","domAdapter","DOMComponent","getPublicElement","$","EmptyTemplate","noop","splitPair","Deferred","fromPromise","when","extend","dasherize","getBoundingRect","getHeight","getOuterHeight","getOuterWidth","getWidth","quadToObject","isFunction","isNumeric","isObject","value","viewPort","getWindow","eventsEngine","end","dragEventEnd","enter","dragEventEnter","leave","dragEventLeave","dragEventMove","start","dragEventStart","pointerEvents","addNamespace","needSkipEvent","Animator","window","KEYDOWN_EVENT","DRAGGABLE","DRAGSTART_EVENT_NAME","DRAG_EVENT_NAME","DRAGEND_EVENT_NAME","DRAG_ENTER_EVENT_NAME","DRAGEND_LEAVE_EVENT_NAME","POINTERDOWN_EVENT_NAME","down","KEYDOWN_EVENT_NAME","CLONE_CLASS","targetDraggable","sourceDraggable","ANONYMOUS_TEMPLATE_NAME","getMousePosition","event","x","pageX","scrollLeft","y","pageY","scrollTop","GESTURE_COVER_CLASS","OVERLAY_WRAPPER_CLASS","OVERLAY_CONTENT_CLASS","ScrollHelper","constructor","orientation","component","_$scrollableAtPointer","_preventScroll","_component","_scrollValue","_overFlowAttr","_sizeAttr","_scrollSizeProp","_clientSizeProp","_limitProps","updateScrollable","elements","mousePosition","isScrollableFound","some","element","$element","isTargetOverOverlayWrapper","hasClass","isTargetOverOverlayContent","_trySetScrollable","_scrollSpeed","isScrolling","isScrollable","css","prop","Math","ceil","distanceToBorders","sensitivity","option","_calculateDistanceToBorders","_calculateScrollSpeed","$area","area","get","areaBoundingRect","left","top","right","bottom","distance","maxSpeed","pow","scrollByStep","$scrollable","closest","scrollableInstance","data","nextScrollPosition","scrollOffset","scrollTo","_nextScrollPosition","dragMoveArgs","_dragMoveArgs","_dragMoveHandler","reset","isOutsideScrollable","scrollableSize","size","location","ScrollAnimator","inherit","ctor","strategy","callBase","_strategy","_step","horizontalScrollHelper","_horizontalScrollHelper","verticalScrollHelper","_verticalScrollHelper","Draggable","dragMove","dragEnter","dragLeave","dragEnd","sourceEvent","_getSourceDraggable","_fireRemoveEvent","resolve","_getDefaultOptions","onDragStart","onDragMove","onDragEnd","onDragEnter","onDragLeave","onDragCancel","onCancelByEsc","onDrop","immediate","dragDirection","boundary","boundOffset","allowMoveByClick","itemData","container","dragTemplate","contentTemplate","handle","filter","clone","autoScroll","scrollSpeed","scrollSensitivity","group","_setOptionsByReference","apply","arguments","_optionsByReference","_init","_attachEventHandlers","_scrollAnimator","_initScrollTop","_initScrollLeft","_normalizeCursorOffset","offset","h","v","map","parseFloat","length","_getNormalizedCursorOffset","options","call","_calculateElementOffset","elementOffset","dragElementOffset","itemElement","$dragElement","dragElement","isCloned","_dragElementIsCloned","cursorOffset","normalizedCursorOffset","currentLocate","_initialLocate","initialOffset","isFinite","_initPosition","_move","_startPosition","_startAnimator","inProgress","_stopAnimator","stop","_addWidgetPrefix","className","componentName","NAME","concat","_getItemsSelector","_$content","$wrapper","children","itemsSelector","direction","checkDropTarget","$target","targetGroup","sourceGroup","_getScrollable","_getArea","on","_pointerDownHandler","bind","slice","_dragStartHandler","_dragEndHandler","_dragEnterHandler","_dragLeaveHandler","_keydownHandler","_$dragElement","_getDragTemplateArgs","$container","model","_createDragElement","result","_getContainer","template","_getTemplate","appendTo","render","width","height","toggleClass","_resetDragElement","remove","_toggleDraggingClass","_resetSourceElement","_toggleDragSourceClass","_$sourceElement","_detachEventHandlers","off","position","_getDraggableElement","e","$sourceElement","_getSourceElement","target","$items","find","is","draggable","_getAction","_getEventArgs","_isValidElement","originalEvent","dragInProgress","cancel","dragStartArgs","_getDragStartArgs","_setSourceDraggable","_hasClonedDraggable","_getScrollableScrollTop","_getScrollableScrollLeft","_getDraggableElementOffset","_setGestureCoverCursor","isFixedPosition","areaOffset","_getAreaOffset","_getBoundOffset","areaWidth","areaHeight","elementWidth","elementHeight","startOffset_left","startOffset_top","maxLeftOffset","maxRightOffset","maxTopOffset","maxBottomOffset","initialOffsetX","initialOffsetY","_a","_b","_c","_d","initScrollTop","initScrollLeft","elementPosition","_updateScrollable","eventArgs","_getTargetDraggable","scrollBy","allObjects","elementsFromPoint","parents","toArray","parent","$parent","_defaultActionArgs","args","fromComponent","toComponent","fromData","toData","$itemElement","_revertItemToInitialPosition","d","dragEndEventArgs","dropEventArgs","needRevertPosition","done","always","fail","_resetDragOptions","_isTargetOverAnotherDraggable","$sourceDraggableElement","$targetDraggableElement","firstWidgetElement","isTargetOverItself","isTargetOverNestedDraggable","_fireDragEnterEvent","_setTargetDraggable","_fireDragLeaveEvent","_resetTargetDraggable","key","_keydownEscapeHandler","dragCancelEventArgs","name","_createActionByOption","_getAnonymousTemplateName","_initTemplates","_templateManager","addDefaultTemplates","content","_render","addClass","transclude","anonymousTemplateName","_getTemplateByOption","_optionChanged","currentGroup","_resetSourceDraggable","_dispose"],"sources":["C:/Users/Michal Abargel/Desktop/FULLSTACK_PROJECTS/PrivateLessones/PL/client/gui/node_modules/devextreme/esm/__internal/m_draggable.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/m_draggable.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport positionUtils from \"../animation/position\";\r\nimport {\r\n    locate,\r\n    move\r\n} from \"../animation/translator\";\r\nimport registerComponent from \"../core/component_registrator\";\r\nimport domAdapter from \"../core/dom_adapter\";\r\nimport DOMComponent from \"../core/dom_component\";\r\nimport {\r\n    getPublicElement\r\n} from \"../core/element\";\r\nimport $ from \"../core/renderer\";\r\nimport {\r\n    EmptyTemplate\r\n} from \"../core/templates/empty_template\";\r\nimport {\r\n    noop,\r\n    splitPair\r\n} from \"../core/utils/common\";\r\nimport {\r\n    Deferred,\r\n    fromPromise,\r\n    when\r\n} from \"../core/utils/deferred\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport {\r\n    dasherize\r\n} from \"../core/utils/inflector\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../core/utils/position\";\r\nimport {\r\n    getHeight,\r\n    getOuterHeight,\r\n    getOuterWidth,\r\n    getWidth\r\n} from \"../core/utils/size\";\r\nimport {\r\n    quadToObject\r\n} from \"../core/utils/string\";\r\nimport {\r\n    isFunction,\r\n    isNumeric,\r\n    isObject\r\n} from \"../core/utils/type\";\r\nimport {\r\n    value as viewPort\r\n} from \"../core/utils/view_port\";\r\nimport {\r\n    getWindow\r\n} from \"../core/utils/window\";\r\nimport eventsEngine from \"../events/core/events_engine\";\r\nimport {\r\n    end as dragEventEnd,\r\n    enter as dragEventEnter,\r\n    leave as dragEventLeave,\r\n    move as dragEventMove,\r\n    start as dragEventStart\r\n} from \"../events/drag\";\r\nimport pointerEvents from \"../events/pointer\";\r\nimport {\r\n    addNamespace,\r\n    needSkipEvent\r\n} from \"../events/utils/index\";\r\nimport Animator from \"../ui/scroll_view/animator\";\r\nvar window = getWindow();\r\nvar KEYDOWN_EVENT = \"keydown\";\r\nvar DRAGGABLE = \"dxDraggable\";\r\nvar DRAGSTART_EVENT_NAME = addNamespace(dragEventStart, DRAGGABLE);\r\nvar DRAG_EVENT_NAME = addNamespace(dragEventMove, DRAGGABLE);\r\nvar DRAGEND_EVENT_NAME = addNamespace(dragEventEnd, DRAGGABLE);\r\nvar DRAG_ENTER_EVENT_NAME = addNamespace(dragEventEnter, DRAGGABLE);\r\nvar DRAGEND_LEAVE_EVENT_NAME = addNamespace(dragEventLeave, DRAGGABLE);\r\nvar POINTERDOWN_EVENT_NAME = addNamespace(pointerEvents.down, DRAGGABLE);\r\nvar KEYDOWN_EVENT_NAME = addNamespace(KEYDOWN_EVENT, DRAGGABLE);\r\nvar CLONE_CLASS = \"clone\";\r\nvar targetDraggable;\r\nvar sourceDraggable;\r\nvar ANONYMOUS_TEMPLATE_NAME = \"content\";\r\nvar getMousePosition = event => ({\r\n    x: event.pageX - $(window).scrollLeft(),\r\n    y: event.pageY - $(window).scrollTop()\r\n});\r\nvar GESTURE_COVER_CLASS = \"dx-gesture-cover\";\r\nvar OVERLAY_WRAPPER_CLASS = \"dx-overlay-wrapper\";\r\nvar OVERLAY_CONTENT_CLASS = \"dx-overlay-content\";\r\nclass ScrollHelper {\r\n    constructor(orientation, component) {\r\n        this._$scrollableAtPointer = null;\r\n        this._preventScroll = true;\r\n        this._component = component;\r\n        if (\"vertical\" === orientation) {\r\n            this._scrollValue = \"scrollTop\";\r\n            this._overFlowAttr = \"overflowY\";\r\n            this._sizeAttr = \"height\";\r\n            this._scrollSizeProp = \"scrollHeight\";\r\n            this._clientSizeProp = \"clientHeight\";\r\n            this._limitProps = {\r\n                start: \"top\",\r\n                end: \"bottom\"\r\n            }\r\n        } else {\r\n            this._scrollValue = \"scrollLeft\";\r\n            this._overFlowAttr = \"overflowX\";\r\n            this._sizeAttr = \"width\";\r\n            this._scrollSizeProp = \"scrollWidth\";\r\n            this._clientSizeProp = \"clientWidth\";\r\n            this._limitProps = {\r\n                start: \"left\",\r\n                end: \"right\"\r\n            }\r\n        }\r\n    }\r\n    updateScrollable(elements, mousePosition) {\r\n        var isScrollableFound = false;\r\n        elements.some(element => {\r\n            var $element = $(element);\r\n            var isTargetOverOverlayWrapper = $element.hasClass(OVERLAY_WRAPPER_CLASS);\r\n            var isTargetOverOverlayContent = $element.hasClass(OVERLAY_CONTENT_CLASS);\r\n            if (isTargetOverOverlayWrapper || isTargetOverOverlayContent) {\r\n                return true\r\n            }\r\n            isScrollableFound = this._trySetScrollable(element, mousePosition);\r\n            return isScrollableFound\r\n        });\r\n        if (!isScrollableFound) {\r\n            this._$scrollableAtPointer = null;\r\n            this._scrollSpeed = 0\r\n        }\r\n    }\r\n    isScrolling() {\r\n        return !!this._scrollSpeed\r\n    }\r\n    isScrollable($element) {\r\n        return (\"auto\" === $element.css(this._overFlowAttr) || $element.hasClass(\"dx-scrollable-container\")) && $element.prop(this._scrollSizeProp) > Math.ceil(\"width\" === this._sizeAttr ? getWidth($element) : getHeight($element))\r\n    }\r\n    _trySetScrollable(element, mousePosition) {\r\n        var $element = $(element);\r\n        var distanceToBorders;\r\n        var sensitivity = this._component.option(\"scrollSensitivity\");\r\n        var isScrollable = this.isScrollable($element);\r\n        if (isScrollable) {\r\n            distanceToBorders = this._calculateDistanceToBorders($element, mousePosition);\r\n            if (sensitivity > distanceToBorders[this._limitProps.start]) {\r\n                if (!this._preventScroll) {\r\n                    this._scrollSpeed = -this._calculateScrollSpeed(distanceToBorders[this._limitProps.start]);\r\n                    this._$scrollableAtPointer = $element\r\n                }\r\n            } else if (sensitivity > distanceToBorders[this._limitProps.end]) {\r\n                if (!this._preventScroll) {\r\n                    this._scrollSpeed = this._calculateScrollSpeed(distanceToBorders[this._limitProps.end]);\r\n                    this._$scrollableAtPointer = $element\r\n                }\r\n            } else {\r\n                isScrollable = false;\r\n                this._preventScroll = false\r\n            }\r\n        }\r\n        return isScrollable\r\n    }\r\n    _calculateDistanceToBorders($area, mousePosition) {\r\n        var area = $area.get(0);\r\n        var areaBoundingRect;\r\n        if (area) {\r\n            areaBoundingRect = getBoundingRect(area);\r\n            return {\r\n                left: mousePosition.x - areaBoundingRect.left,\r\n                top: mousePosition.y - areaBoundingRect.top,\r\n                right: areaBoundingRect.right - mousePosition.x,\r\n                bottom: areaBoundingRect.bottom - mousePosition.y\r\n            }\r\n        }\r\n        return {}\r\n    }\r\n    _calculateScrollSpeed(distance) {\r\n        var component = this._component;\r\n        var sensitivity = component.option(\"scrollSensitivity\");\r\n        var maxSpeed = component.option(\"scrollSpeed\");\r\n        return Math.ceil(Math.pow((sensitivity - distance) / sensitivity, 2) * maxSpeed)\r\n    }\r\n    scrollByStep() {\r\n        if (this._$scrollableAtPointer && this._scrollSpeed) {\r\n            if (this._$scrollableAtPointer.hasClass(\"dx-scrollable-container\")) {\r\n                var $scrollable = this._$scrollableAtPointer.closest(\".dx-scrollable\");\r\n                var scrollableInstance = $scrollable.data(\"dxScrollable\") || $scrollable.data(\"dxScrollView\");\r\n                if (scrollableInstance) {\r\n                    var nextScrollPosition = scrollableInstance.scrollOffset()[this._limitProps.start] + this._scrollSpeed;\r\n                    scrollableInstance.scrollTo({\r\n                        [this._limitProps.start]: nextScrollPosition\r\n                    })\r\n                }\r\n            } else {\r\n                var _nextScrollPosition = this._$scrollableAtPointer[this._scrollValue]() + this._scrollSpeed;\r\n                this._$scrollableAtPointer[this._scrollValue](_nextScrollPosition)\r\n            }\r\n            var dragMoveArgs = this._component._dragMoveArgs;\r\n            if (dragMoveArgs) {\r\n                this._component._dragMoveHandler(dragMoveArgs)\r\n            }\r\n        }\r\n    }\r\n    reset() {\r\n        this._$scrollableAtPointer = null;\r\n        this._scrollSpeed = 0;\r\n        this._preventScroll = true\r\n    }\r\n    isOutsideScrollable($scrollable, event) {\r\n        if (!$scrollable) {\r\n            return false\r\n        }\r\n        var scrollableSize = getBoundingRect($scrollable.get(0));\r\n        var start = scrollableSize[this._limitProps.start];\r\n        var size = scrollableSize[this._sizeAttr];\r\n        var mousePosition = getMousePosition(event);\r\n        var location = \"width\" === this._sizeAttr ? mousePosition.x : mousePosition.y;\r\n        return location < start || location > start + size\r\n    }\r\n}\r\nvar ScrollAnimator = Animator.inherit({\r\n    ctor(strategy) {\r\n        this.callBase();\r\n        this._strategy = strategy\r\n    },\r\n    _step() {\r\n        var horizontalScrollHelper = this._strategy._horizontalScrollHelper;\r\n        var verticalScrollHelper = this._strategy._verticalScrollHelper;\r\n        horizontalScrollHelper && horizontalScrollHelper.scrollByStep();\r\n        verticalScrollHelper && verticalScrollHelper.scrollByStep()\r\n    }\r\n});\r\nvar Draggable = DOMComponent.inherit({\r\n    reset: noop,\r\n    dragMove: noop,\r\n    dragEnter: noop,\r\n    dragLeave: noop,\r\n    dragEnd(sourceEvent) {\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        sourceDraggable._fireRemoveEvent(sourceEvent);\r\n        return Deferred().resolve()\r\n    },\r\n    _fireRemoveEvent: noop,\r\n    _getDefaultOptions() {\r\n        return extend(this.callBase(), {\r\n            onDragStart: null,\r\n            onDragMove: null,\r\n            onDragEnd: null,\r\n            onDragEnter: null,\r\n            onDragLeave: null,\r\n            onDragCancel: null,\r\n            onCancelByEsc: false,\r\n            onDrop: null,\r\n            immediate: true,\r\n            dragDirection: \"both\",\r\n            boundary: void 0,\r\n            boundOffset: 0,\r\n            allowMoveByClick: false,\r\n            itemData: null,\r\n            container: void 0,\r\n            dragTemplate: void 0,\r\n            contentTemplate: \"content\",\r\n            handle: \"\",\r\n            filter: \"\",\r\n            clone: false,\r\n            autoScroll: true,\r\n            scrollSpeed: 30,\r\n            scrollSensitivity: 60,\r\n            group: void 0,\r\n            data: void 0\r\n        })\r\n    },\r\n    _setOptionsByReference() {\r\n        this.callBase.apply(this, arguments);\r\n        extend(this._optionsByReference, {\r\n            component: true,\r\n            group: true,\r\n            itemData: true,\r\n            data: true\r\n        })\r\n    },\r\n    _init() {\r\n        this.callBase();\r\n        this._attachEventHandlers();\r\n        this._scrollAnimator = new ScrollAnimator(this);\r\n        this._horizontalScrollHelper = new ScrollHelper(\"horizontal\", this);\r\n        this._verticalScrollHelper = new ScrollHelper(\"vertical\", this);\r\n        this._initScrollTop = 0;\r\n        this._initScrollLeft = 0\r\n    },\r\n    _normalizeCursorOffset(offset) {\r\n        if (isObject(offset)) {\r\n            offset = {\r\n                h: offset.x,\r\n                v: offset.y\r\n            }\r\n        }\r\n        offset = splitPair(offset).map(value => parseFloat(value));\r\n        return {\r\n            left: offset[0],\r\n            top: 1 === offset.length ? offset[0] : offset[1]\r\n        }\r\n    },\r\n    _getNormalizedCursorOffset(offset, options) {\r\n        if (isFunction(offset)) {\r\n            offset = offset.call(this, options)\r\n        }\r\n        return this._normalizeCursorOffset(offset)\r\n    },\r\n    _calculateElementOffset(options) {\r\n        var elementOffset;\r\n        var dragElementOffset;\r\n        var {\r\n            event: event\r\n        } = options;\r\n        var $element = $(options.itemElement);\r\n        var $dragElement = $(options.dragElement);\r\n        var isCloned = this._dragElementIsCloned();\r\n        var cursorOffset = this.option(\"cursorOffset\");\r\n        var normalizedCursorOffset = {\r\n            left: 0,\r\n            top: 0\r\n        };\r\n        var currentLocate = this._initialLocate = locate($dragElement);\r\n        if (isCloned || options.initialOffset || cursorOffset) {\r\n            elementOffset = options.initialOffset || $element.offset();\r\n            if (cursorOffset) {\r\n                normalizedCursorOffset = this._getNormalizedCursorOffset(cursorOffset, options);\r\n                if (isFinite(normalizedCursorOffset.left)) {\r\n                    elementOffset.left = event.pageX\r\n                }\r\n                if (isFinite(normalizedCursorOffset.top)) {\r\n                    elementOffset.top = event.pageY\r\n                }\r\n            }\r\n            dragElementOffset = $dragElement.offset();\r\n            elementOffset.top -= dragElementOffset.top + (normalizedCursorOffset.top || 0) - currentLocate.top;\r\n            elementOffset.left -= dragElementOffset.left + (normalizedCursorOffset.left || 0) - currentLocate.left\r\n        }\r\n        return elementOffset\r\n    },\r\n    _initPosition(options) {\r\n        var $dragElement = $(options.dragElement);\r\n        var elementOffset = this._calculateElementOffset(options);\r\n        if (elementOffset) {\r\n            this._move(elementOffset, $dragElement)\r\n        }\r\n        this._startPosition = locate($dragElement)\r\n    },\r\n    _startAnimator() {\r\n        if (!this._scrollAnimator.inProgress()) {\r\n            this._scrollAnimator.start()\r\n        }\r\n    },\r\n    _stopAnimator() {\r\n        this._scrollAnimator.stop()\r\n    },\r\n    _addWidgetPrefix(className) {\r\n        var componentName = this.NAME;\r\n        return dasherize(componentName) + (className ? \"-\".concat(className) : \"\")\r\n    },\r\n    _getItemsSelector() {\r\n        return this.option(\"filter\") || \"\"\r\n    },\r\n    _$content() {\r\n        var $element = this.$element();\r\n        var $wrapper = $element.children(\".dx-template-wrapper\");\r\n        return $wrapper.length ? $wrapper : $element\r\n    },\r\n    _attachEventHandlers() {\r\n        if (this.option(\"disabled\")) {\r\n            return\r\n        }\r\n        var $element = this._$content();\r\n        var itemsSelector = this._getItemsSelector();\r\n        var allowMoveByClick = this.option(\"allowMoveByClick\");\r\n        var data = {\r\n            direction: this.option(\"dragDirection\"),\r\n            immediate: this.option(\"immediate\"),\r\n            checkDropTarget: ($target, event) => {\r\n                var targetGroup = this.option(\"group\");\r\n                var sourceGroup = this._getSourceDraggable().option(\"group\");\r\n                var $scrollable = this._getScrollable($target);\r\n                if (this._verticalScrollHelper.isOutsideScrollable($scrollable, event) || this._horizontalScrollHelper.isOutsideScrollable($scrollable, event)) {\r\n                    return false\r\n                }\r\n                return sourceGroup && sourceGroup === targetGroup\r\n            }\r\n        };\r\n        if (allowMoveByClick) {\r\n            $element = this._getArea();\r\n            eventsEngine.on($element, POINTERDOWN_EVENT_NAME, data, this._pointerDownHandler.bind(this))\r\n        }\r\n        if (\">\" === itemsSelector[0]) {\r\n            itemsSelector = itemsSelector.slice(1)\r\n        }\r\n        eventsEngine.on($element, DRAGSTART_EVENT_NAME, itemsSelector, data, this._dragStartHandler.bind(this));\r\n        eventsEngine.on($element, DRAG_EVENT_NAME, data, this._dragMoveHandler.bind(this));\r\n        eventsEngine.on($element, DRAGEND_EVENT_NAME, data, this._dragEndHandler.bind(this));\r\n        eventsEngine.on($element, DRAG_ENTER_EVENT_NAME, data, this._dragEnterHandler.bind(this));\r\n        eventsEngine.on($element, DRAGEND_LEAVE_EVENT_NAME, data, this._dragLeaveHandler.bind(this));\r\n        if (this.option(\"onCancelByEsc\")) {\r\n            eventsEngine.on($element, KEYDOWN_EVENT_NAME, this._keydownHandler.bind(this))\r\n        }\r\n    },\r\n    _dragElementIsCloned() {\r\n        return this._$dragElement && this._$dragElement.hasClass(this._addWidgetPrefix(CLONE_CLASS))\r\n    },\r\n    _getDragTemplateArgs($element, $container) {\r\n        return {\r\n            container: getPublicElement($container),\r\n            model: {\r\n                itemData: this.option(\"itemData\"),\r\n                itemElement: getPublicElement($element)\r\n            }\r\n        }\r\n    },\r\n    _createDragElement($element) {\r\n        var result = $element;\r\n        var clone = this.option(\"clone\");\r\n        var $container = this._getContainer();\r\n        var template = this.option(\"dragTemplate\");\r\n        if (template) {\r\n            template = this._getTemplate(template);\r\n            result = $(\"<div>\").appendTo($container);\r\n            template.render(this._getDragTemplateArgs($element, result))\r\n        } else if (clone) {\r\n            result = $(\"<div>\").appendTo($container);\r\n            $element.clone().css({\r\n                width: $element.css(\"width\"),\r\n                height: $element.css(\"height\")\r\n            }).appendTo(result)\r\n        }\r\n        return result.toggleClass(this._addWidgetPrefix(CLONE_CLASS), result.get(0) !== $element.get(0)).toggleClass(\"dx-rtl\", this.option(\"rtlEnabled\"))\r\n    },\r\n    _resetDragElement() {\r\n        if (this._dragElementIsCloned()) {\r\n            this._$dragElement.remove()\r\n        } else {\r\n            this._toggleDraggingClass(false)\r\n        }\r\n        this._$dragElement = null\r\n    },\r\n    _resetSourceElement() {\r\n        this._toggleDragSourceClass(false);\r\n        this._$sourceElement = null\r\n    },\r\n    _detachEventHandlers() {\r\n        eventsEngine.off(this._$content(), \".\".concat(DRAGGABLE));\r\n        eventsEngine.off(this._getArea(), \".\".concat(DRAGGABLE))\r\n    },\r\n    _move(position, $element) {\r\n        move($element || this._$dragElement, position)\r\n    },\r\n    _getDraggableElement(e) {\r\n        var $sourceElement = this._getSourceElement();\r\n        if ($sourceElement) {\r\n            return $sourceElement\r\n        }\r\n        var allowMoveByClick = this.option(\"allowMoveByClick\");\r\n        if (allowMoveByClick) {\r\n            return this.$element()\r\n        }\r\n        var $target = $(e && e.target);\r\n        var itemsSelector = this._getItemsSelector();\r\n        if (\">\" === itemsSelector[0]) {\r\n            var $items = this._$content().find(itemsSelector);\r\n            if (!$items.is($target)) {\r\n                $target = $target.closest($items)\r\n            }\r\n        }\r\n        return $target\r\n    },\r\n    _getSourceElement() {\r\n        var draggable = this._getSourceDraggable();\r\n        return draggable._$sourceElement\r\n    },\r\n    _pointerDownHandler(e) {\r\n        if (needSkipEvent(e)) {\r\n            return\r\n        }\r\n        var position = {};\r\n        var $element = this.$element();\r\n        var dragDirection = this.option(\"dragDirection\");\r\n        if (\"horizontal\" === dragDirection || \"both\" === dragDirection) {\r\n            position.left = e.pageX - $element.offset().left + locate($element).left - getWidth($element) / 2\r\n        }\r\n        if (\"vertical\" === dragDirection || \"both\" === dragDirection) {\r\n            position.top = e.pageY - $element.offset().top + locate($element).top - getHeight($element) / 2\r\n        }\r\n        this._move(position, $element);\r\n        this._getAction(\"onDragMove\")(this._getEventArgs(e))\r\n    },\r\n    _isValidElement(event, $element) {\r\n        var handle = this.option(\"handle\");\r\n        var $target = $(event.originalEvent && event.originalEvent.target);\r\n        if (handle && !$target.closest(handle).length) {\r\n            return false\r\n        }\r\n        if (!$element.length) {\r\n            return false\r\n        }\r\n        return !$element.is(\".dx-state-disabled, .dx-state-disabled *\")\r\n    },\r\n    _dragStartHandler(e) {\r\n        var $element = this._getDraggableElement(e);\r\n        this.dragInProgress = true;\r\n        if (!this._isValidElement(e, $element)) {\r\n            e.cancel = true;\r\n            return\r\n        }\r\n        if (this._$sourceElement) {\r\n            return\r\n        }\r\n        var dragStartArgs = this._getDragStartArgs(e, $element);\r\n        this._getAction(\"onDragStart\")(dragStartArgs);\r\n        if (dragStartArgs.cancel) {\r\n            e.cancel = true;\r\n            return\r\n        }\r\n        this.option(\"itemData\", dragStartArgs.itemData);\r\n        this._setSourceDraggable();\r\n        this._$sourceElement = $element;\r\n        var initialOffset = $element.offset();\r\n        if (!this._hasClonedDraggable() && this.option(\"autoScroll\")) {\r\n            this._initScrollTop = this._getScrollableScrollTop();\r\n            this._initScrollLeft = this._getScrollableScrollLeft();\r\n            initialOffset = this._getDraggableElementOffset(initialOffset.left, initialOffset.top)\r\n        }\r\n        var $dragElement = this._$dragElement = this._createDragElement($element);\r\n        this._toggleDraggingClass(true);\r\n        this._toggleDragSourceClass(true);\r\n        this._setGestureCoverCursor($dragElement.children());\r\n        var isFixedPosition = \"fixed\" === $dragElement.css(\"position\");\r\n        this._initPosition(extend({}, dragStartArgs, {\r\n            dragElement: $dragElement.get(0),\r\n            initialOffset: isFixedPosition && initialOffset\r\n        }));\r\n        this._getAction(\"onDraggableElementShown\")(_extends(_extends({}, dragStartArgs), {\r\n            dragElement: $dragElement\r\n        }));\r\n        var $area = this._getArea();\r\n        var areaOffset = this._getAreaOffset($area);\r\n        var boundOffset = this._getBoundOffset();\r\n        var areaWidth = getOuterWidth($area);\r\n        var areaHeight = getOuterHeight($area);\r\n        var elementWidth = getWidth($dragElement);\r\n        var elementHeight = getHeight($dragElement);\r\n        var startOffset_left = $dragElement.offset().left - areaOffset.left,\r\n            startOffset_top = $dragElement.offset().top - areaOffset.top;\r\n        if ($area.length) {\r\n            e.maxLeftOffset = startOffset_left - boundOffset.left;\r\n            e.maxRightOffset = areaWidth - startOffset_left - elementWidth - boundOffset.right;\r\n            e.maxTopOffset = startOffset_top - boundOffset.top;\r\n            e.maxBottomOffset = areaHeight - startOffset_top - elementHeight - boundOffset.bottom\r\n        }\r\n        if (this.option(\"autoScroll\")) {\r\n            this._startAnimator()\r\n        }\r\n    },\r\n    _getAreaOffset($area) {\r\n        var offset = $area && positionUtils.offset($area);\r\n        return offset || {\r\n            left: 0,\r\n            top: 0\r\n        }\r\n    },\r\n    _toggleDraggingClass(value) {\r\n        this._$dragElement && this._$dragElement.toggleClass(this._addWidgetPrefix(\"dragging\"), value)\r\n    },\r\n    _toggleDragSourceClass(value, $element) {\r\n        var $sourceElement = $element || this._$sourceElement;\r\n        $sourceElement && $sourceElement.toggleClass(this._addWidgetPrefix(\"source\"), value)\r\n    },\r\n    _setGestureCoverCursor($element) {\r\n        $(\".\".concat(GESTURE_COVER_CLASS)).css(\"cursor\", $element.css(\"cursor\"))\r\n    },\r\n    _getBoundOffset() {\r\n        var boundOffset = this.option(\"boundOffset\");\r\n        if (isFunction(boundOffset)) {\r\n            boundOffset = boundOffset.call(this)\r\n        }\r\n        return quadToObject(boundOffset)\r\n    },\r\n    _getArea() {\r\n        var area = this.option(\"boundary\");\r\n        if (isFunction(area)) {\r\n            area = area.call(this)\r\n        }\r\n        return $(area)\r\n    },\r\n    _getContainer() {\r\n        var container = this.option(\"container\");\r\n        if (void 0 === container) {\r\n            container = viewPort()\r\n        }\r\n        return $(container)\r\n    },\r\n    _getDraggableElementOffset(initialOffsetX, initialOffsetY) {\r\n        var _a, _b, _c, _d;\r\n        var initScrollTop = this._initScrollTop;\r\n        var initScrollLeft = this._initScrollLeft;\r\n        var scrollTop = this._getScrollableScrollTop();\r\n        var scrollLeft = this._getScrollableScrollLeft();\r\n        var elementPosition = $(this.element()).css(\"position\");\r\n        var isFixedPosition = \"fixed\" === elementPosition;\r\n        var result = {\r\n            left: (null !== (_b = null === (_a = this._startPosition) || void 0 === _a ? void 0 : _a.left) && void 0 !== _b ? _b : 0) + initialOffsetX,\r\n            top: (null !== (_d = null === (_c = this._startPosition) || void 0 === _c ? void 0 : _c.top) && void 0 !== _d ? _d : 0) + initialOffsetY\r\n        };\r\n        if (isFixedPosition || this._hasClonedDraggable()) {\r\n            return result\r\n        }\r\n        return {\r\n            left: isNumeric(scrollLeft) ? result.left + scrollLeft - initScrollLeft : result.left,\r\n            top: isNumeric(scrollTop) ? result.top + scrollTop - initScrollTop : result.top\r\n        }\r\n    },\r\n    _hasClonedDraggable() {\r\n        return this.option(\"clone\") || this.option(\"dragTemplate\")\r\n    },\r\n    _dragMoveHandler(e) {\r\n        this._dragMoveArgs = e;\r\n        if (!this._$dragElement) {\r\n            e.cancel = true;\r\n            return\r\n        }\r\n        var offset = this._getDraggableElementOffset(e.offset.x, e.offset.y);\r\n        this._move(offset);\r\n        this._updateScrollable(e);\r\n        var eventArgs = this._getEventArgs(e);\r\n        this._getAction(\"onDragMove\")(eventArgs);\r\n        if (true === eventArgs.cancel) {\r\n            return\r\n        }\r\n        var targetDraggable = this._getTargetDraggable();\r\n        targetDraggable.dragMove(e, scrollBy)\r\n    },\r\n    _updateScrollable(e) {\r\n        if (this.option(\"autoScroll\")) {\r\n            var mousePosition = getMousePosition(e);\r\n            var allObjects = domAdapter.elementsFromPoint(mousePosition.x, mousePosition.y, this.$element().get(0));\r\n            this._verticalScrollHelper.updateScrollable(allObjects, mousePosition);\r\n            this._horizontalScrollHelper.updateScrollable(allObjects, mousePosition)\r\n        }\r\n    },\r\n    _getScrollable($element) {\r\n        var $scrollable;\r\n        $element.parents().toArray().some(parent => {\r\n            var $parent = $(parent);\r\n            if (this._horizontalScrollHelper.isScrollable($parent) || this._verticalScrollHelper.isScrollable($parent)) {\r\n                $scrollable = $parent;\r\n                return true\r\n            }\r\n            return false\r\n        });\r\n        return $scrollable\r\n    },\r\n    _getScrollableScrollTop() {\r\n        var _a, _b;\r\n        return null !== (_b = null === (_a = this._getScrollable($(this.element()))) || void 0 === _a ? void 0 : _a.scrollTop()) && void 0 !== _b ? _b : 0\r\n    },\r\n    _getScrollableScrollLeft() {\r\n        var _a, _b;\r\n        return null !== (_b = null === (_a = this._getScrollable($(this.element()))) || void 0 === _a ? void 0 : _a.scrollLeft()) && void 0 !== _b ? _b : 0\r\n    },\r\n    _defaultActionArgs() {\r\n        var args = this.callBase.apply(this, arguments);\r\n        var component = this.option(\"component\");\r\n        if (component) {\r\n            args.component = component;\r\n            args.element = component.element()\r\n        }\r\n        return args\r\n    },\r\n    _getEventArgs(e) {\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        var targetDraggable = this._getTargetDraggable();\r\n        return {\r\n            event: e,\r\n            itemData: sourceDraggable.option(\"itemData\"),\r\n            itemElement: getPublicElement(sourceDraggable._$sourceElement),\r\n            fromComponent: sourceDraggable.option(\"component\") || sourceDraggable,\r\n            toComponent: targetDraggable.option(\"component\") || targetDraggable,\r\n            fromData: sourceDraggable.option(\"data\"),\r\n            toData: targetDraggable.option(\"data\")\r\n        }\r\n    },\r\n    _getDragStartArgs(e, $itemElement) {\r\n        var args = this._getEventArgs(e);\r\n        return {\r\n            event: args.event,\r\n            itemData: args.itemData,\r\n            itemElement: $itemElement,\r\n            fromData: args.fromData\r\n        }\r\n    },\r\n    _revertItemToInitialPosition() {\r\n        !this._dragElementIsCloned() && this._move(this._initialLocate, this._$sourceElement)\r\n    },\r\n    _dragEndHandler(e) {\r\n        var d = Deferred();\r\n        var dragEndEventArgs = this._getEventArgs(e);\r\n        var dropEventArgs = this._getEventArgs(e);\r\n        var targetDraggable = this._getTargetDraggable();\r\n        var needRevertPosition = true;\r\n        this.dragInProgress = false;\r\n        try {\r\n            this._getAction(\"onDragEnd\")(dragEndEventArgs)\r\n        } finally {\r\n            when(fromPromise(dragEndEventArgs.cancel)).done(cancel => {\r\n                if (!cancel) {\r\n                    if (targetDraggable !== this) {\r\n                        targetDraggable._getAction(\"onDrop\")(dropEventArgs)\r\n                    }\r\n                    if (!dropEventArgs.cancel) {\r\n                        needRevertPosition = false;\r\n                        when(fromPromise(targetDraggable.dragEnd(dragEndEventArgs))).always(d.resolve);\r\n                        return\r\n                    }\r\n                }\r\n                d.resolve()\r\n            }).fail(d.resolve);\r\n            d.done(() => {\r\n                if (needRevertPosition) {\r\n                    this._revertItemToInitialPosition()\r\n                }\r\n                this._resetDragOptions(targetDraggable)\r\n            })\r\n        }\r\n    },\r\n    _isTargetOverAnotherDraggable(e) {\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        if (this === sourceDraggable) {\r\n            return false\r\n        }\r\n        var $dragElement = sourceDraggable._$dragElement;\r\n        var $sourceDraggableElement = sourceDraggable.$element();\r\n        var $targetDraggableElement = this.$element();\r\n        var mousePosition = getMousePosition(e);\r\n        var elements = domAdapter.elementsFromPoint(mousePosition.x, mousePosition.y, this.element());\r\n        var firstWidgetElement = elements.filter(element => {\r\n            var $element = $(element);\r\n            if ($element.hasClass(this._addWidgetPrefix())) {\r\n                return !$element.closest($dragElement).length\r\n            }\r\n            return false\r\n        })[0];\r\n        var $sourceElement = this._getSourceElement();\r\n        var isTargetOverItself = firstWidgetElement === $sourceDraggableElement.get(0);\r\n        var isTargetOverNestedDraggable = $(firstWidgetElement).closest($sourceElement).length;\r\n        return !firstWidgetElement || firstWidgetElement === $targetDraggableElement.get(0) && !isTargetOverItself && !isTargetOverNestedDraggable\r\n    },\r\n    _dragEnterHandler(e) {\r\n        this._fireDragEnterEvent(e);\r\n        if (this._isTargetOverAnotherDraggable(e)) {\r\n            this._setTargetDraggable()\r\n        }\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        sourceDraggable.dragEnter(e)\r\n    },\r\n    _dragLeaveHandler(e) {\r\n        this._fireDragLeaveEvent(e);\r\n        this._resetTargetDraggable();\r\n        if (this !== this._getSourceDraggable()) {\r\n            this.reset()\r\n        }\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        sourceDraggable.dragLeave(e)\r\n    },\r\n    _keydownHandler(e) {\r\n        if (this.dragInProgress && \"Escape\" === e.key) {\r\n            this._keydownEscapeHandler(e)\r\n        }\r\n    },\r\n    _keydownEscapeHandler(e) {\r\n        var $sourceElement = this._getSourceElement();\r\n        if (!$sourceElement) {\r\n            return\r\n        }\r\n        var dragCancelEventArgs = this._getEventArgs(e);\r\n        this._getAction(\"onDragCancel\")(dragCancelEventArgs);\r\n        if (dragCancelEventArgs.cancel) {\r\n            return\r\n        }\r\n        this.dragInProgress = false;\r\n        null === sourceDraggable || void 0 === sourceDraggable ? void 0 : sourceDraggable._toggleDraggingClass(false);\r\n        this._detachEventHandlers();\r\n        this._revertItemToInitialPosition();\r\n        var targetDraggable = this._getTargetDraggable();\r\n        this._resetDragOptions(targetDraggable);\r\n        this._attachEventHandlers()\r\n    },\r\n    _getAction(name) {\r\n        return this[\"_\".concat(name, \"Action\")] || this._createActionByOption(name)\r\n    },\r\n    _getAnonymousTemplateName: () => ANONYMOUS_TEMPLATE_NAME,\r\n    _initTemplates() {\r\n        if (!this.option(\"contentTemplate\")) {\r\n            return\r\n        }\r\n        this._templateManager.addDefaultTemplates({\r\n            content: new EmptyTemplate\r\n        });\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _render() {\r\n        this.callBase();\r\n        this.$element().addClass(this._addWidgetPrefix());\r\n        var transclude = this._templateManager.anonymousTemplateName === this.option(\"contentTemplate\");\r\n        var template = this._getTemplateByOption(\"contentTemplate\");\r\n        if (template) {\r\n            $(template.render({\r\n                container: this.element(),\r\n                transclude: transclude\r\n            }))\r\n        }\r\n    },\r\n    _optionChanged(args) {\r\n        var {\r\n            name: name\r\n        } = args;\r\n        switch (name) {\r\n            case \"onDragStart\":\r\n            case \"onDragMove\":\r\n            case \"onDragEnd\":\r\n            case \"onDrop\":\r\n            case \"onDragEnter\":\r\n            case \"onDragLeave\":\r\n            case \"onDragCancel\":\r\n            case \"onDraggableElementShown\":\r\n                this[\"_\".concat(name, \"Action\")] = this._createActionByOption(name);\r\n                break;\r\n            case \"dragTemplate\":\r\n            case \"contentTemplate\":\r\n            case \"container\":\r\n            case \"clone\":\r\n                break;\r\n            case \"allowMoveByClick\":\r\n            case \"dragDirection\":\r\n            case \"disabled\":\r\n            case \"boundary\":\r\n            case \"filter\":\r\n            case \"immediate\":\r\n                this._resetDragElement();\r\n                this._detachEventHandlers();\r\n                this._attachEventHandlers();\r\n                break;\r\n            case \"onCancelByEsc\":\r\n                this._keydownHandler();\r\n                break;\r\n            case \"autoScroll\":\r\n                this._verticalScrollHelper.reset();\r\n                this._horizontalScrollHelper.reset();\r\n                break;\r\n            case \"scrollSensitivity\":\r\n            case \"scrollSpeed\":\r\n            case \"boundOffset\":\r\n            case \"handle\":\r\n            case \"group\":\r\n            case \"data\":\r\n            case \"itemData\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _getTargetDraggable() {\r\n        return targetDraggable || this\r\n    },\r\n    _getSourceDraggable() {\r\n        return sourceDraggable || this\r\n    },\r\n    _setTargetDraggable() {\r\n        var currentGroup = this.option(\"group\");\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        if (currentGroup && currentGroup === sourceDraggable.option(\"group\")) {\r\n            targetDraggable = this\r\n        }\r\n    },\r\n    _setSourceDraggable() {\r\n        sourceDraggable = this\r\n    },\r\n    _resetSourceDraggable() {\r\n        sourceDraggable = null\r\n    },\r\n    _resetTargetDraggable() {\r\n        targetDraggable = null\r\n    },\r\n    _resetDragOptions(targetDraggable) {\r\n        this.reset();\r\n        targetDraggable.reset();\r\n        this._stopAnimator();\r\n        this._horizontalScrollHelper.reset();\r\n        this._verticalScrollHelper.reset();\r\n        this._resetDragElement();\r\n        this._resetSourceElement();\r\n        this._resetTargetDraggable();\r\n        this._resetSourceDraggable()\r\n    },\r\n    _dispose() {\r\n        this.callBase();\r\n        this._detachEventHandlers();\r\n        this._resetDragElement();\r\n        this._resetTargetDraggable();\r\n        this._resetSourceDraggable();\r\n        this._$sourceElement = null;\r\n        this._stopAnimator()\r\n    },\r\n    _fireDragEnterEvent(sourceEvent) {\r\n        var args = this._getEventArgs(sourceEvent);\r\n        this._getAction(\"onDragEnter\")(args)\r\n    },\r\n    _fireDragLeaveEvent(sourceEvent) {\r\n        var args = this._getEventArgs(sourceEvent);\r\n        this._getAction(\"onDragLeave\")(args)\r\n    }\r\n});\r\nregisterComponent(DRAGGABLE, Draggable);\r\nexport default Draggable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}