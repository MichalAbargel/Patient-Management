{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/date_box/ui.date_box.base.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getWindow, hasWindow } from \"../../core/utils/window\";\nvar window = getWindow();\nimport { isDate as isDateType, isString, isNumeric } from \"../../core/utils/type\";\nimport { createTextElementHiddenCopy } from \"../../core/utils/dom\";\nimport { each } from \"../../core/utils/iterator\";\nimport { extend } from \"../../core/utils/extend\";\nimport { inputType } from \"../../core/utils/support\";\nimport devices from \"../../core/devices\";\nimport config from \"../../core/config\";\nimport dateUtils from \"../../core/utils/date\";\nimport uiDateUtils from \"./ui.date_utils\";\nimport dateSerialization from \"../../core/utils/date_serialization\";\nimport DropDownEditor from \"../drop_down_editor/ui.drop_down_editor\";\nimport dateLocalization from \"../../localization/date\";\nimport messageLocalization from \"../../localization/message\";\nimport Calendar from \"./ui.date_box.strategy.calendar\";\nimport DateView from \"./ui.date_box.strategy.date_view\";\nimport Native from \"./ui.date_box.strategy.native\";\nimport CalendarWithTime from \"./ui.date_box.strategy.calendar_with_time\";\nimport List from \"./ui.date_box.strategy.list\";\nvar DATEBOX_CLASS = \"dx-datebox\";\nvar DX_AUTO_WIDTH_CLASS = \"dx-auto-width\";\nvar DX_INVALID_BADGE_CLASS = \"dx-show-invalid-badge\";\nvar DX_CLEAR_BUTTON_CLASS = \"dx-clear-button-area\";\nvar DATEBOX_WRAPPER_CLASS = \"dx-datebox-wrapper\";\nvar DROPDOWNEDITOR_OVERLAY_CLASS = \"dx-dropdowneditor-overlay\";\nvar PICKER_TYPE = {\n  calendar: \"calendar\",\n  rollers: \"rollers\",\n  list: \"list\",\n  native: \"native\"\n};\nvar TYPE = {\n  date: \"date\",\n  datetime: \"datetime\",\n  time: \"time\"\n};\nvar STRATEGY_NAME = {\n  calendar: \"Calendar\",\n  dateView: \"DateView\",\n  native: \"Native\",\n  calendarWithTime: \"CalendarWithTime\",\n  list: \"List\"\n};\nvar STRATEGY_CLASSES = {\n  Calendar: Calendar,\n  DateView: DateView,\n  Native: Native,\n  CalendarWithTime: CalendarWithTime,\n  List: List\n};\nvar DateBox = DropDownEditor.inherit({\n  _supportedKeys: function () {\n    return extend(this.callBase(), this._strategy.supportedKeys());\n  },\n  _renderButtonContainers: function () {\n    this.callBase.apply(this, arguments);\n    this._strategy.customizeButtons();\n  },\n  _getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      type: \"date\",\n      showAnalogClock: true,\n      value: null,\n      dateSerializationFormat: void 0,\n      min: void 0,\n      max: void 0,\n      displayFormat: null,\n      interval: 30,\n      disabledDates: null,\n      pickerType: PICKER_TYPE.calendar,\n      invalidDateMessage: messageLocalization.format(\"dxDateBox-validation-datetime\"),\n      dateOutOfRangeMessage: messageLocalization.format(\"validation-range\"),\n      applyButtonText: messageLocalization.format(\"OK\"),\n      adaptivityEnabled: false,\n      calendarOptions: {},\n      useHiddenSubmitElement: true,\n      _showValidationIcon: true\n    });\n  },\n  _defaultOptionsRules: function () {\n    return this.callBase().concat([{\n      device: {\n        platform: \"ios\"\n      },\n      options: {\n        \"dropDownOptions.showTitle\": true\n      }\n    }, {\n      device: {\n        platform: \"android\"\n      },\n      options: {\n        buttonsLocation: \"bottom after\"\n      }\n    }, {\n      device: function () {\n        var realDevice = devices.real();\n        var platform = realDevice.platform;\n        return \"ios\" === platform || \"android\" === platform;\n      },\n      options: {\n        pickerType: PICKER_TYPE.native\n      }\n    }, {\n      device: {\n        platform: \"generic\",\n        deviceType: \"desktop\"\n      },\n      options: {\n        buttonsLocation: \"bottom after\"\n      }\n    }]);\n  },\n  _initOptions: function (options) {\n    this._userOptions = extend({}, options);\n    this.callBase(options);\n    this._updatePickerOptions();\n  },\n  _updatePickerOptions: function () {\n    var pickerType = this.option(\"pickerType\");\n    var type = this.option(\"type\");\n    if (pickerType === PICKER_TYPE.list && (type === TYPE.datetime || type === TYPE.date)) {\n      pickerType = PICKER_TYPE.calendar;\n    }\n    if (type === TYPE.time && pickerType === PICKER_TYPE.calendar) {\n      pickerType = PICKER_TYPE.list;\n    }\n    this.option(\"showDropDownButton\", \"generic\" !== devices.real().platform || pickerType !== PICKER_TYPE.native);\n    this._pickerType = pickerType;\n  },\n  _init: function () {\n    this._initStrategy();\n    this.option(extend({}, this._strategy.getDefaultOptions(), this._userOptions));\n    delete this._userOptions;\n    this.callBase();\n  },\n  _toLowerCaseFirstLetter: function (string) {\n    return string.charAt(0).toLowerCase() + string.substr(1);\n  },\n  _initStrategy: function () {\n    var strategyName = this._getStrategyName(this._getFormatType());\n    var strategy = STRATEGY_CLASSES[strategyName];\n    if (!(this._strategy && this._strategy.NAME === strategyName)) {\n      this._strategy = new strategy(this);\n    }\n  },\n  _getFormatType: function () {\n    var currentType = this.option(\"type\");\n    var isTime = /h|m|s/g.test(currentType);\n    var isDate = /d|M|Y/g.test(currentType);\n    var type = \"\";\n    if (isDate) {\n      type += TYPE.date;\n    }\n    if (isTime) {\n      type += TYPE.time;\n    }\n    return type;\n  },\n  _getStrategyName: function (type) {\n    var pickerType = this._pickerType;\n    if (pickerType === PICKER_TYPE.rollers) {\n      return STRATEGY_NAME.dateView;\n    } else if (pickerType === PICKER_TYPE.native) {\n      return STRATEGY_NAME.native;\n    }\n    if (type === TYPE.date) {\n      return STRATEGY_NAME.calendar;\n    }\n    if (type === TYPE.datetime) {\n      return STRATEGY_NAME.calendarWithTime;\n    }\n    return STRATEGY_NAME.list;\n  },\n  _initMarkup: function () {\n    this.$element().addClass(DATEBOX_CLASS);\n    this.callBase();\n    this._refreshFormatClass();\n    this._refreshPickerTypeClass();\n    this._strategy.renderInputMinMax(this._input());\n  },\n  _render: function () {\n    this.callBase();\n    this._formatValidationIcon();\n  },\n  _renderDimensions: function () {\n    this.callBase();\n    this.$element().toggleClass(DX_AUTO_WIDTH_CLASS, !this.option(\"width\"));\n    this._updatePopupWidth();\n    this._updatePopupHeight();\n  },\n  _dimensionChanged: function () {\n    this.callBase();\n    this._updatePopupHeight();\n  },\n  _updatePopupHeight: function () {\n    if (this._popup) {\n      var _this$_strategy$_upda, _this$_strategy;\n      null === (_this$_strategy$_upda = (_this$_strategy = this._strategy)._updatePopupHeight) || void 0 === _this$_strategy$_upda ? void 0 : _this$_strategy$_upda.call(_this$_strategy);\n    }\n  },\n  _refreshFormatClass: function () {\n    var $element = this.$element();\n    each(TYPE, function (_, item) {\n      $element.removeClass(DATEBOX_CLASS + \"-\" + item);\n    });\n    $element.addClass(DATEBOX_CLASS + \"-\" + this.option(\"type\"));\n  },\n  _refreshPickerTypeClass: function () {\n    var $element = this.$element();\n    each(PICKER_TYPE, function (_, item) {\n      $element.removeClass(DATEBOX_CLASS + \"-\" + item);\n    });\n    $element.addClass(DATEBOX_CLASS + \"-\" + this._pickerType);\n  },\n  _formatValidationIcon: function () {\n    if (!hasWindow()) {\n      return;\n    }\n    var inputElement = this._input().get(0);\n    var isRtlEnabled = this.option(\"rtlEnabled\");\n    var clearButtonWidth = this._getClearButtonWidth();\n    var longestElementDimensions = this._getLongestElementDimensions();\n    var curWidth = parseFloat(window.getComputedStyle(inputElement).width) - clearButtonWidth;\n    var shouldHideValidationIcon = longestElementDimensions.width > curWidth;\n    var style = inputElement.style;\n    this.$element().toggleClass(DX_INVALID_BADGE_CLASS, !shouldHideValidationIcon && this.option(\"_showValidationIcon\"));\n    if (shouldHideValidationIcon) {\n      if (void 0 === this._storedPadding) {\n        this._storedPadding = isRtlEnabled ? longestElementDimensions.leftPadding : longestElementDimensions.rightPadding;\n      }\n      isRtlEnabled ? style.paddingLeft = 0 : style.paddingRight = 0;\n    } else {\n      isRtlEnabled ? style.paddingLeft = this._storedPadding + \"px\" : style.paddingRight = this._storedPadding + \"px\";\n    }\n  },\n  _getClearButtonWidth: function () {\n    var clearButtonWidth = 0;\n    if (this._isClearButtonVisible() && \"\" === this._input().val()) {\n      var clearButtonElement = this.$element().find(\".\" + DX_CLEAR_BUTTON_CLASS).get(0);\n      clearButtonWidth = parseFloat(window.getComputedStyle(clearButtonElement).width);\n    }\n    return clearButtonWidth;\n  },\n  _getLongestElementDimensions: function () {\n    var format = this._strategy.getDisplayFormat(this.option(\"displayFormat\"));\n    var longestValue = dateLocalization.format(uiDateUtils.getLongestDate(format, dateLocalization.getMonthNames(), dateLocalization.getDayNames()), format);\n    var $input = this._input();\n    var inputElement = $input.get(0);\n    var $longestValueElement = createTextElementHiddenCopy($input, longestValue);\n    var isPaddingStored = void 0 !== this._storedPadding;\n    var storedPadding = !isPaddingStored ? 0 : this._storedPadding;\n    $longestValueElement.appendTo(this.$element());\n    var elementWidth = parseFloat(window.getComputedStyle($longestValueElement.get(0)).width);\n    var rightPadding = parseFloat(window.getComputedStyle(inputElement).paddingRight);\n    var leftPadding = parseFloat(window.getComputedStyle(inputElement).paddingLeft);\n    var necessaryWidth = elementWidth + leftPadding + rightPadding + storedPadding;\n    $longestValueElement.remove();\n    return {\n      width: necessaryWidth,\n      leftPadding: leftPadding,\n      rightPadding: rightPadding\n    };\n  },\n  _getKeyboardListeners() {\n    return this.callBase().concat([this._strategy && this._strategy.getKeyboardListener()]);\n  },\n  _renderPopup: function () {\n    this.callBase();\n    this._popup.$wrapper().addClass(DATEBOX_WRAPPER_CLASS);\n    this._renderPopupWrapper();\n  },\n  _getPopupToolbarItems() {\n    var _this$_strategy$_getP, _this$_strategy$_getP2, _this$_strategy2;\n    var defaultItems = this.callBase();\n    return null !== (_this$_strategy$_getP = null === (_this$_strategy$_getP2 = (_this$_strategy2 = this._strategy)._getPopupToolbarItems) || void 0 === _this$_strategy$_getP2 ? void 0 : _this$_strategy$_getP2.call(_this$_strategy2, defaultItems)) && void 0 !== _this$_strategy$_getP ? _this$_strategy$_getP : defaultItems;\n  },\n  _popupConfig: function () {\n    var popupConfig = this.callBase();\n    return extend(this._strategy.popupConfig(popupConfig), {\n      title: this._getPopupTitle(),\n      dragEnabled: false\n    });\n  },\n  _renderPopupWrapper: function () {\n    if (!this._popup) {\n      return;\n    }\n    var $element = this.$element();\n    var classPostfixes = extend({}, TYPE, PICKER_TYPE);\n    each(classPostfixes, function (_, item) {\n      $element.removeClass(DATEBOX_WRAPPER_CLASS + \"-\" + item);\n    }.bind(this));\n    this._popup.$wrapper().addClass(DATEBOX_WRAPPER_CLASS + \"-\" + this.option(\"type\")).addClass(DATEBOX_WRAPPER_CLASS + \"-\" + this._pickerType).addClass(DROPDOWNEDITOR_OVERLAY_CLASS);\n  },\n  _renderPopupContent: function () {\n    this.callBase();\n    this._strategy.renderPopupContent();\n  },\n  _getFirstPopupElement: function () {\n    return this._strategy.getFirstPopupElement() || this.callBase();\n  },\n  _getLastPopupElement: function () {\n    return this._strategy.getLastPopupElement() || this.callBase();\n  },\n  _popupShowingHandler: function () {\n    this.callBase();\n    this._strategy.popupShowingHandler();\n  },\n  _popupShownHandler: function () {\n    this.callBase();\n    this._strategy.renderOpenedState();\n  },\n  _popupHiddenHandler: function () {\n    this.callBase();\n    this._strategy.renderOpenedState();\n    this._strategy.popupHiddenHandler();\n  },\n  _visibilityChanged: function (visible) {\n    if (visible) {\n      this._formatValidationIcon();\n    }\n  },\n  _clearValueHandler: function (e) {\n    this.option(\"text\", \"\");\n    this.callBase(e);\n  },\n  _readOnlyPropValue: function () {\n    if (this._pickerType === PICKER_TYPE.rollers) {\n      return true;\n    }\n    var platform = devices.real().platform;\n    var isCustomValueDisabled = this._isNativeType() && (\"ios\" === platform || \"android\" === platform);\n    if (isCustomValueDisabled) {\n      return this.option(\"readOnly\");\n    }\n    return this.callBase();\n  },\n  _isClearButtonVisible: function () {\n    return this.callBase() && !this._isNativeType();\n  },\n  _renderValue: function () {\n    var value = this.dateOption(\"value\");\n    this.option(\"text\", this._getDisplayedText(value));\n    this._strategy.renderValue();\n    return this.callBase();\n  },\n  _setSubmitValue: function () {\n    var value = this.dateOption(\"value\");\n    var dateSerializationFormat = this.option(\"dateSerializationFormat\");\n    var submitFormat = uiDateUtils.SUBMIT_FORMATS_MAP[this.option(\"type\")];\n    var submitValue = dateSerializationFormat ? dateSerialization.serializeDate(value, dateSerializationFormat) : uiDateUtils.toStandardDateFormat(value, submitFormat);\n    this._getSubmitElement().val(submitValue);\n  },\n  _getDisplayedText: function (value) {\n    var mode = this.option(\"mode\");\n    var displayedText;\n    if (\"text\" === mode) {\n      var displayFormat = this._strategy.getDisplayFormat(this.option(\"displayFormat\"));\n      displayedText = dateLocalization.format(value, displayFormat);\n    } else {\n      var format = this._getFormatByMode(mode);\n      if (format) {\n        displayedText = dateLocalization.format(value, format);\n      } else {\n        displayedText = uiDateUtils.toStandardDateFormat(value, mode);\n      }\n    }\n    return displayedText;\n  },\n  _getFormatByMode: function (mode) {\n    return inputType(mode) ? null : uiDateUtils.FORMATS_MAP[mode];\n  },\n  _valueChangeEventHandler: function (e) {\n    var {\n      text: text,\n      type: type,\n      validationError: validationError\n    } = this.option();\n    var currentValue = this.dateOption(\"value\");\n    if (text === this._getDisplayedText(currentValue)) {\n      this._recallInternalValidation(currentValue, validationError);\n      return;\n    }\n    var parsedDate = this._getParsedDate(text);\n    var value = null !== currentValue && void 0 !== currentValue ? currentValue : this._getDateByDefault();\n    var newValue = uiDateUtils.mergeDates(value, parsedDate, type);\n    var date = parsedDate && \"time\" === type ? newValue : parsedDate;\n    if (this._applyInternalValidation(date).isValid) {\n      var displayedText = this._getDisplayedText(newValue);\n      if (value && newValue && value.getTime() === newValue.getTime() && displayedText !== text) {\n        this._renderValue();\n      } else {\n        this.dateValue(newValue, e);\n      }\n    }\n  },\n  _recallInternalValidation(value, validationError) {\n    if (!validationError || validationError.editorSpecific) {\n      this._applyInternalValidation(value);\n      this._applyCustomValidation(value);\n    }\n  },\n  _getDateByDefault: function () {\n    return this._strategy.useCurrentDateByDefault() && this._strategy.getDefaultDate();\n  },\n  _getParsedDate: function (text) {\n    var displayFormat = this._strategy.getDisplayFormat(this.option(\"displayFormat\"));\n    var parsedText = this._strategy.getParsedText(text, displayFormat);\n    return null !== parsedText && void 0 !== parsedText ? parsedText : void 0;\n  },\n  _applyInternalValidation(value) {\n    var text = this.option(\"text\");\n    var hasText = !!text && null !== value;\n    var isDate = !!value && isDateType(value) && !isNaN(value.getTime());\n    var isDateInRange = isDate && dateUtils.dateInRange(value, this.dateOption(\"min\"), this.dateOption(\"max\"), this.option(\"type\"));\n    var isValid = !hasText && !value || isDateInRange;\n    var validationMessage = \"\";\n    if (!isDate) {\n      validationMessage = this.option(\"invalidDateMessage\");\n    } else if (!isDateInRange) {\n      validationMessage = this.option(\"dateOutOfRangeMessage\");\n    }\n    this._updateInternalValidationState(isValid, validationMessage);\n    return {\n      isValid: isValid,\n      isDate: isDate\n    };\n  },\n  _updateInternalValidationState(isValid, validationMessage) {\n    this.option({\n      isValid: isValid,\n      validationError: isValid ? null : {\n        editorSpecific: true,\n        message: validationMessage\n      }\n    });\n  },\n  _applyCustomValidation: function (value) {\n    this.validationRequest.fire({\n      editor: this,\n      value: this._serializeDate(value)\n    });\n  },\n  _isValueChanged: function (newValue) {\n    var oldValue = this.dateOption(\"value\");\n    var oldTime = oldValue && oldValue.getTime();\n    var newTime = newValue && newValue.getTime();\n    return oldTime !== newTime;\n  },\n  _isTextChanged: function (newValue) {\n    var oldText = this.option(\"text\");\n    var newText = newValue && this._getDisplayedText(newValue) || \"\";\n    return oldText !== newText;\n  },\n  _renderProps: function () {\n    this.callBase();\n    this._input().attr(\"autocomplete\", \"off\");\n  },\n  _renderOpenedState: function () {\n    if (!this._isNativeType()) {\n      this.callBase();\n    }\n    if (this._strategy.isAdaptivityChanged()) {\n      this._refreshStrategy();\n    }\n  },\n  _getPopupTitle: function () {\n    var placeholder = this.option(\"placeholder\");\n    if (placeholder) {\n      return placeholder;\n    }\n    var type = this.option(\"type\");\n    if (type === TYPE.time) {\n      return messageLocalization.format(\"dxDateBox-simulatedDataPickerTitleTime\");\n    }\n    if (type === TYPE.date || type === TYPE.datetime) {\n      return messageLocalization.format(\"dxDateBox-simulatedDataPickerTitleDate\");\n    }\n    return \"\";\n  },\n  _refreshStrategy: function () {\n    this._strategy.dispose();\n    this._initStrategy();\n    this.option(this._strategy.getDefaultOptions());\n    this._refresh();\n  },\n  _applyButtonHandler: function (e) {\n    var value = this._strategy.getValue();\n    this.dateValue(value, e.event);\n    this.callBase();\n  },\n  _dispose: function () {\n    var _this$_strategy3;\n    this.callBase();\n    null === (_this$_strategy3 = this._strategy) || void 0 === _this$_strategy3 ? void 0 : _this$_strategy3.dispose();\n  },\n  _isNativeType: function () {\n    return this._pickerType === PICKER_TYPE.native;\n  },\n  _updatePopupTitle: function () {\n    var _this$_popup;\n    null === (_this$_popup = this._popup) || void 0 === _this$_popup ? void 0 : _this$_popup.option(\"title\", this._getPopupTitle());\n  },\n  _optionChanged: function (args) {\n    switch (args.name) {\n      case \"showClearButton\":\n      case \"buttons\":\n        this.callBase.apply(this, arguments);\n        this._formatValidationIcon();\n        break;\n      case \"pickerType\":\n        this._updatePickerOptions({\n          pickerType: args.value\n        });\n        this._refreshStrategy();\n        this._refreshPickerTypeClass();\n        this._invalidate();\n        break;\n      case \"type\":\n        this._updatePickerOptions({\n          format: args.value\n        });\n        this._refreshStrategy();\n        this._refreshFormatClass();\n        this._renderPopupWrapper();\n        this._formatValidationIcon();\n        this._updateValue();\n        break;\n      case \"placeholder\":\n        this.callBase.apply(this, arguments);\n        this._updatePopupTitle();\n        break;\n      case \"min\":\n      case \"max\":\n        var isValid = this.option(\"isValid\");\n        this._applyInternalValidation(this.dateOption(\"value\"));\n        if (!isValid) {\n          this._applyCustomValidation(this.dateOption(\"value\"));\n        }\n        this._invalidate();\n        break;\n      case \"dateSerializationFormat\":\n      case \"interval\":\n      case \"disabledDates\":\n      case \"calendarOptions\":\n        this._invalidate();\n        break;\n      case \"displayFormat\":\n        this.option(\"text\", this._getDisplayedText(this.dateOption(\"value\")));\n        this._renderInputValue();\n        break;\n      case \"text\":\n        this._strategy.textChangedHandler(args.value);\n        this.callBase.apply(this, arguments);\n        break;\n      case \"isValid\":\n        this.callBase.apply(this, arguments);\n        this._formatValidationIcon();\n        break;\n      case \"showDropDownButton\":\n        this._formatValidationIcon();\n        this.callBase.apply(this, arguments);\n        break;\n      case \"readOnly\":\n        this.callBase.apply(this, arguments);\n        this._formatValidationIcon();\n        break;\n      case \"todayButtonText\":\n        this._setPopupOption(\"toolbarItems\", this._getPopupToolbarItems());\n        break;\n      case \"invalidDateMessage\":\n      case \"dateOutOfRangeMessage\":\n      case \"adaptivityEnabled\":\n      case \"showAnalogClock\":\n      case \"_showValidationIcon\":\n        break;\n      default:\n        this.callBase.apply(this, arguments);\n    }\n  },\n  _getSerializationFormat: function () {\n    var value = this.option(\"value\");\n    if (this.option(\"dateSerializationFormat\") && config().forceIsoDateParsing) {\n      return this.option(\"dateSerializationFormat\");\n    }\n    if (isNumeric(value)) {\n      return \"number\";\n    }\n    if (!isString(value)) {\n      return;\n    }\n    return dateSerialization.getDateSerializationFormat(value);\n  },\n  _updateValue: function (value) {\n    this.callBase();\n    this._applyInternalValidation(null !== value && void 0 !== value ? value : this.dateOption(\"value\"));\n  },\n  dateValue: function (value, dxEvent) {\n    var isValueChanged = this._isValueChanged(value);\n    if (isValueChanged && dxEvent) {\n      this._saveValueChangeEvent(dxEvent);\n    }\n    if (!isValueChanged) {\n      if (this._isTextChanged(value)) {\n        this._updateValue(value);\n      } else if (\"\" === this.option(\"text\")) {\n        this._applyCustomValidation(value);\n      }\n    }\n    return this.dateOption(\"value\", value);\n  },\n  dateOption: function (optionName, value) {\n    if (1 === arguments.length) {\n      return dateSerialization.deserializeDate(this.option(optionName));\n    }\n    this.option(optionName, this._serializeDate(value));\n  },\n  _serializeDate: function (date) {\n    var serializationFormat = this._getSerializationFormat();\n    return dateSerialization.serializeDate(date, serializationFormat);\n  },\n  _clearValue: function () {\n    var value = this.option(\"value\");\n    this.callBase();\n    if (null === value) {\n      this._applyCustomValidation(null);\n    }\n  },\n  reset: function () {\n    var value = this.option(\"value\");\n    this.callBase();\n    if (null === value) {\n      this._applyInternalValidation(null);\n    }\n  }\n});\nexport default DateBox;","map":{"version":3,"names":["getWindow","hasWindow","window","isDate","isDateType","isString","isNumeric","createTextElementHiddenCopy","each","extend","inputType","devices","config","dateUtils","uiDateUtils","dateSerialization","DropDownEditor","dateLocalization","messageLocalization","Calendar","DateView","Native","CalendarWithTime","List","DATEBOX_CLASS","DX_AUTO_WIDTH_CLASS","DX_INVALID_BADGE_CLASS","DX_CLEAR_BUTTON_CLASS","DATEBOX_WRAPPER_CLASS","DROPDOWNEDITOR_OVERLAY_CLASS","PICKER_TYPE","calendar","rollers","list","native","TYPE","date","datetime","time","STRATEGY_NAME","dateView","calendarWithTime","STRATEGY_CLASSES","DateBox","inherit","_supportedKeys","callBase","_strategy","supportedKeys","_renderButtonContainers","apply","arguments","customizeButtons","_getDefaultOptions","type","showAnalogClock","value","dateSerializationFormat","min","max","displayFormat","interval","disabledDates","pickerType","invalidDateMessage","format","dateOutOfRangeMessage","applyButtonText","adaptivityEnabled","calendarOptions","useHiddenSubmitElement","_showValidationIcon","_defaultOptionsRules","concat","device","platform","options","buttonsLocation","realDevice","real","deviceType","_initOptions","_userOptions","_updatePickerOptions","option","_pickerType","_init","_initStrategy","getDefaultOptions","_toLowerCaseFirstLetter","string","charAt","toLowerCase","substr","strategyName","_getStrategyName","_getFormatType","strategy","NAME","currentType","isTime","test","_initMarkup","$element","addClass","_refreshFormatClass","_refreshPickerTypeClass","renderInputMinMax","_input","_render","_formatValidationIcon","_renderDimensions","toggleClass","_updatePopupWidth","_updatePopupHeight","_dimensionChanged","_popup","_this$_strategy$_upda","_this$_strategy","call","_","item","removeClass","inputElement","get","isRtlEnabled","clearButtonWidth","_getClearButtonWidth","longestElementDimensions","_getLongestElementDimensions","curWidth","parseFloat","getComputedStyle","width","shouldHideValidationIcon","style","_storedPadding","leftPadding","rightPadding","paddingLeft","paddingRight","_isClearButtonVisible","val","clearButtonElement","find","getDisplayFormat","longestValue","getLongestDate","getMonthNames","getDayNames","$input","$longestValueElement","isPaddingStored","storedPadding","appendTo","elementWidth","necessaryWidth","remove","_getKeyboardListeners","getKeyboardListener","_renderPopup","$wrapper","_renderPopupWrapper","_getPopupToolbarItems","_this$_strategy$_getP","_this$_strategy$_getP2","_this$_strategy2","defaultItems","_popupConfig","popupConfig","title","_getPopupTitle","dragEnabled","classPostfixes","bind","_renderPopupContent","renderPopupContent","_getFirstPopupElement","getFirstPopupElement","_getLastPopupElement","getLastPopupElement","_popupShowingHandler","popupShowingHandler","_popupShownHandler","renderOpenedState","_popupHiddenHandler","popupHiddenHandler","_visibilityChanged","visible","_clearValueHandler","e","_readOnlyPropValue","isCustomValueDisabled","_isNativeType","_renderValue","dateOption","_getDisplayedText","renderValue","_setSubmitValue","submitFormat","SUBMIT_FORMATS_MAP","submitValue","serializeDate","toStandardDateFormat","_getSubmitElement","mode","displayedText","_getFormatByMode","FORMATS_MAP","_valueChangeEventHandler","text","validationError","currentValue","_recallInternalValidation","parsedDate","_getParsedDate","_getDateByDefault","newValue","mergeDates","_applyInternalValidation","isValid","getTime","dateValue","editorSpecific","_applyCustomValidation","useCurrentDateByDefault","getDefaultDate","parsedText","getParsedText","hasText","isNaN","isDateInRange","dateInRange","validationMessage","_updateInternalValidationState","message","validationRequest","fire","editor","_serializeDate","_isValueChanged","oldValue","oldTime","newTime","_isTextChanged","oldText","newText","_renderProps","attr","_renderOpenedState","isAdaptivityChanged","_refreshStrategy","placeholder","dispose","_refresh","_applyButtonHandler","getValue","event","_dispose","_this$_strategy3","_updatePopupTitle","_this$_popup","_optionChanged","args","name","_invalidate","_updateValue","_renderInputValue","textChangedHandler","_setPopupOption","_getSerializationFormat","forceIsoDateParsing","getDateSerializationFormat","dxEvent","isValueChanged","_saveValueChangeEvent","optionName","length","deserializeDate","serializationFormat","_clearValue","reset"],"sources":["C:/Users/Michal Abargel/Desktop/FULLSTACK_PROJECTS/PrivateLessones/PL/client/gui/node_modules/devextreme/esm/ui/date_box/ui.date_box.base.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/date_box/ui.date_box.base.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getWindow,\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nvar window = getWindow();\r\nimport {\r\n    isDate as isDateType,\r\n    isString,\r\n    isNumeric\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    createTextElementHiddenCopy\r\n} from \"../../core/utils/dom\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    inputType\r\n} from \"../../core/utils/support\";\r\nimport devices from \"../../core/devices\";\r\nimport config from \"../../core/config\";\r\nimport dateUtils from \"../../core/utils/date\";\r\nimport uiDateUtils from \"./ui.date_utils\";\r\nimport dateSerialization from \"../../core/utils/date_serialization\";\r\nimport DropDownEditor from \"../drop_down_editor/ui.drop_down_editor\";\r\nimport dateLocalization from \"../../localization/date\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport Calendar from \"./ui.date_box.strategy.calendar\";\r\nimport DateView from \"./ui.date_box.strategy.date_view\";\r\nimport Native from \"./ui.date_box.strategy.native\";\r\nimport CalendarWithTime from \"./ui.date_box.strategy.calendar_with_time\";\r\nimport List from \"./ui.date_box.strategy.list\";\r\nvar DATEBOX_CLASS = \"dx-datebox\";\r\nvar DX_AUTO_WIDTH_CLASS = \"dx-auto-width\";\r\nvar DX_INVALID_BADGE_CLASS = \"dx-show-invalid-badge\";\r\nvar DX_CLEAR_BUTTON_CLASS = \"dx-clear-button-area\";\r\nvar DATEBOX_WRAPPER_CLASS = \"dx-datebox-wrapper\";\r\nvar DROPDOWNEDITOR_OVERLAY_CLASS = \"dx-dropdowneditor-overlay\";\r\nvar PICKER_TYPE = {\r\n    calendar: \"calendar\",\r\n    rollers: \"rollers\",\r\n    list: \"list\",\r\n    native: \"native\"\r\n};\r\nvar TYPE = {\r\n    date: \"date\",\r\n    datetime: \"datetime\",\r\n    time: \"time\"\r\n};\r\nvar STRATEGY_NAME = {\r\n    calendar: \"Calendar\",\r\n    dateView: \"DateView\",\r\n    native: \"Native\",\r\n    calendarWithTime: \"CalendarWithTime\",\r\n    list: \"List\"\r\n};\r\nvar STRATEGY_CLASSES = {\r\n    Calendar: Calendar,\r\n    DateView: DateView,\r\n    Native: Native,\r\n    CalendarWithTime: CalendarWithTime,\r\n    List: List\r\n};\r\nvar DateBox = DropDownEditor.inherit({\r\n    _supportedKeys: function() {\r\n        return extend(this.callBase(), this._strategy.supportedKeys())\r\n    },\r\n    _renderButtonContainers: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._strategy.customizeButtons()\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            type: \"date\",\r\n            showAnalogClock: true,\r\n            value: null,\r\n            dateSerializationFormat: void 0,\r\n            min: void 0,\r\n            max: void 0,\r\n            displayFormat: null,\r\n            interval: 30,\r\n            disabledDates: null,\r\n            pickerType: PICKER_TYPE.calendar,\r\n            invalidDateMessage: messageLocalization.format(\"dxDateBox-validation-datetime\"),\r\n            dateOutOfRangeMessage: messageLocalization.format(\"validation-range\"),\r\n            applyButtonText: messageLocalization.format(\"OK\"),\r\n            adaptivityEnabled: false,\r\n            calendarOptions: {},\r\n            useHiddenSubmitElement: true,\r\n            _showValidationIcon: true\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: {\r\n                platform: \"ios\"\r\n            },\r\n            options: {\r\n                \"dropDownOptions.showTitle\": true\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"android\"\r\n            },\r\n            options: {\r\n                buttonsLocation: \"bottom after\"\r\n            }\r\n        }, {\r\n            device: function() {\r\n                var realDevice = devices.real();\r\n                var platform = realDevice.platform;\r\n                return \"ios\" === platform || \"android\" === platform\r\n            },\r\n            options: {\r\n                pickerType: PICKER_TYPE.native\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"generic\",\r\n                deviceType: \"desktop\"\r\n            },\r\n            options: {\r\n                buttonsLocation: \"bottom after\"\r\n            }\r\n        }])\r\n    },\r\n    _initOptions: function(options) {\r\n        this._userOptions = extend({}, options);\r\n        this.callBase(options);\r\n        this._updatePickerOptions()\r\n    },\r\n    _updatePickerOptions: function() {\r\n        var pickerType = this.option(\"pickerType\");\r\n        var type = this.option(\"type\");\r\n        if (pickerType === PICKER_TYPE.list && (type === TYPE.datetime || type === TYPE.date)) {\r\n            pickerType = PICKER_TYPE.calendar\r\n        }\r\n        if (type === TYPE.time && pickerType === PICKER_TYPE.calendar) {\r\n            pickerType = PICKER_TYPE.list\r\n        }\r\n        this.option(\"showDropDownButton\", \"generic\" !== devices.real().platform || pickerType !== PICKER_TYPE.native);\r\n        this._pickerType = pickerType\r\n    },\r\n    _init: function() {\r\n        this._initStrategy();\r\n        this.option(extend({}, this._strategy.getDefaultOptions(), this._userOptions));\r\n        delete this._userOptions;\r\n        this.callBase()\r\n    },\r\n    _toLowerCaseFirstLetter: function(string) {\r\n        return string.charAt(0).toLowerCase() + string.substr(1)\r\n    },\r\n    _initStrategy: function() {\r\n        var strategyName = this._getStrategyName(this._getFormatType());\r\n        var strategy = STRATEGY_CLASSES[strategyName];\r\n        if (!(this._strategy && this._strategy.NAME === strategyName)) {\r\n            this._strategy = new strategy(this)\r\n        }\r\n    },\r\n    _getFormatType: function() {\r\n        var currentType = this.option(\"type\");\r\n        var isTime = /h|m|s/g.test(currentType);\r\n        var isDate = /d|M|Y/g.test(currentType);\r\n        var type = \"\";\r\n        if (isDate) {\r\n            type += TYPE.date\r\n        }\r\n        if (isTime) {\r\n            type += TYPE.time\r\n        }\r\n        return type\r\n    },\r\n    _getStrategyName: function(type) {\r\n        var pickerType = this._pickerType;\r\n        if (pickerType === PICKER_TYPE.rollers) {\r\n            return STRATEGY_NAME.dateView\r\n        } else if (pickerType === PICKER_TYPE.native) {\r\n            return STRATEGY_NAME.native\r\n        }\r\n        if (type === TYPE.date) {\r\n            return STRATEGY_NAME.calendar\r\n        }\r\n        if (type === TYPE.datetime) {\r\n            return STRATEGY_NAME.calendarWithTime\r\n        }\r\n        return STRATEGY_NAME.list\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(DATEBOX_CLASS);\r\n        this.callBase();\r\n        this._refreshFormatClass();\r\n        this._refreshPickerTypeClass();\r\n        this._strategy.renderInputMinMax(this._input())\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._formatValidationIcon()\r\n    },\r\n    _renderDimensions: function() {\r\n        this.callBase();\r\n        this.$element().toggleClass(DX_AUTO_WIDTH_CLASS, !this.option(\"width\"));\r\n        this._updatePopupWidth();\r\n        this._updatePopupHeight()\r\n    },\r\n    _dimensionChanged: function() {\r\n        this.callBase();\r\n        this._updatePopupHeight()\r\n    },\r\n    _updatePopupHeight: function() {\r\n        if (this._popup) {\r\n            var _this$_strategy$_upda, _this$_strategy;\r\n            null === (_this$_strategy$_upda = (_this$_strategy = this._strategy)._updatePopupHeight) || void 0 === _this$_strategy$_upda ? void 0 : _this$_strategy$_upda.call(_this$_strategy)\r\n        }\r\n    },\r\n    _refreshFormatClass: function() {\r\n        var $element = this.$element();\r\n        each(TYPE, (function(_, item) {\r\n            $element.removeClass(DATEBOX_CLASS + \"-\" + item)\r\n        }));\r\n        $element.addClass(DATEBOX_CLASS + \"-\" + this.option(\"type\"))\r\n    },\r\n    _refreshPickerTypeClass: function() {\r\n        var $element = this.$element();\r\n        each(PICKER_TYPE, (function(_, item) {\r\n            $element.removeClass(DATEBOX_CLASS + \"-\" + item)\r\n        }));\r\n        $element.addClass(DATEBOX_CLASS + \"-\" + this._pickerType)\r\n    },\r\n    _formatValidationIcon: function() {\r\n        if (!hasWindow()) {\r\n            return\r\n        }\r\n        var inputElement = this._input().get(0);\r\n        var isRtlEnabled = this.option(\"rtlEnabled\");\r\n        var clearButtonWidth = this._getClearButtonWidth();\r\n        var longestElementDimensions = this._getLongestElementDimensions();\r\n        var curWidth = parseFloat(window.getComputedStyle(inputElement).width) - clearButtonWidth;\r\n        var shouldHideValidationIcon = longestElementDimensions.width > curWidth;\r\n        var style = inputElement.style;\r\n        this.$element().toggleClass(DX_INVALID_BADGE_CLASS, !shouldHideValidationIcon && this.option(\"_showValidationIcon\"));\r\n        if (shouldHideValidationIcon) {\r\n            if (void 0 === this._storedPadding) {\r\n                this._storedPadding = isRtlEnabled ? longestElementDimensions.leftPadding : longestElementDimensions.rightPadding\r\n            }\r\n            isRtlEnabled ? style.paddingLeft = 0 : style.paddingRight = 0\r\n        } else {\r\n            isRtlEnabled ? style.paddingLeft = this._storedPadding + \"px\" : style.paddingRight = this._storedPadding + \"px\"\r\n        }\r\n    },\r\n    _getClearButtonWidth: function() {\r\n        var clearButtonWidth = 0;\r\n        if (this._isClearButtonVisible() && \"\" === this._input().val()) {\r\n            var clearButtonElement = this.$element().find(\".\" + DX_CLEAR_BUTTON_CLASS).get(0);\r\n            clearButtonWidth = parseFloat(window.getComputedStyle(clearButtonElement).width)\r\n        }\r\n        return clearButtonWidth\r\n    },\r\n    _getLongestElementDimensions: function() {\r\n        var format = this._strategy.getDisplayFormat(this.option(\"displayFormat\"));\r\n        var longestValue = dateLocalization.format(uiDateUtils.getLongestDate(format, dateLocalization.getMonthNames(), dateLocalization.getDayNames()), format);\r\n        var $input = this._input();\r\n        var inputElement = $input.get(0);\r\n        var $longestValueElement = createTextElementHiddenCopy($input, longestValue);\r\n        var isPaddingStored = void 0 !== this._storedPadding;\r\n        var storedPadding = !isPaddingStored ? 0 : this._storedPadding;\r\n        $longestValueElement.appendTo(this.$element());\r\n        var elementWidth = parseFloat(window.getComputedStyle($longestValueElement.get(0)).width);\r\n        var rightPadding = parseFloat(window.getComputedStyle(inputElement).paddingRight);\r\n        var leftPadding = parseFloat(window.getComputedStyle(inputElement).paddingLeft);\r\n        var necessaryWidth = elementWidth + leftPadding + rightPadding + storedPadding;\r\n        $longestValueElement.remove();\r\n        return {\r\n            width: necessaryWidth,\r\n            leftPadding: leftPadding,\r\n            rightPadding: rightPadding\r\n        }\r\n    },\r\n    _getKeyboardListeners() {\r\n        return this.callBase().concat([this._strategy && this._strategy.getKeyboardListener()])\r\n    },\r\n    _renderPopup: function() {\r\n        this.callBase();\r\n        this._popup.$wrapper().addClass(DATEBOX_WRAPPER_CLASS);\r\n        this._renderPopupWrapper()\r\n    },\r\n    _getPopupToolbarItems() {\r\n        var _this$_strategy$_getP, _this$_strategy$_getP2, _this$_strategy2;\r\n        var defaultItems = this.callBase();\r\n        return null !== (_this$_strategy$_getP = null === (_this$_strategy$_getP2 = (_this$_strategy2 = this._strategy)._getPopupToolbarItems) || void 0 === _this$_strategy$_getP2 ? void 0 : _this$_strategy$_getP2.call(_this$_strategy2, defaultItems)) && void 0 !== _this$_strategy$_getP ? _this$_strategy$_getP : defaultItems\r\n    },\r\n    _popupConfig: function() {\r\n        var popupConfig = this.callBase();\r\n        return extend(this._strategy.popupConfig(popupConfig), {\r\n            title: this._getPopupTitle(),\r\n            dragEnabled: false\r\n        })\r\n    },\r\n    _renderPopupWrapper: function() {\r\n        if (!this._popup) {\r\n            return\r\n        }\r\n        var $element = this.$element();\r\n        var classPostfixes = extend({}, TYPE, PICKER_TYPE);\r\n        each(classPostfixes, function(_, item) {\r\n            $element.removeClass(DATEBOX_WRAPPER_CLASS + \"-\" + item)\r\n        }.bind(this));\r\n        this._popup.$wrapper().addClass(DATEBOX_WRAPPER_CLASS + \"-\" + this.option(\"type\")).addClass(DATEBOX_WRAPPER_CLASS + \"-\" + this._pickerType).addClass(DROPDOWNEDITOR_OVERLAY_CLASS)\r\n    },\r\n    _renderPopupContent: function() {\r\n        this.callBase();\r\n        this._strategy.renderPopupContent()\r\n    },\r\n    _getFirstPopupElement: function() {\r\n        return this._strategy.getFirstPopupElement() || this.callBase()\r\n    },\r\n    _getLastPopupElement: function() {\r\n        return this._strategy.getLastPopupElement() || this.callBase()\r\n    },\r\n    _popupShowingHandler: function() {\r\n        this.callBase();\r\n        this._strategy.popupShowingHandler()\r\n    },\r\n    _popupShownHandler: function() {\r\n        this.callBase();\r\n        this._strategy.renderOpenedState()\r\n    },\r\n    _popupHiddenHandler: function() {\r\n        this.callBase();\r\n        this._strategy.renderOpenedState();\r\n        this._strategy.popupHiddenHandler()\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this._formatValidationIcon()\r\n        }\r\n    },\r\n    _clearValueHandler: function(e) {\r\n        this.option(\"text\", \"\");\r\n        this.callBase(e)\r\n    },\r\n    _readOnlyPropValue: function() {\r\n        if (this._pickerType === PICKER_TYPE.rollers) {\r\n            return true\r\n        }\r\n        var platform = devices.real().platform;\r\n        var isCustomValueDisabled = this._isNativeType() && (\"ios\" === platform || \"android\" === platform);\r\n        if (isCustomValueDisabled) {\r\n            return this.option(\"readOnly\")\r\n        }\r\n        return this.callBase()\r\n    },\r\n    _isClearButtonVisible: function() {\r\n        return this.callBase() && !this._isNativeType()\r\n    },\r\n    _renderValue: function() {\r\n        var value = this.dateOption(\"value\");\r\n        this.option(\"text\", this._getDisplayedText(value));\r\n        this._strategy.renderValue();\r\n        return this.callBase()\r\n    },\r\n    _setSubmitValue: function() {\r\n        var value = this.dateOption(\"value\");\r\n        var dateSerializationFormat = this.option(\"dateSerializationFormat\");\r\n        var submitFormat = uiDateUtils.SUBMIT_FORMATS_MAP[this.option(\"type\")];\r\n        var submitValue = dateSerializationFormat ? dateSerialization.serializeDate(value, dateSerializationFormat) : uiDateUtils.toStandardDateFormat(value, submitFormat);\r\n        this._getSubmitElement().val(submitValue)\r\n    },\r\n    _getDisplayedText: function(value) {\r\n        var mode = this.option(\"mode\");\r\n        var displayedText;\r\n        if (\"text\" === mode) {\r\n            var displayFormat = this._strategy.getDisplayFormat(this.option(\"displayFormat\"));\r\n            displayedText = dateLocalization.format(value, displayFormat)\r\n        } else {\r\n            var format = this._getFormatByMode(mode);\r\n            if (format) {\r\n                displayedText = dateLocalization.format(value, format)\r\n            } else {\r\n                displayedText = uiDateUtils.toStandardDateFormat(value, mode)\r\n            }\r\n        }\r\n        return displayedText\r\n    },\r\n    _getFormatByMode: function(mode) {\r\n        return inputType(mode) ? null : uiDateUtils.FORMATS_MAP[mode]\r\n    },\r\n    _valueChangeEventHandler: function(e) {\r\n        var {\r\n            text: text,\r\n            type: type,\r\n            validationError: validationError\r\n        } = this.option();\r\n        var currentValue = this.dateOption(\"value\");\r\n        if (text === this._getDisplayedText(currentValue)) {\r\n            this._recallInternalValidation(currentValue, validationError);\r\n            return\r\n        }\r\n        var parsedDate = this._getParsedDate(text);\r\n        var value = null !== currentValue && void 0 !== currentValue ? currentValue : this._getDateByDefault();\r\n        var newValue = uiDateUtils.mergeDates(value, parsedDate, type);\r\n        var date = parsedDate && \"time\" === type ? newValue : parsedDate;\r\n        if (this._applyInternalValidation(date).isValid) {\r\n            var displayedText = this._getDisplayedText(newValue);\r\n            if (value && newValue && value.getTime() === newValue.getTime() && displayedText !== text) {\r\n                this._renderValue()\r\n            } else {\r\n                this.dateValue(newValue, e)\r\n            }\r\n        }\r\n    },\r\n    _recallInternalValidation(value, validationError) {\r\n        if (!validationError || validationError.editorSpecific) {\r\n            this._applyInternalValidation(value);\r\n            this._applyCustomValidation(value)\r\n        }\r\n    },\r\n    _getDateByDefault: function() {\r\n        return this._strategy.useCurrentDateByDefault() && this._strategy.getDefaultDate()\r\n    },\r\n    _getParsedDate: function(text) {\r\n        var displayFormat = this._strategy.getDisplayFormat(this.option(\"displayFormat\"));\r\n        var parsedText = this._strategy.getParsedText(text, displayFormat);\r\n        return null !== parsedText && void 0 !== parsedText ? parsedText : void 0\r\n    },\r\n    _applyInternalValidation(value) {\r\n        var text = this.option(\"text\");\r\n        var hasText = !!text && null !== value;\r\n        var isDate = !!value && isDateType(value) && !isNaN(value.getTime());\r\n        var isDateInRange = isDate && dateUtils.dateInRange(value, this.dateOption(\"min\"), this.dateOption(\"max\"), this.option(\"type\"));\r\n        var isValid = !hasText && !value || isDateInRange;\r\n        var validationMessage = \"\";\r\n        if (!isDate) {\r\n            validationMessage = this.option(\"invalidDateMessage\")\r\n        } else if (!isDateInRange) {\r\n            validationMessage = this.option(\"dateOutOfRangeMessage\")\r\n        }\r\n        this._updateInternalValidationState(isValid, validationMessage);\r\n        return {\r\n            isValid: isValid,\r\n            isDate: isDate\r\n        }\r\n    },\r\n    _updateInternalValidationState(isValid, validationMessage) {\r\n        this.option({\r\n            isValid: isValid,\r\n            validationError: isValid ? null : {\r\n                editorSpecific: true,\r\n                message: validationMessage\r\n            }\r\n        })\r\n    },\r\n    _applyCustomValidation: function(value) {\r\n        this.validationRequest.fire({\r\n            editor: this,\r\n            value: this._serializeDate(value)\r\n        })\r\n    },\r\n    _isValueChanged: function(newValue) {\r\n        var oldValue = this.dateOption(\"value\");\r\n        var oldTime = oldValue && oldValue.getTime();\r\n        var newTime = newValue && newValue.getTime();\r\n        return oldTime !== newTime\r\n    },\r\n    _isTextChanged: function(newValue) {\r\n        var oldText = this.option(\"text\");\r\n        var newText = newValue && this._getDisplayedText(newValue) || \"\";\r\n        return oldText !== newText\r\n    },\r\n    _renderProps: function() {\r\n        this.callBase();\r\n        this._input().attr(\"autocomplete\", \"off\")\r\n    },\r\n    _renderOpenedState: function() {\r\n        if (!this._isNativeType()) {\r\n            this.callBase()\r\n        }\r\n        if (this._strategy.isAdaptivityChanged()) {\r\n            this._refreshStrategy()\r\n        }\r\n    },\r\n    _getPopupTitle: function() {\r\n        var placeholder = this.option(\"placeholder\");\r\n        if (placeholder) {\r\n            return placeholder\r\n        }\r\n        var type = this.option(\"type\");\r\n        if (type === TYPE.time) {\r\n            return messageLocalization.format(\"dxDateBox-simulatedDataPickerTitleTime\")\r\n        }\r\n        if (type === TYPE.date || type === TYPE.datetime) {\r\n            return messageLocalization.format(\"dxDateBox-simulatedDataPickerTitleDate\")\r\n        }\r\n        return \"\"\r\n    },\r\n    _refreshStrategy: function() {\r\n        this._strategy.dispose();\r\n        this._initStrategy();\r\n        this.option(this._strategy.getDefaultOptions());\r\n        this._refresh()\r\n    },\r\n    _applyButtonHandler: function(e) {\r\n        var value = this._strategy.getValue();\r\n        this.dateValue(value, e.event);\r\n        this.callBase()\r\n    },\r\n    _dispose: function() {\r\n        var _this$_strategy3;\r\n        this.callBase();\r\n        null === (_this$_strategy3 = this._strategy) || void 0 === _this$_strategy3 ? void 0 : _this$_strategy3.dispose()\r\n    },\r\n    _isNativeType: function() {\r\n        return this._pickerType === PICKER_TYPE.native\r\n    },\r\n    _updatePopupTitle: function() {\r\n        var _this$_popup;\r\n        null === (_this$_popup = this._popup) || void 0 === _this$_popup ? void 0 : _this$_popup.option(\"title\", this._getPopupTitle())\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"showClearButton\":\r\n            case \"buttons\":\r\n                this.callBase.apply(this, arguments);\r\n                this._formatValidationIcon();\r\n                break;\r\n            case \"pickerType\":\r\n                this._updatePickerOptions({\r\n                    pickerType: args.value\r\n                });\r\n                this._refreshStrategy();\r\n                this._refreshPickerTypeClass();\r\n                this._invalidate();\r\n                break;\r\n            case \"type\":\r\n                this._updatePickerOptions({\r\n                    format: args.value\r\n                });\r\n                this._refreshStrategy();\r\n                this._refreshFormatClass();\r\n                this._renderPopupWrapper();\r\n                this._formatValidationIcon();\r\n                this._updateValue();\r\n                break;\r\n            case \"placeholder\":\r\n                this.callBase.apply(this, arguments);\r\n                this._updatePopupTitle();\r\n                break;\r\n            case \"min\":\r\n            case \"max\":\r\n                var isValid = this.option(\"isValid\");\r\n                this._applyInternalValidation(this.dateOption(\"value\"));\r\n                if (!isValid) {\r\n                    this._applyCustomValidation(this.dateOption(\"value\"))\r\n                }\r\n                this._invalidate();\r\n                break;\r\n            case \"dateSerializationFormat\":\r\n            case \"interval\":\r\n            case \"disabledDates\":\r\n            case \"calendarOptions\":\r\n                this._invalidate();\r\n                break;\r\n            case \"displayFormat\":\r\n                this.option(\"text\", this._getDisplayedText(this.dateOption(\"value\")));\r\n                this._renderInputValue();\r\n                break;\r\n            case \"text\":\r\n                this._strategy.textChangedHandler(args.value);\r\n                this.callBase.apply(this, arguments);\r\n                break;\r\n            case \"isValid\":\r\n                this.callBase.apply(this, arguments);\r\n                this._formatValidationIcon();\r\n                break;\r\n            case \"showDropDownButton\":\r\n                this._formatValidationIcon();\r\n                this.callBase.apply(this, arguments);\r\n                break;\r\n            case \"readOnly\":\r\n                this.callBase.apply(this, arguments);\r\n                this._formatValidationIcon();\r\n                break;\r\n            case \"todayButtonText\":\r\n                this._setPopupOption(\"toolbarItems\", this._getPopupToolbarItems());\r\n                break;\r\n            case \"invalidDateMessage\":\r\n            case \"dateOutOfRangeMessage\":\r\n            case \"adaptivityEnabled\":\r\n            case \"showAnalogClock\":\r\n            case \"_showValidationIcon\":\r\n                break;\r\n            default:\r\n                this.callBase.apply(this, arguments)\r\n        }\r\n    },\r\n    _getSerializationFormat: function() {\r\n        var value = this.option(\"value\");\r\n        if (this.option(\"dateSerializationFormat\") && config().forceIsoDateParsing) {\r\n            return this.option(\"dateSerializationFormat\")\r\n        }\r\n        if (isNumeric(value)) {\r\n            return \"number\"\r\n        }\r\n        if (!isString(value)) {\r\n            return\r\n        }\r\n        return dateSerialization.getDateSerializationFormat(value)\r\n    },\r\n    _updateValue: function(value) {\r\n        this.callBase();\r\n        this._applyInternalValidation(null !== value && void 0 !== value ? value : this.dateOption(\"value\"))\r\n    },\r\n    dateValue: function(value, dxEvent) {\r\n        var isValueChanged = this._isValueChanged(value);\r\n        if (isValueChanged && dxEvent) {\r\n            this._saveValueChangeEvent(dxEvent)\r\n        }\r\n        if (!isValueChanged) {\r\n            if (this._isTextChanged(value)) {\r\n                this._updateValue(value)\r\n            } else if (\"\" === this.option(\"text\")) {\r\n                this._applyCustomValidation(value)\r\n            }\r\n        }\r\n        return this.dateOption(\"value\", value)\r\n    },\r\n    dateOption: function(optionName, value) {\r\n        if (1 === arguments.length) {\r\n            return dateSerialization.deserializeDate(this.option(optionName))\r\n        }\r\n        this.option(optionName, this._serializeDate(value))\r\n    },\r\n    _serializeDate: function(date) {\r\n        var serializationFormat = this._getSerializationFormat();\r\n        return dateSerialization.serializeDate(date, serializationFormat)\r\n    },\r\n    _clearValue: function() {\r\n        var value = this.option(\"value\");\r\n        this.callBase();\r\n        if (null === value) {\r\n            this._applyCustomValidation(null)\r\n        }\r\n    },\r\n    reset: function() {\r\n        var value = this.option(\"value\");\r\n        this.callBase();\r\n        if (null === value) {\r\n            this._applyInternalValidation(null)\r\n        }\r\n    }\r\n});\r\nexport default DateBox;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}