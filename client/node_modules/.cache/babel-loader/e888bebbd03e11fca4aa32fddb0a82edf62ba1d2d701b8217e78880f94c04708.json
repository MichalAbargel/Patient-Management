{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/workspaces/ui.scheduler.timeline_month.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport registerComponent from \"../../../core/component_registrator\";\nimport SchedulerTimeline from \"./ui.scheduler.timeline\";\nimport dateUtils from \"../../../core/utils/date\";\nimport dxrDateHeader from \"../../../renovation/ui/scheduler/workspaces/base/header_panel/layout.j\";\nimport { getViewStartByOptions } from \"../../../renovation/ui/scheduler/view_model/to_test/views/utils/month\";\nimport { formatWeekdayAndDay } from \"../../../renovation/ui/scheduler/view_model/to_test/views/utils/base\";\nimport { VIEWS } from \"../constants\";\nvar TIMELINE_CLASS = \"dx-scheduler-timeline-month\";\nclass SchedulerTimelineMonth extends SchedulerTimeline {\n  get type() {\n    return VIEWS.TIMELINE_MONTH;\n  }\n  get viewDirection() {\n    return \"horizontal\";\n  }\n  get renovatedHeaderPanelComponent() {\n    return dxrDateHeader;\n  }\n  _renderView() {\n    super._renderView();\n    this._updateScrollable();\n  }\n  _getElementClass() {\n    return TIMELINE_CLASS;\n  }\n  _getDateHeaderTemplate() {\n    return this.option(\"dateCellTemplate\");\n  }\n  _calculateDurationInCells(timeDiff) {\n    return timeDiff / this.getCellDuration();\n  }\n  isIndicatorVisible() {\n    return true;\n  }\n  _getFormat() {\n    return formatWeekdayAndDay;\n  }\n  _getIntervalBetween(currentDate) {\n    var firstViewDate = this.getStartViewDate();\n    var timeZoneOffset = dateUtils.getTimezonesDifference(firstViewDate, currentDate);\n    return currentDate.getTime() - (firstViewDate.getTime() - 36e5 * this.option(\"startDayHour\")) - timeZoneOffset;\n  }\n  _getViewStartByOptions() {\n    return getViewStartByOptions(this.option(\"startDate\"), this.option(\"currentDate\"), this.option(\"intervalCount\"), dateUtils.getFirstMonthDate(this.option(\"startDate\")));\n  }\n  generateRenderOptions() {\n    var options = super.generateRenderOptions(true);\n    return _extends({}, options, {\n      getDateForHeaderText: (_, date) => date\n    });\n  }\n}\nregisterComponent(\"dxSchedulerTimelineMonth\", SchedulerTimelineMonth);\nexport default SchedulerTimelineMonth;","map":{"version":3,"names":["_extends","registerComponent","SchedulerTimeline","dateUtils","dxrDateHeader","getViewStartByOptions","formatWeekdayAndDay","VIEWS","TIMELINE_CLASS","SchedulerTimelineMonth","type","TIMELINE_MONTH","viewDirection","renovatedHeaderPanelComponent","_renderView","_updateScrollable","_getElementClass","_getDateHeaderTemplate","option","_calculateDurationInCells","timeDiff","getCellDuration","isIndicatorVisible","_getFormat","_getIntervalBetween","currentDate","firstViewDate","getStartViewDate","timeZoneOffset","getTimezonesDifference","getTime","_getViewStartByOptions","getFirstMonthDate","generateRenderOptions","options","getDateForHeaderText","_","date"],"sources":["C:/Users/Michal Abargel/Desktop/FULLSTACK_PROJECTS/PrivateLessones/PL/client/gui/node_modules/devextreme/esm/ui/scheduler/workspaces/ui.scheduler.timeline_month.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/workspaces/ui.scheduler.timeline_month.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport registerComponent from \"../../../core/component_registrator\";\r\nimport SchedulerTimeline from \"./ui.scheduler.timeline\";\r\nimport dateUtils from \"../../../core/utils/date\";\r\nimport dxrDateHeader from \"../../../renovation/ui/scheduler/workspaces/base/header_panel/layout.j\";\r\nimport {\r\n    getViewStartByOptions\r\n} from \"../../../renovation/ui/scheduler/view_model/to_test/views/utils/month\";\r\nimport {\r\n    formatWeekdayAndDay\r\n} from \"../../../renovation/ui/scheduler/view_model/to_test/views/utils/base\";\r\nimport {\r\n    VIEWS\r\n} from \"../constants\";\r\nvar TIMELINE_CLASS = \"dx-scheduler-timeline-month\";\r\nclass SchedulerTimelineMonth extends SchedulerTimeline {\r\n    get type() {\r\n        return VIEWS.TIMELINE_MONTH\r\n    }\r\n    get viewDirection() {\r\n        return \"horizontal\"\r\n    }\r\n    get renovatedHeaderPanelComponent() {\r\n        return dxrDateHeader\r\n    }\r\n    _renderView() {\r\n        super._renderView();\r\n        this._updateScrollable()\r\n    }\r\n    _getElementClass() {\r\n        return TIMELINE_CLASS\r\n    }\r\n    _getDateHeaderTemplate() {\r\n        return this.option(\"dateCellTemplate\")\r\n    }\r\n    _calculateDurationInCells(timeDiff) {\r\n        return timeDiff / this.getCellDuration()\r\n    }\r\n    isIndicatorVisible() {\r\n        return true\r\n    }\r\n    _getFormat() {\r\n        return formatWeekdayAndDay\r\n    }\r\n    _getIntervalBetween(currentDate) {\r\n        var firstViewDate = this.getStartViewDate();\r\n        var timeZoneOffset = dateUtils.getTimezonesDifference(firstViewDate, currentDate);\r\n        return currentDate.getTime() - (firstViewDate.getTime() - 36e5 * this.option(\"startDayHour\")) - timeZoneOffset\r\n    }\r\n    _getViewStartByOptions() {\r\n        return getViewStartByOptions(this.option(\"startDate\"), this.option(\"currentDate\"), this.option(\"intervalCount\"), dateUtils.getFirstMonthDate(this.option(\"startDate\")))\r\n    }\r\n    generateRenderOptions() {\r\n        var options = super.generateRenderOptions(true);\r\n        return _extends({}, options, {\r\n            getDateForHeaderText: (_, date) => date\r\n        })\r\n    }\r\n}\r\nregisterComponent(\"dxSchedulerTimelineMonth\", SchedulerTimelineMonth);\r\nexport default SchedulerTimelineMonth;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,iBAAiB,MAAM,qCAAqC;AACnE,OAAOC,iBAAiB,MAAM,yBAAyB;AACvD,OAAOC,SAAS,MAAM,0BAA0B;AAChD,OAAOC,aAAa,MAAM,wEAAwE;AAClG,SACIC,qBAAqB,QAClB,uEAAuE;AAC9E,SACIC,mBAAmB,QAChB,sEAAsE;AAC7E,SACIC,KAAK,QACF,cAAc;AACrB,IAAIC,cAAc,GAAG,6BAA6B;AAClD,MAAMC,sBAAsB,SAASP,iBAAiB,CAAC;EACnD,IAAIQ,IAAIA,CAAA,EAAG;IACP,OAAOH,KAAK,CAACI,cAAc;EAC/B;EACA,IAAIC,aAAaA,CAAA,EAAG;IAChB,OAAO,YAAY;EACvB;EACA,IAAIC,6BAA6BA,CAAA,EAAG;IAChC,OAAOT,aAAa;EACxB;EACAU,WAAWA,CAAA,EAAG;IACV,KAAK,CAACA,WAAW,CAAC,CAAC;IACnB,IAAI,CAACC,iBAAiB,CAAC,CAAC;EAC5B;EACAC,gBAAgBA,CAAA,EAAG;IACf,OAAOR,cAAc;EACzB;EACAS,sBAAsBA,CAAA,EAAG;IACrB,OAAO,IAAI,CAACC,MAAM,CAAC,kBAAkB,CAAC;EAC1C;EACAC,yBAAyBA,CAACC,QAAQ,EAAE;IAChC,OAAOA,QAAQ,GAAG,IAAI,CAACC,eAAe,CAAC,CAAC;EAC5C;EACAC,kBAAkBA,CAAA,EAAG;IACjB,OAAO,IAAI;EACf;EACAC,UAAUA,CAAA,EAAG;IACT,OAAOjB,mBAAmB;EAC9B;EACAkB,mBAAmBA,CAACC,WAAW,EAAE;IAC7B,IAAIC,aAAa,GAAG,IAAI,CAACC,gBAAgB,CAAC,CAAC;IAC3C,IAAIC,cAAc,GAAGzB,SAAS,CAAC0B,sBAAsB,CAACH,aAAa,EAAED,WAAW,CAAC;IACjF,OAAOA,WAAW,CAACK,OAAO,CAAC,CAAC,IAAIJ,aAAa,CAACI,OAAO,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAACZ,MAAM,CAAC,cAAc,CAAC,CAAC,GAAGU,cAAc;EAClH;EACAG,sBAAsBA,CAAA,EAAG;IACrB,OAAO1B,qBAAqB,CAAC,IAAI,CAACa,MAAM,CAAC,WAAW,CAAC,EAAE,IAAI,CAACA,MAAM,CAAC,aAAa,CAAC,EAAE,IAAI,CAACA,MAAM,CAAC,eAAe,CAAC,EAAEf,SAAS,CAAC6B,iBAAiB,CAAC,IAAI,CAACd,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;EAC3K;EACAe,qBAAqBA,CAAA,EAAG;IACpB,IAAIC,OAAO,GAAG,KAAK,CAACD,qBAAqB,CAAC,IAAI,CAAC;IAC/C,OAAOjC,QAAQ,CAAC,CAAC,CAAC,EAAEkC,OAAO,EAAE;MACzBC,oBAAoB,EAAEA,CAACC,CAAC,EAAEC,IAAI,KAAKA;IACvC,CAAC,CAAC;EACN;AACJ;AACApC,iBAAiB,CAAC,0BAA0B,EAAEQ,sBAAsB,CAAC;AACrE,eAAeA,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}