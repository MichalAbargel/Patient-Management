{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Michal Abargel\\\\Desktop\\\\FULLSTACK_PROJECTS\\\\Patient-Management\\\\client\\\\src\\\\components\\\\statistics\\\\BasicBars.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { BarChart } from \"@mui/x-charts/BarChart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BasicBars = ({\n  lable1,\n  lable2\n}) => {\n  _s();\n  const URL = \"http://localhost:3500/api/statistics/getVaccinatedNumbers\";\n  const [vaccinatedCount, setVaccinatedCount] = useState(null);\n  const [nonVaccinatedCount, setNonVaccinatedCount] = useState(null);\n  const getVaccinatedNumbers = async () => {\n    console.log(\"getVaccinatedNumbers\");\n    try {\n      const response = await fetch(`${URL}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (response.ok) {\n        const responseData = await response.json();\n        console.log(responseData.vaccinatedCount);\n        setVaccinatedCount(responseData.vaccinatedCount);\n        setNonVaccinatedCount(responseData.nonVaccinatedCount);\n      }\n    } catch (error) {\n      alert(\"Error fetching data\");\n    }\n  };\n  useEffect(() => {\n    getVaccinatedNumbers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: vaccinatedCount && nonVaccinatedCount && /*#__PURE__*/_jsxDEV(BarChart, {\n      xAxis: [{\n        scaleType: \"band\",\n        data: [\"Vaccinated Patients\", \"Unvaccinated Patients\"]\n      }],\n      series: [{\n        data: [vaccinatedCount, nonVaccinatedCount]\n      }],\n      width: 500,\n      height: 300\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(BasicBars, \"/+3oJ4aYjfTz5JPnoLrEcEDuIfg=\");\n_c = BasicBars;\nexport default BasicBars;\nvar _c;\n$RefreshReg$(_c, \"BasicBars\");","map":{"version":3,"names":["React","useState","useEffect","BarChart","jsxDEV","_jsxDEV","BasicBars","lable1","lable2","_s","URL","vaccinatedCount","setVaccinatedCount","nonVaccinatedCount","setNonVaccinatedCount","getVaccinatedNumbers","console","log","response","fetch","method","headers","ok","responseData","json","error","alert","children","xAxis","scaleType","data","series","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Michal Abargel/Desktop/FULLSTACK_PROJECTS/Patient-Management/client/src/components/statistics/BasicBars.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { BarChart } from \"@mui/x-charts/BarChart\";\r\n\r\nconst BasicBars = ({ lable1, lable2 }) => {\r\n  const URL = \"http://localhost:3500/api/statistics/getVaccinatedNumbers\";\r\n  const [vaccinatedCount, setVaccinatedCount] = useState(null);\r\n  const [nonVaccinatedCount, setNonVaccinatedCount] = useState(null);\r\n\r\n  const getVaccinatedNumbers = async () => {\r\n    console.log(\"getVaccinatedNumbers\");\r\n    try {\r\n      const response = await fetch(`${URL}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      if (response.ok) {\r\n        const responseData = await response.json();\r\n        console.log(responseData.vaccinatedCount);\r\n        setVaccinatedCount(responseData.vaccinatedCount);\r\n        setNonVaccinatedCount(responseData.nonVaccinatedCount);\r\n      }\r\n    } catch (error) {\r\n      alert(\"Error fetching data\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getVaccinatedNumbers();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {vaccinatedCount && nonVaccinatedCount && (\r\n        <BarChart\r\n          xAxis={[\r\n            {\r\n              scaleType: \"band\",\r\n              data: [\"Vaccinated Patients\", \"Unvaccinated Patients\"],\r\n            },\r\n          ]}\r\n          series={[{ data: [vaccinatedCount, nonVaccinatedCount] }]}\r\n          width={500}\r\n          height={300}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default BasicBars;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,SAAS,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAMC,GAAG,GAAG,2DAA2D;EACvE,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACY,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAElE,MAAMc,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvCC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAET,GAAI,EAAC,EAAE;QACrCU,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACF,IAAIH,QAAQ,CAACI,EAAE,EAAE;QACf,MAAMC,YAAY,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAC1CR,OAAO,CAACC,GAAG,CAACM,YAAY,CAACZ,eAAe,CAAC;QACzCC,kBAAkB,CAACW,YAAY,CAACZ,eAAe,CAAC;QAChDG,qBAAqB,CAACS,YAAY,CAACV,kBAAkB,CAAC;MACxD;IACF,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdC,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF,CAAC;EAEDxB,SAAS,CAAC,MAAM;IACda,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA;IAAAsB,QAAA,EACGhB,eAAe,IAAIE,kBAAkB,iBACpCR,OAAA,CAACF,QAAQ;MACPyB,KAAK,EAAE,CACL;QACEC,SAAS,EAAE,MAAM;QACjBC,IAAI,EAAE,CAAC,qBAAqB,EAAE,uBAAuB;MACvD,CAAC,CACD;MACFC,MAAM,EAAE,CAAC;QAAED,IAAI,EAAE,CAACnB,eAAe,EAAEE,kBAAkB;MAAE,CAAC,CAAE;MAC1DmB,KAAK,EAAE,GAAI;MACXC,MAAM,EAAE;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA9CIH,SAAS;AAAAgC,EAAA,GAAThC,SAAS;AA+Cf,eAAeA,SAAS;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}