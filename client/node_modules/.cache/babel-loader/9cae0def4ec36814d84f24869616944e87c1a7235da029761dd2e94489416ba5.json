{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"slots\", \"slotProps\", \"onItemClick\", \"skipAnimation\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { area as d3Area } from 'd3-shape';\nimport { SeriesContext } from '../context/SeriesContextProvider';\nimport { CartesianContext } from '../context/CartesianContextProvider';\nimport { AreaElement } from './AreaElement';\nimport { getValueToPositionMapper } from '../hooks/useScale';\nimport getCurveFactory from '../internals/getCurve';\nimport { DEFAULT_X_AXIS_KEY } from '../constants';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useAggregatedData = () => {\n  const seriesData = React.useContext(SeriesContext).line;\n  const axisData = React.useContext(CartesianContext);\n  if (seriesData === undefined) {\n    return [];\n  }\n  const {\n    series,\n    stackingGroups\n  } = seriesData;\n  const {\n    xAxis,\n    yAxis,\n    xAxisIds,\n    yAxisIds\n  } = axisData;\n  const defaultXAxisId = xAxisIds[0];\n  const defaultYAxisId = yAxisIds[0];\n  return stackingGroups.flatMap(({\n    ids: groupIds\n  }) => {\n    return groupIds.flatMap(seriesId => {\n      const {\n        xAxisKey = defaultXAxisId,\n        yAxisKey = defaultYAxisId,\n        stackedData,\n        data,\n        connectNulls\n      } = series[seriesId];\n      const xScale = getValueToPositionMapper(xAxis[xAxisKey].scale);\n      const yScale = yAxis[yAxisKey].scale;\n      const xData = xAxis[xAxisKey].data;\n      if (process.env.NODE_ENV !== 'production') {\n        if (xData === undefined) {\n          throw new Error(`MUI X Charts: ${xAxisKey === DEFAULT_X_AXIS_KEY ? 'The first `xAxis`' : `The x-axis with id \"${xAxisKey}\"`} should have data property to be able to display a line plot.`);\n        }\n        if (xData.length < stackedData.length) {\n          throw new Error(`MUI X Charts: The data length of the x axis (${xData.length} items) is lower than the length of series (${stackedData.length} items).`);\n        }\n      }\n      const areaPath = d3Area().x(d => xScale(d.x)).defined((_, i) => connectNulls || data[i] != null).y0(d => d.y && yScale(d.y[0])).y1(d => d.y && yScale(d.y[1]));\n      const curve = getCurveFactory(series[seriesId].curve);\n      const formattedData = xData?.map((x, index) => ({\n        x,\n        y: stackedData[index]\n      })) ?? [];\n      const d3Data = connectNulls ? formattedData.filter((_, i) => data[i] != null) : formattedData;\n      const d = areaPath.curve(curve)(d3Data) || '';\n      return _extends({}, series[seriesId], {\n        d,\n        seriesId\n      });\n    });\n  });\n};\n\n/**\n * Demos:\n *\n * - [Lines](https://mui.com/x/react-charts/lines/)\n * - [Areas demonstration](https://mui.com/x/react-charts/areas-demo/)\n * - [Stacking](https://mui.com/x/react-charts/stacking/)\n *\n * API:\n *\n * - [AreaPlot API](https://mui.com/x/api/charts/area-plot/)\n */\nfunction AreaPlot(props) {\n  const {\n      slots,\n      slotProps,\n      onItemClick,\n      skipAnimation\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const completedData = useAggregatedData();\n  return /*#__PURE__*/_jsx(\"g\", _extends({}, other, {\n    children: completedData.reverse().map(({\n      d,\n      seriesId,\n      color,\n      highlightScope,\n      area\n    }) => !!area && /*#__PURE__*/_jsx(AreaElement, {\n      id: seriesId,\n      d: d,\n      color: color,\n      highlightScope: highlightScope,\n      slots: slots,\n      slotProps: slotProps,\n      onClick: onItemClick && (event => onItemClick(event, {\n        type: 'line',\n        seriesId\n      })),\n      skipAnimation: skipAnimation\n    }, seriesId))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? AreaPlot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Callback fired when a line area item is clicked.\n   * @param {React.MouseEvent<SVGPathElement, MouseEvent>} event The event source of the callback.\n   * @param {LineItemIdentifier} lineItemIdentifier The line item identifier.\n   */\n  onItemClick: PropTypes.func,\n  /**\n   * If `true`, animations are skipped.\n   * @default false\n   */\n  skipAnimation: PropTypes.bool,\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable component slots.\n   * @default {}\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { AreaPlot };","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","area","d3Area","SeriesContext","CartesianContext","AreaElement","getValueToPositionMapper","getCurveFactory","DEFAULT_X_AXIS_KEY","jsx","_jsx","useAggregatedData","seriesData","useContext","line","axisData","undefined","series","stackingGroups","xAxis","yAxis","xAxisIds","yAxisIds","defaultXAxisId","defaultYAxisId","flatMap","ids","groupIds","seriesId","xAxisKey","yAxisKey","stackedData","data","connectNulls","xScale","scale","yScale","xData","process","env","NODE_ENV","Error","length","areaPath","x","d","defined","_","i","y0","y","y1","curve","formattedData","map","index","d3Data","filter","AreaPlot","props","slots","slotProps","onItemClick","skipAnimation","other","completedData","children","reverse","color","highlightScope","id","onClick","event","type","propTypes","func","bool","object"],"sources":["C:/Users/Michal Abargel/Desktop/FULLSTACK_PROJECTS/Patient-Management/client/node_modules/@mui/x-charts/esm/LineChart/AreaPlot.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"slots\", \"slotProps\", \"onItemClick\", \"skipAnimation\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { area as d3Area } from 'd3-shape';\nimport { SeriesContext } from '../context/SeriesContextProvider';\nimport { CartesianContext } from '../context/CartesianContextProvider';\nimport { AreaElement } from './AreaElement';\nimport { getValueToPositionMapper } from '../hooks/useScale';\nimport getCurveFactory from '../internals/getCurve';\nimport { DEFAULT_X_AXIS_KEY } from '../constants';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useAggregatedData = () => {\n  const seriesData = React.useContext(SeriesContext).line;\n  const axisData = React.useContext(CartesianContext);\n  if (seriesData === undefined) {\n    return [];\n  }\n  const {\n    series,\n    stackingGroups\n  } = seriesData;\n  const {\n    xAxis,\n    yAxis,\n    xAxisIds,\n    yAxisIds\n  } = axisData;\n  const defaultXAxisId = xAxisIds[0];\n  const defaultYAxisId = yAxisIds[0];\n  return stackingGroups.flatMap(({\n    ids: groupIds\n  }) => {\n    return groupIds.flatMap(seriesId => {\n      const {\n        xAxisKey = defaultXAxisId,\n        yAxisKey = defaultYAxisId,\n        stackedData,\n        data,\n        connectNulls\n      } = series[seriesId];\n      const xScale = getValueToPositionMapper(xAxis[xAxisKey].scale);\n      const yScale = yAxis[yAxisKey].scale;\n      const xData = xAxis[xAxisKey].data;\n      if (process.env.NODE_ENV !== 'production') {\n        if (xData === undefined) {\n          throw new Error(`MUI X Charts: ${xAxisKey === DEFAULT_X_AXIS_KEY ? 'The first `xAxis`' : `The x-axis with id \"${xAxisKey}\"`} should have data property to be able to display a line plot.`);\n        }\n        if (xData.length < stackedData.length) {\n          throw new Error(`MUI X Charts: The data length of the x axis (${xData.length} items) is lower than the length of series (${stackedData.length} items).`);\n        }\n      }\n      const areaPath = d3Area().x(d => xScale(d.x)).defined((_, i) => connectNulls || data[i] != null).y0(d => d.y && yScale(d.y[0])).y1(d => d.y && yScale(d.y[1]));\n      const curve = getCurveFactory(series[seriesId].curve);\n      const formattedData = xData?.map((x, index) => ({\n        x,\n        y: stackedData[index]\n      })) ?? [];\n      const d3Data = connectNulls ? formattedData.filter((_, i) => data[i] != null) : formattedData;\n      const d = areaPath.curve(curve)(d3Data) || '';\n      return _extends({}, series[seriesId], {\n        d,\n        seriesId\n      });\n    });\n  });\n};\n\n/**\n * Demos:\n *\n * - [Lines](https://mui.com/x/react-charts/lines/)\n * - [Areas demonstration](https://mui.com/x/react-charts/areas-demo/)\n * - [Stacking](https://mui.com/x/react-charts/stacking/)\n *\n * API:\n *\n * - [AreaPlot API](https://mui.com/x/api/charts/area-plot/)\n */\nfunction AreaPlot(props) {\n  const {\n      slots,\n      slotProps,\n      onItemClick,\n      skipAnimation\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const completedData = useAggregatedData();\n  return /*#__PURE__*/_jsx(\"g\", _extends({}, other, {\n    children: completedData.reverse().map(({\n      d,\n      seriesId,\n      color,\n      highlightScope,\n      area\n    }) => !!area && /*#__PURE__*/_jsx(AreaElement, {\n      id: seriesId,\n      d: d,\n      color: color,\n      highlightScope: highlightScope,\n      slots: slots,\n      slotProps: slotProps,\n      onClick: onItemClick && (event => onItemClick(event, {\n        type: 'line',\n        seriesId\n      })),\n      skipAnimation: skipAnimation\n    }, seriesId))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? AreaPlot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Callback fired when a line area item is clicked.\n   * @param {React.MouseEvent<SVGPathElement, MouseEvent>} event The event source of the callback.\n   * @param {LineItemIdentifier} lineItemIdentifier The line item identifier.\n   */\n  onItemClick: PropTypes.func,\n  /**\n   * If `true`, animations are skipped.\n   * @default false\n   */\n  skipAnimation: PropTypes.bool,\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable component slots.\n   * @default {}\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { AreaPlot };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}