{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/scheduler/view_model/appointments/utils/getSkippedHoursInRange.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport dateUtils from \"../../../../../../core/utils/date\";\nvar getSkippedHoursInRange = (startDate, endDate, viewDataProvider) => {\n  var msInHour = dateUtils.dateToMilliseconds(\"hour\");\n  var startTime = dateUtils.trimTime(startDate).getTime();\n  var endTime = dateUtils.setToDayEnd(new Date(endDate.getTime() - 1)).getTime();\n  var allDayIntervalDuration = 24 * msInHour;\n  var excludedHours = 0;\n  for (var time = startTime; time < endTime; time += allDayIntervalDuration) {\n    var checkDate = new Date(time);\n    if (viewDataProvider.isSkippedDate(checkDate)) {\n      excludedHours += 24;\n    }\n  }\n  return excludedHours;\n};\nexport default getSkippedHoursInRange;","map":{"version":3,"names":["dateUtils","getSkippedHoursInRange","startDate","endDate","viewDataProvider","msInHour","dateToMilliseconds","startTime","trimTime","getTime","endTime","setToDayEnd","Date","allDayIntervalDuration","excludedHours","time","checkDate","isSkippedDate"],"sources":["C:/Users/Michal Abargel/Desktop/FULLSTACK_PROJECTS/PrivateLessones/PL/client/gui/node_modules/devextreme/esm/renovation/ui/scheduler/view_model/appointments/utils/getSkippedHoursInRange.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/scheduler/view_model/appointments/utils/getSkippedHoursInRange.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport dateUtils from \"../../../../../../core/utils/date\";\r\nvar getSkippedHoursInRange = (startDate, endDate, viewDataProvider) => {\r\n    var msInHour = dateUtils.dateToMilliseconds(\"hour\");\r\n    var startTime = dateUtils.trimTime(startDate).getTime();\r\n    var endTime = dateUtils.setToDayEnd(new Date(endDate.getTime() - 1)).getTime();\r\n    var allDayIntervalDuration = 24 * msInHour;\r\n    var excludedHours = 0;\r\n    for (var time = startTime; time < endTime; time += allDayIntervalDuration) {\r\n        var checkDate = new Date(time);\r\n        if (viewDataProvider.isSkippedDate(checkDate)) {\r\n            excludedHours += 24\r\n        }\r\n    }\r\n    return excludedHours\r\n};\r\nexport default getSkippedHoursInRange;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,SAAS,MAAM,mCAAmC;AACzD,IAAIC,sBAAsB,GAAGA,CAACC,SAAS,EAAEC,OAAO,EAAEC,gBAAgB,KAAK;EACnE,IAAIC,QAAQ,GAAGL,SAAS,CAACM,kBAAkB,CAAC,MAAM,CAAC;EACnD,IAAIC,SAAS,GAAGP,SAAS,CAACQ,QAAQ,CAACN,SAAS,CAAC,CAACO,OAAO,CAAC,CAAC;EACvD,IAAIC,OAAO,GAAGV,SAAS,CAACW,WAAW,CAAC,IAAIC,IAAI,CAACT,OAAO,CAACM,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAACA,OAAO,CAAC,CAAC;EAC9E,IAAII,sBAAsB,GAAG,EAAE,GAAGR,QAAQ;EAC1C,IAAIS,aAAa,GAAG,CAAC;EACrB,KAAK,IAAIC,IAAI,GAAGR,SAAS,EAAEQ,IAAI,GAAGL,OAAO,EAAEK,IAAI,IAAIF,sBAAsB,EAAE;IACvE,IAAIG,SAAS,GAAG,IAAIJ,IAAI,CAACG,IAAI,CAAC;IAC9B,IAAIX,gBAAgB,CAACa,aAAa,CAACD,SAAS,CAAC,EAAE;MAC3CF,aAAa,IAAI,EAAE;IACvB;EACJ;EACA,OAAOA,aAAa;AACxB,CAAC;AACD,eAAeb,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}