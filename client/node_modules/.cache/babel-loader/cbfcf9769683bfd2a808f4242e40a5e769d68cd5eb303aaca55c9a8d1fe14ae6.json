{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"sx\"];\nimport * as React from 'react';\nimport useEnhancedEffect from '@mui/utils/useEnhancedEffect';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { useViews } from '../useViews';\nimport { isTimeView } from '../../utils/time-utils';\n\n/**\r\n * Props used to handle the views that are common to all pickers.\r\n */\n\n/**\r\n * Props used to handle the views of the pickers.\r\n */\n\n/**\r\n * Props used to handle the value of the pickers.\r\n */\n\n/**\r\n * Manage the views of all the pickers:\r\n * - Handles the view switch\r\n * - Handles the switch between UI views and field views\r\n * - Handles the focus management when switching views\r\n */\nexport const usePickerViews = _ref => {\n  let {\n    props,\n    propsFromPickerValue,\n    additionalViewProps,\n    inputRef,\n    autoFocusView\n  } = _ref;\n  const {\n    onChange,\n    open,\n    onSelectedSectionsChange,\n    onClose\n  } = propsFromPickerValue;\n  const {\n    views,\n    openTo,\n    onViewChange,\n    disableOpenPicker,\n    viewRenderers,\n    timezone\n  } = props;\n  const propsToForwardToView = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    view,\n    setView,\n    defaultView,\n    focusedView,\n    setFocusedView,\n    setValueAndGoToNextView\n  } = useViews({\n    view: undefined,\n    views,\n    openTo,\n    onChange,\n    onViewChange,\n    autoFocus: autoFocusView\n  });\n  const {\n    hasUIView,\n    viewModeLookup\n  } = React.useMemo(() => views.reduce((acc, viewForReduce) => {\n    let viewMode;\n    if (disableOpenPicker) {\n      viewMode = 'field';\n    } else if (viewRenderers[viewForReduce] != null) {\n      viewMode = 'UI';\n    } else {\n      viewMode = 'field';\n    }\n    acc.viewModeLookup[viewForReduce] = viewMode;\n    if (viewMode === 'UI') {\n      acc.hasUIView = true;\n    }\n    return acc;\n  }, {\n    hasUIView: false,\n    viewModeLookup: {}\n  }), [disableOpenPicker, viewRenderers, views]);\n  const timeViewsCount = React.useMemo(() => views.reduce((acc, viewForReduce) => {\n    if (viewRenderers[viewForReduce] != null && isTimeView(viewForReduce)) {\n      return acc + 1;\n    }\n    return acc;\n  }, 0), [viewRenderers, views]);\n  const currentViewMode = viewModeLookup[view];\n  const shouldRestoreFocus = useEventCallback(() => currentViewMode === 'UI');\n  const [popperView, setPopperView] = React.useState(currentViewMode === 'UI' ? view : null);\n  if (popperView !== view && viewModeLookup[view] === 'UI') {\n    setPopperView(view);\n  }\n  useEnhancedEffect(() => {\n    // Handle case of `DateTimePicker` without time renderers\n    if (currentViewMode === 'field' && open) {\n      onClose();\n      setTimeout(() => {\n        // focusing the input before the range selection is done\n        // calling `onSelectedSectionsChange` outside of timeout results in an inconsistent behavior between Safari And Chrome\n        inputRef == null || inputRef.current.focus();\n        onSelectedSectionsChange(view);\n      });\n    }\n  }, [view]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEnhancedEffect(() => {\n    if (!open) {\n      return;\n    }\n    let newView = view;\n\n    // If the current view is a field view, go to the last popper view\n    if (currentViewMode === 'field' && popperView != null) {\n      newView = popperView;\n    }\n\n    // If the current view is not the default view and both are UI views\n    if (newView !== defaultView && viewModeLookup[newView] === 'UI' && viewModeLookup[defaultView] === 'UI') {\n      newView = defaultView;\n    }\n    if (newView !== view) {\n      setView(newView);\n    }\n    setFocusedView(newView, true);\n  }, [open]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const layoutProps = {\n    views,\n    view: popperView,\n    onViewChange: setView\n  };\n  return {\n    hasUIView,\n    shouldRestoreFocus,\n    layoutProps,\n    renderCurrentView: () => {\n      if (popperView == null) {\n        return null;\n      }\n      const renderer = viewRenderers[popperView];\n      if (renderer == null) {\n        return null;\n      }\n      return renderer(_extends({}, propsToForwardToView, additionalViewProps, propsFromPickerValue, {\n        views,\n        timezone,\n        onChange: setValueAndGoToNextView,\n        view: popperView,\n        onViewChange: setView,\n        focusedView,\n        onFocusedViewChange: setFocusedView,\n        showViewSwitcher: timeViewsCount > 1,\n        timeViewsCount\n      }));\n    }\n  };\n};","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","useEnhancedEffect","useEventCallback","useViews","isTimeView","usePickerViews","_ref","props","propsFromPickerValue","additionalViewProps","inputRef","autoFocusView","onChange","open","onSelectedSectionsChange","onClose","views","openTo","onViewChange","disableOpenPicker","viewRenderers","timezone","propsToForwardToView","view","setView","defaultView","focusedView","setFocusedView","setValueAndGoToNextView","undefined","autoFocus","hasUIView","viewModeLookup","useMemo","reduce","acc","viewForReduce","viewMode","timeViewsCount","currentViewMode","shouldRestoreFocus","popperView","setPopperView","useState","setTimeout","current","focus","newView","layoutProps","renderCurrentView","renderer","onFocusedViewChange","showViewSwitcher"],"sources":["C:/Users/Michal Abargel/Desktop/FULLSTACK_PROJECTS/Patient-Management/client/node_modules/@mui/x-date-pickers/internals/hooks/usePicker/usePickerViews.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nconst _excluded = [\"className\", \"sx\"];\r\nimport * as React from 'react';\r\nimport useEnhancedEffect from '@mui/utils/useEnhancedEffect';\r\nimport useEventCallback from '@mui/utils/useEventCallback';\r\nimport { useViews } from '../useViews';\r\nimport { isTimeView } from '../../utils/time-utils';\r\n\r\n/**\r\n * Props used to handle the views that are common to all pickers.\r\n */\r\n\r\n/**\r\n * Props used to handle the views of the pickers.\r\n */\r\n\r\n/**\r\n * Props used to handle the value of the pickers.\r\n */\r\n\r\n/**\r\n * Manage the views of all the pickers:\r\n * - Handles the view switch\r\n * - Handles the switch between UI views and field views\r\n * - Handles the focus management when switching views\r\n */\r\nexport const usePickerViews = ({\r\n  props,\r\n  propsFromPickerValue,\r\n  additionalViewProps,\r\n  inputRef,\r\n  autoFocusView\r\n}) => {\r\n  const {\r\n    onChange,\r\n    open,\r\n    onSelectedSectionsChange,\r\n    onClose\r\n  } = propsFromPickerValue;\r\n  const {\r\n    views,\r\n    openTo,\r\n    onViewChange,\r\n    disableOpenPicker,\r\n    viewRenderers,\r\n    timezone\r\n  } = props;\r\n  const propsToForwardToView = _objectWithoutPropertiesLoose(props, _excluded);\r\n  const {\r\n    view,\r\n    setView,\r\n    defaultView,\r\n    focusedView,\r\n    setFocusedView,\r\n    setValueAndGoToNextView\r\n  } = useViews({\r\n    view: undefined,\r\n    views,\r\n    openTo,\r\n    onChange,\r\n    onViewChange,\r\n    autoFocus: autoFocusView\r\n  });\r\n  const {\r\n    hasUIView,\r\n    viewModeLookup\r\n  } = React.useMemo(() => views.reduce((acc, viewForReduce) => {\r\n    let viewMode;\r\n    if (disableOpenPicker) {\r\n      viewMode = 'field';\r\n    } else if (viewRenderers[viewForReduce] != null) {\r\n      viewMode = 'UI';\r\n    } else {\r\n      viewMode = 'field';\r\n    }\r\n    acc.viewModeLookup[viewForReduce] = viewMode;\r\n    if (viewMode === 'UI') {\r\n      acc.hasUIView = true;\r\n    }\r\n    return acc;\r\n  }, {\r\n    hasUIView: false,\r\n    viewModeLookup: {}\r\n  }), [disableOpenPicker, viewRenderers, views]);\r\n  const timeViewsCount = React.useMemo(() => views.reduce((acc, viewForReduce) => {\r\n    if (viewRenderers[viewForReduce] != null && isTimeView(viewForReduce)) {\r\n      return acc + 1;\r\n    }\r\n    return acc;\r\n  }, 0), [viewRenderers, views]);\r\n  const currentViewMode = viewModeLookup[view];\r\n  const shouldRestoreFocus = useEventCallback(() => currentViewMode === 'UI');\r\n  const [popperView, setPopperView] = React.useState(currentViewMode === 'UI' ? view : null);\r\n  if (popperView !== view && viewModeLookup[view] === 'UI') {\r\n    setPopperView(view);\r\n  }\r\n  useEnhancedEffect(() => {\r\n    // Handle case of `DateTimePicker` without time renderers\r\n    if (currentViewMode === 'field' && open) {\r\n      onClose();\r\n      setTimeout(() => {\r\n        // focusing the input before the range selection is done\r\n        // calling `onSelectedSectionsChange` outside of timeout results in an inconsistent behavior between Safari And Chrome\r\n        inputRef == null || inputRef.current.focus();\r\n        onSelectedSectionsChange(view);\r\n      });\r\n    }\r\n  }, [view]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEnhancedEffect(() => {\r\n    if (!open) {\r\n      return;\r\n    }\r\n    let newView = view;\r\n\r\n    // If the current view is a field view, go to the last popper view\r\n    if (currentViewMode === 'field' && popperView != null) {\r\n      newView = popperView;\r\n    }\r\n\r\n    // If the current view is not the default view and both are UI views\r\n    if (newView !== defaultView && viewModeLookup[newView] === 'UI' && viewModeLookup[defaultView] === 'UI') {\r\n      newView = defaultView;\r\n    }\r\n    if (newView !== view) {\r\n      setView(newView);\r\n    }\r\n    setFocusedView(newView, true);\r\n  }, [open]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const layoutProps = {\r\n    views,\r\n    view: popperView,\r\n    onViewChange: setView\r\n  };\r\n  return {\r\n    hasUIView,\r\n    shouldRestoreFocus,\r\n    layoutProps,\r\n    renderCurrentView: () => {\r\n      if (popperView == null) {\r\n        return null;\r\n      }\r\n      const renderer = viewRenderers[popperView];\r\n      if (renderer == null) {\r\n        return null;\r\n      }\r\n      return renderer(_extends({}, propsToForwardToView, additionalViewProps, propsFromPickerValue, {\r\n        views,\r\n        timezone,\r\n        onChange: setValueAndGoToNextView,\r\n        view: popperView,\r\n        onViewChange: setView,\r\n        focusedView,\r\n        onFocusedViewChange: setFocusedView,\r\n        showViewSwitcher: timeViewsCount > 1,\r\n        timeViewsCount\r\n      }));\r\n    }\r\n  };\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}