{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/calendar/ui.calendar.multi.selection.strategy.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport CalendarSelectionStrategy from \"./ui.calendar.selection.strategy\";\nclass CalendarMultiSelectionStrategy extends CalendarSelectionStrategy {\n  constructor(component) {\n    super(component);\n    this.NAME = \"MultiSelection\";\n  }\n  getViewOptions() {\n    return {\n      value: this.dateOption(\"values\"),\n      range: [],\n      selectionMode: \"multi\"\n    };\n  }\n  selectValue(selectedValue, e) {\n    var values = [...this.dateOption(\"values\")];\n    var alreadySelectedIndex = values.findIndex(date => (null === date || void 0 === date ? void 0 : date.toDateString()) === selectedValue.toDateString());\n    if (alreadySelectedIndex > -1) {\n      values.splice(alreadySelectedIndex, 1);\n    } else {\n      values.push(selectedValue);\n    }\n    this.skipNavigate();\n    this._updateCurrentDate(selectedValue);\n    this._currentDateChanged = true;\n    this.dateValue(values, e);\n  }\n  updateAriaSelected(value, previousValue) {\n    var _value, _previousValue;\n    null !== (_value = value) && void 0 !== _value ? _value : value = this.dateOption(\"values\");\n    null !== (_previousValue = previousValue) && void 0 !== _previousValue ? _previousValue : previousValue = [];\n    super.updateAriaSelected(value, previousValue);\n  }\n  getDefaultCurrentDate() {\n    var dates = this.dateOption(\"values\").filter(value => value);\n    return this._getLowestDateInArray(dates);\n  }\n}\nexport default CalendarMultiSelectionStrategy;","map":{"version":3,"names":["CalendarSelectionStrategy","CalendarMultiSelectionStrategy","constructor","component","NAME","getViewOptions","value","dateOption","range","selectionMode","selectValue","selectedValue","e","values","alreadySelectedIndex","findIndex","date","toDateString","splice","push","skipNavigate","_updateCurrentDate","_currentDateChanged","dateValue","updateAriaSelected","previousValue","_value","_previousValue","getDefaultCurrentDate","dates","filter","_getLowestDateInArray"],"sources":["C:/Users/Michal Abargel/Desktop/FULLSTACK_PROJECTS/Patient-Management/client/node_modules/devextreme/esm/ui/calendar/ui.calendar.multi.selection.strategy.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/calendar/ui.calendar.multi.selection.strategy.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport CalendarSelectionStrategy from \"./ui.calendar.selection.strategy\";\r\nclass CalendarMultiSelectionStrategy extends CalendarSelectionStrategy {\r\n    constructor(component) {\r\n        super(component);\r\n        this.NAME = \"MultiSelection\"\r\n    }\r\n    getViewOptions() {\r\n        return {\r\n            value: this.dateOption(\"values\"),\r\n            range: [],\r\n            selectionMode: \"multi\"\r\n        }\r\n    }\r\n    selectValue(selectedValue, e) {\r\n        var values = [...this.dateOption(\"values\")];\r\n        var alreadySelectedIndex = values.findIndex(date => (null === date || void 0 === date ? void 0 : date.toDateString()) === selectedValue.toDateString());\r\n        if (alreadySelectedIndex > -1) {\r\n            values.splice(alreadySelectedIndex, 1)\r\n        } else {\r\n            values.push(selectedValue)\r\n        }\r\n        this.skipNavigate();\r\n        this._updateCurrentDate(selectedValue);\r\n        this._currentDateChanged = true;\r\n        this.dateValue(values, e)\r\n    }\r\n    updateAriaSelected(value, previousValue) {\r\n        var _value, _previousValue;\r\n        null !== (_value = value) && void 0 !== _value ? _value : value = this.dateOption(\"values\");\r\n        null !== (_previousValue = previousValue) && void 0 !== _previousValue ? _previousValue : previousValue = [];\r\n        super.updateAriaSelected(value, previousValue)\r\n    }\r\n    getDefaultCurrentDate() {\r\n        var dates = this.dateOption(\"values\").filter(value => value);\r\n        return this._getLowestDateInArray(dates)\r\n    }\r\n}\r\nexport default CalendarMultiSelectionStrategy;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,yBAAyB,MAAM,kCAAkC;AACxE,MAAMC,8BAA8B,SAASD,yBAAyB,CAAC;EACnEE,WAAWA,CAACC,SAAS,EAAE;IACnB,KAAK,CAACA,SAAS,CAAC;IAChB,IAAI,CAACC,IAAI,GAAG,gBAAgB;EAChC;EACAC,cAAcA,CAAA,EAAG;IACb,OAAO;MACHC,KAAK,EAAE,IAAI,CAACC,UAAU,CAAC,QAAQ,CAAC;MAChCC,KAAK,EAAE,EAAE;MACTC,aAAa,EAAE;IACnB,CAAC;EACL;EACAC,WAAWA,CAACC,aAAa,EAAEC,CAAC,EAAE;IAC1B,IAAIC,MAAM,GAAG,CAAC,GAAG,IAAI,CAACN,UAAU,CAAC,QAAQ,CAAC,CAAC;IAC3C,IAAIO,oBAAoB,GAAGD,MAAM,CAACE,SAAS,CAACC,IAAI,IAAI,CAAC,IAAI,KAAKA,IAAI,IAAI,KAAK,CAAC,KAAKA,IAAI,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACC,YAAY,CAAC,CAAC,MAAMN,aAAa,CAACM,YAAY,CAAC,CAAC,CAAC;IACvJ,IAAIH,oBAAoB,GAAG,CAAC,CAAC,EAAE;MAC3BD,MAAM,CAACK,MAAM,CAACJ,oBAAoB,EAAE,CAAC,CAAC;IAC1C,CAAC,MAAM;MACHD,MAAM,CAACM,IAAI,CAACR,aAAa,CAAC;IAC9B;IACA,IAAI,CAACS,YAAY,CAAC,CAAC;IACnB,IAAI,CAACC,kBAAkB,CAACV,aAAa,CAAC;IACtC,IAAI,CAACW,mBAAmB,GAAG,IAAI;IAC/B,IAAI,CAACC,SAAS,CAACV,MAAM,EAAED,CAAC,CAAC;EAC7B;EACAY,kBAAkBA,CAAClB,KAAK,EAAEmB,aAAa,EAAE;IACrC,IAAIC,MAAM,EAAEC,cAAc;IAC1B,IAAI,MAAMD,MAAM,GAAGpB,KAAK,CAAC,IAAI,KAAK,CAAC,KAAKoB,MAAM,GAAGA,MAAM,GAAGpB,KAAK,GAAG,IAAI,CAACC,UAAU,CAAC,QAAQ,CAAC;IAC3F,IAAI,MAAMoB,cAAc,GAAGF,aAAa,CAAC,IAAI,KAAK,CAAC,KAAKE,cAAc,GAAGA,cAAc,GAAGF,aAAa,GAAG,EAAE;IAC5G,KAAK,CAACD,kBAAkB,CAAClB,KAAK,EAAEmB,aAAa,CAAC;EAClD;EACAG,qBAAqBA,CAAA,EAAG;IACpB,IAAIC,KAAK,GAAG,IAAI,CAACtB,UAAU,CAAC,QAAQ,CAAC,CAACuB,MAAM,CAACxB,KAAK,IAAIA,KAAK,CAAC;IAC5D,OAAO,IAAI,CAACyB,qBAAqB,CAACF,KAAK,CAAC;EAC5C;AACJ;AACA,eAAe5B,8BAA8B"},"metadata":{},"sourceType":"module","externalDependencies":[]}