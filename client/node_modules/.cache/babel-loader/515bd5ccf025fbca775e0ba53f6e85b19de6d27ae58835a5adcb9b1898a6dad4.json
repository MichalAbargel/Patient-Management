{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/workspaces/view_model/view_data_generator_timeline_month.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { ViewDataGenerator } from \"./view_data_generator\";\nimport { calculateCellIndex } from \"../../../../renovation/ui/scheduler/view_model/to_test/views/utils/month\";\nimport { calculateStartViewDate } from \"../../../../renovation/ui/scheduler/view_model/to_test/views/utils/timeline_month\";\nimport { setOptionHour } from \"../../../../renovation/ui/scheduler/view_model/to_test/views/utils/base\";\nimport dateUtils from \"../../../../core/utils/date\";\nvar DAY_IN_MILLISECONDS = dateUtils.dateToMilliseconds(\"day\");\nexport class ViewDataGeneratorTimelineMonth extends ViewDataGenerator {\n  _calculateCellIndex(rowIndex, columnIndex, rowCount, columnCount) {\n    return calculateCellIndex(rowIndex, columnIndex, rowCount, columnCount);\n  }\n  calculateEndDate(startDate, interval, endDayHour) {\n    return setOptionHour(startDate, endDayHour);\n  }\n  getInterval() {\n    return DAY_IN_MILLISECONDS;\n  }\n  _calculateStartViewDate(options) {\n    return calculateStartViewDate(options.currentDate, options.startDayHour, options.startDate, options.intervalCount);\n  }\n  getCellCount(options) {\n    var {\n      intervalCount: intervalCount,\n      currentDate: currentDate\n    } = options;\n    var cellCount = 0;\n    for (var i = 1; i <= intervalCount; i++) {\n      cellCount += new Date(currentDate.getFullYear(), currentDate.getMonth() + i, 0).getDate();\n    }\n    return cellCount;\n  }\n  setHiddenInterval() {\n    this.hiddenInterval = 0;\n  }\n}","map":{"version":3,"names":["ViewDataGenerator","calculateCellIndex","calculateStartViewDate","setOptionHour","dateUtils","DAY_IN_MILLISECONDS","dateToMilliseconds","ViewDataGeneratorTimelineMonth","_calculateCellIndex","rowIndex","columnIndex","rowCount","columnCount","calculateEndDate","startDate","interval","endDayHour","getInterval","_calculateStartViewDate","options","currentDate","startDayHour","intervalCount","getCellCount","cellCount","i","Date","getFullYear","getMonth","getDate","setHiddenInterval","hiddenInterval"],"sources":["C:/Users/Michal Abargel/Desktop/FULLSTACK_PROJECTS/PrivateLessones/PL/client/gui/node_modules/devextreme/esm/ui/scheduler/workspaces/view_model/view_data_generator_timeline_month.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/workspaces/view_model/view_data_generator_timeline_month.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    ViewDataGenerator\r\n} from \"./view_data_generator\";\r\nimport {\r\n    calculateCellIndex\r\n} from \"../../../../renovation/ui/scheduler/view_model/to_test/views/utils/month\";\r\nimport {\r\n    calculateStartViewDate\r\n} from \"../../../../renovation/ui/scheduler/view_model/to_test/views/utils/timeline_month\";\r\nimport {\r\n    setOptionHour\r\n} from \"../../../../renovation/ui/scheduler/view_model/to_test/views/utils/base\";\r\nimport dateUtils from \"../../../../core/utils/date\";\r\nvar DAY_IN_MILLISECONDS = dateUtils.dateToMilliseconds(\"day\");\r\nexport class ViewDataGeneratorTimelineMonth extends ViewDataGenerator {\r\n    _calculateCellIndex(rowIndex, columnIndex, rowCount, columnCount) {\r\n        return calculateCellIndex(rowIndex, columnIndex, rowCount, columnCount)\r\n    }\r\n    calculateEndDate(startDate, interval, endDayHour) {\r\n        return setOptionHour(startDate, endDayHour)\r\n    }\r\n    getInterval() {\r\n        return DAY_IN_MILLISECONDS\r\n    }\r\n    _calculateStartViewDate(options) {\r\n        return calculateStartViewDate(options.currentDate, options.startDayHour, options.startDate, options.intervalCount)\r\n    }\r\n    getCellCount(options) {\r\n        var {\r\n            intervalCount: intervalCount,\r\n            currentDate: currentDate\r\n        } = options;\r\n        var cellCount = 0;\r\n        for (var i = 1; i <= intervalCount; i++) {\r\n            cellCount += new Date(currentDate.getFullYear(), currentDate.getMonth() + i, 0).getDate()\r\n        }\r\n        return cellCount\r\n    }\r\n    setHiddenInterval() {\r\n        this.hiddenInterval = 0\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,iBAAiB,QACd,uBAAuB;AAC9B,SACIC,kBAAkB,QACf,0EAA0E;AACjF,SACIC,sBAAsB,QACnB,mFAAmF;AAC1F,SACIC,aAAa,QACV,yEAAyE;AAChF,OAAOC,SAAS,MAAM,6BAA6B;AACnD,IAAIC,mBAAmB,GAAGD,SAAS,CAACE,kBAAkB,CAAC,KAAK,CAAC;AAC7D,OAAO,MAAMC,8BAA8B,SAASP,iBAAiB,CAAC;EAClEQ,mBAAmBA,CAACC,QAAQ,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,WAAW,EAAE;IAC9D,OAAOX,kBAAkB,CAACQ,QAAQ,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,WAAW,CAAC;EAC3E;EACAC,gBAAgBA,CAACC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,EAAE;IAC9C,OAAOb,aAAa,CAACW,SAAS,EAAEE,UAAU,CAAC;EAC/C;EACAC,WAAWA,CAAA,EAAG;IACV,OAAOZ,mBAAmB;EAC9B;EACAa,uBAAuBA,CAACC,OAAO,EAAE;IAC7B,OAAOjB,sBAAsB,CAACiB,OAAO,CAACC,WAAW,EAAED,OAAO,CAACE,YAAY,EAAEF,OAAO,CAACL,SAAS,EAAEK,OAAO,CAACG,aAAa,CAAC;EACtH;EACAC,YAAYA,CAACJ,OAAO,EAAE;IAClB,IAAI;MACAG,aAAa,EAAEA,aAAa;MAC5BF,WAAW,EAAEA;IACjB,CAAC,GAAGD,OAAO;IACX,IAAIK,SAAS,GAAG,CAAC;IACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIH,aAAa,EAAEG,CAAC,EAAE,EAAE;MACrCD,SAAS,IAAI,IAAIE,IAAI,CAACN,WAAW,CAACO,WAAW,CAAC,CAAC,EAAEP,WAAW,CAACQ,QAAQ,CAAC,CAAC,GAAGH,CAAC,EAAE,CAAC,CAAC,CAACI,OAAO,CAAC,CAAC;IAC7F;IACA,OAAOL,SAAS;EACpB;EACAM,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACC,cAAc,GAAG,CAAC;EAC3B;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}