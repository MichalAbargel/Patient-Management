{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/component_wrapper/common/template_wrapper.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"isEqual\"];\nimport { InfernoComponent, InfernoEffect } from \"@devextreme/runtime/inferno\";\nimport { findDOMfromVNode } from \"inferno\";\nimport { replaceWith } from \"../../../core/utils/dom\";\nimport { shallowEquals } from \"../../utils/shallow_equals\";\nimport $ from \"../../../core/renderer\";\nimport domAdapter from \"../../../core/dom_adapter\";\nimport { getPublicElement } from \"../../../core/element\";\nimport { isDefined } from \"../../../core/utils/type\";\nfunction isDxElementWrapper(element) {\n  return !!element.toArray;\n}\nexport function buildTemplateArgs(model, template) {\n  var _model$data;\n  var args = {\n    template: template,\n    model: _extends({}, model)\n  };\n  var _ref = null !== (_model$data = model.data) && void 0 !== _model$data ? _model$data : {},\n    {\n      isEqual: isEqual\n    } = _ref,\n    data = _objectWithoutPropertiesLoose(_ref, _excluded);\n  if (isEqual) {\n    args.model.data = data;\n    args.isEqual = isEqual;\n  }\n  return args;\n}\nfunction renderTemplateContent(props, container) {\n  var _props$model;\n  var {\n    data: data,\n    index: index\n  } = null !== (_props$model = props.model) && void 0 !== _props$model ? _props$model : {\n    data: {}\n  };\n  if (data) {\n    Object.keys(data).forEach(name => {\n      if (data[name] && domAdapter.isNode(data[name])) {\n        data[name] = getPublicElement($(data[name]));\n      }\n    });\n  }\n  var rendered = props.template.render(_extends({\n    container: container,\n    transclude: props.transclude\n  }, {\n    renovated: props.renovated\n  }, !props.transclude ? {\n    model: data\n  } : {}, !props.transclude && Number.isFinite(index) ? {\n    index: index\n  } : {}));\n  if (void 0 === rendered) {\n    return [];\n  }\n  return isDxElementWrapper(rendered) ? rendered.toArray() : [$(rendered).get(0)];\n}\nfunction removeDifferentElements(oldChildren, newChildren) {\n  newChildren.forEach(newElement => {\n    var hasOldChild = !!oldChildren.find(oldElement => newElement === oldElement);\n    if (!hasOldChild && newElement.parentNode) {\n      newElement.parentNode.removeChild(newElement);\n    }\n  });\n}\nexport class TemplateWrapper extends InfernoComponent {\n  constructor(props) {\n    super(props);\n    this.renderTemplate = this.renderTemplate.bind(this);\n  }\n  renderTemplate() {\n    var node = findDOMfromVNode(this.$LI, true);\n    if (!(null !== node && void 0 !== node && node.parentNode)) {\n      return () => {};\n    }\n    var container = node.parentNode;\n    var $container = $(container);\n    var $oldContainerContent = $container.contents().toArray();\n    var content = renderTemplateContent(this.props, getPublicElement($container));\n    replaceWith($(node), $(content));\n    return () => {\n      var $actualContainerContent = $(container).contents().toArray();\n      removeDifferentElements($oldContainerContent, $actualContainerContent);\n      container.appendChild(node);\n    };\n  }\n  shouldComponentUpdate(nextProps) {\n    var {\n      model: model,\n      template: template\n    } = this.props;\n    var {\n      isEqual: isEqual,\n      model: nextModel,\n      template: nextTemplate\n    } = nextProps;\n    var equalityComparer = null !== isEqual && void 0 !== isEqual ? isEqual : shallowEquals;\n    if (template !== nextTemplate) {\n      return true;\n    }\n    if (!isDefined(model) || !isDefined(nextModel)) {\n      return model !== nextModel;\n    }\n    var {\n      data: data,\n      index: index\n    } = model;\n    var {\n      data: nextData,\n      index: nextIndex\n    } = nextModel;\n    if (index !== nextIndex) {\n      return true;\n    }\n    return !equalityComparer(data, nextData);\n  }\n  createEffects() {\n    return [new InfernoEffect(this.renderTemplate, [this.props.template, this.props.model])];\n  }\n  updateEffects() {\n    this._effects[0].update([this.props.template, this.props.model]);\n  }\n  componentWillUnmount() {}\n  render() {\n    return null;\n  }\n}","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","_excluded","InfernoComponent","InfernoEffect","findDOMfromVNode","replaceWith","shallowEquals","$","domAdapter","getPublicElement","isDefined","isDxElementWrapper","element","toArray","buildTemplateArgs","model","template","_model$data","args","_ref","data","isEqual","renderTemplateContent","props","container","_props$model","index","Object","keys","forEach","name","isNode","rendered","render","transclude","renovated","Number","isFinite","get","removeDifferentElements","oldChildren","newChildren","newElement","hasOldChild","find","oldElement","parentNode","removeChild","TemplateWrapper","constructor","renderTemplate","bind","node","$LI","$container","$oldContainerContent","contents","content","$actualContainerContent","appendChild","shouldComponentUpdate","nextProps","nextModel","nextTemplate","equalityComparer","nextData","nextIndex","createEffects","updateEffects","_effects","update","componentWillUnmount"],"sources":["C:/Users/Michal Abargel/Desktop/FULLSTACK_PROJECTS/PrivateLessones/PL/client/gui/node_modules/devextreme/esm/renovation/component_wrapper/common/template_wrapper.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/renovation/component_wrapper/common/template_wrapper.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar _excluded = [\"isEqual\"];\r\nimport {\r\n    InfernoComponent,\r\n    InfernoEffect\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    findDOMfromVNode\r\n} from \"inferno\";\r\nimport {\r\n    replaceWith\r\n} from \"../../../core/utils/dom\";\r\nimport {\r\n    shallowEquals\r\n} from \"../../utils/shallow_equals\";\r\nimport $ from \"../../../core/renderer\";\r\nimport domAdapter from \"../../../core/dom_adapter\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../../core/element\";\r\nimport {\r\n    isDefined\r\n} from \"../../../core/utils/type\";\r\n\r\nfunction isDxElementWrapper(element) {\r\n    return !!element.toArray\r\n}\r\nexport function buildTemplateArgs(model, template) {\r\n    var _model$data;\r\n    var args = {\r\n        template: template,\r\n        model: _extends({}, model)\r\n    };\r\n    var _ref = null !== (_model$data = model.data) && void 0 !== _model$data ? _model$data : {},\r\n        {\r\n            isEqual: isEqual\r\n        } = _ref,\r\n        data = _objectWithoutPropertiesLoose(_ref, _excluded);\r\n    if (isEqual) {\r\n        args.model.data = data;\r\n        args.isEqual = isEqual\r\n    }\r\n    return args\r\n}\r\n\r\nfunction renderTemplateContent(props, container) {\r\n    var _props$model;\r\n    var {\r\n        data: data,\r\n        index: index\r\n    } = null !== (_props$model = props.model) && void 0 !== _props$model ? _props$model : {\r\n        data: {}\r\n    };\r\n    if (data) {\r\n        Object.keys(data).forEach(name => {\r\n            if (data[name] && domAdapter.isNode(data[name])) {\r\n                data[name] = getPublicElement($(data[name]))\r\n            }\r\n        })\r\n    }\r\n    var rendered = props.template.render(_extends({\r\n        container: container,\r\n        transclude: props.transclude\r\n    }, {\r\n        renovated: props.renovated\r\n    }, !props.transclude ? {\r\n        model: data\r\n    } : {}, !props.transclude && Number.isFinite(index) ? {\r\n        index: index\r\n    } : {}));\r\n    if (void 0 === rendered) {\r\n        return []\r\n    }\r\n    return isDxElementWrapper(rendered) ? rendered.toArray() : [$(rendered).get(0)]\r\n}\r\n\r\nfunction removeDifferentElements(oldChildren, newChildren) {\r\n    newChildren.forEach(newElement => {\r\n        var hasOldChild = !!oldChildren.find(oldElement => newElement === oldElement);\r\n        if (!hasOldChild && newElement.parentNode) {\r\n            newElement.parentNode.removeChild(newElement)\r\n        }\r\n    })\r\n}\r\nexport class TemplateWrapper extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.renderTemplate = this.renderTemplate.bind(this)\r\n    }\r\n    renderTemplate() {\r\n        var node = findDOMfromVNode(this.$LI, true);\r\n        if (!(null !== node && void 0 !== node && node.parentNode)) {\r\n            return () => {}\r\n        }\r\n        var container = node.parentNode;\r\n        var $container = $(container);\r\n        var $oldContainerContent = $container.contents().toArray();\r\n        var content = renderTemplateContent(this.props, getPublicElement($container));\r\n        replaceWith($(node), $(content));\r\n        return () => {\r\n            var $actualContainerContent = $(container).contents().toArray();\r\n            removeDifferentElements($oldContainerContent, $actualContainerContent);\r\n            container.appendChild(node)\r\n        }\r\n    }\r\n    shouldComponentUpdate(nextProps) {\r\n        var {\r\n            model: model,\r\n            template: template\r\n        } = this.props;\r\n        var {\r\n            isEqual: isEqual,\r\n            model: nextModel,\r\n            template: nextTemplate\r\n        } = nextProps;\r\n        var equalityComparer = null !== isEqual && void 0 !== isEqual ? isEqual : shallowEquals;\r\n        if (template !== nextTemplate) {\r\n            return true\r\n        }\r\n        if (!isDefined(model) || !isDefined(nextModel)) {\r\n            return model !== nextModel\r\n        }\r\n        var {\r\n            data: data,\r\n            index: index\r\n        } = model;\r\n        var {\r\n            data: nextData,\r\n            index: nextIndex\r\n        } = nextModel;\r\n        if (index !== nextIndex) {\r\n            return true\r\n        }\r\n        return !equalityComparer(data, nextData)\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.renderTemplate, [this.props.template, this.props.model])]\r\n    }\r\n    updateEffects() {\r\n        this._effects[0].update([this.props.template, this.props.model])\r\n    }\r\n    componentWillUnmount() {}\r\n    render() {\r\n        return null\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,6BAA6B,MAAM,yDAAyD;AACnG,OAAOC,QAAQ,MAAM,oCAAoC;AACzD,IAAIC,SAAS,GAAG,CAAC,SAAS,CAAC;AAC3B,SACIC,gBAAgB,EAChBC,aAAa,QACV,6BAA6B;AACpC,SACIC,gBAAgB,QACb,SAAS;AAChB,SACIC,WAAW,QACR,yBAAyB;AAChC,SACIC,aAAa,QACV,4BAA4B;AACnC,OAAOC,CAAC,MAAM,wBAAwB;AACtC,OAAOC,UAAU,MAAM,2BAA2B;AAClD,SACIC,gBAAgB,QACb,uBAAuB;AAC9B,SACIC,SAAS,QACN,0BAA0B;AAEjC,SAASC,kBAAkBA,CAACC,OAAO,EAAE;EACjC,OAAO,CAAC,CAACA,OAAO,CAACC,OAAO;AAC5B;AACA,OAAO,SAASC,iBAAiBA,CAACC,KAAK,EAAEC,QAAQ,EAAE;EAC/C,IAAIC,WAAW;EACf,IAAIC,IAAI,GAAG;IACPF,QAAQ,EAAEA,QAAQ;IAClBD,KAAK,EAAEf,QAAQ,CAAC,CAAC,CAAC,EAAEe,KAAK;EAC7B,CAAC;EACD,IAAII,IAAI,GAAG,IAAI,MAAMF,WAAW,GAAGF,KAAK,CAACK,IAAI,CAAC,IAAI,KAAK,CAAC,KAAKH,WAAW,GAAGA,WAAW,GAAG,CAAC,CAAC;IACvF;MACII,OAAO,EAAEA;IACb,CAAC,GAAGF,IAAI;IACRC,IAAI,GAAGrB,6BAA6B,CAACoB,IAAI,EAAElB,SAAS,CAAC;EACzD,IAAIoB,OAAO,EAAE;IACTH,IAAI,CAACH,KAAK,CAACK,IAAI,GAAGA,IAAI;IACtBF,IAAI,CAACG,OAAO,GAAGA,OAAO;EAC1B;EACA,OAAOH,IAAI;AACf;AAEA,SAASI,qBAAqBA,CAACC,KAAK,EAAEC,SAAS,EAAE;EAC7C,IAAIC,YAAY;EAChB,IAAI;IACAL,IAAI,EAAEA,IAAI;IACVM,KAAK,EAAEA;EACX,CAAC,GAAG,IAAI,MAAMD,YAAY,GAAGF,KAAK,CAACR,KAAK,CAAC,IAAI,KAAK,CAAC,KAAKU,YAAY,GAAGA,YAAY,GAAG;IAClFL,IAAI,EAAE,CAAC;EACX,CAAC;EACD,IAAIA,IAAI,EAAE;IACNO,MAAM,CAACC,IAAI,CAACR,IAAI,CAAC,CAACS,OAAO,CAACC,IAAI,IAAI;MAC9B,IAAIV,IAAI,CAACU,IAAI,CAAC,IAAItB,UAAU,CAACuB,MAAM,CAACX,IAAI,CAACU,IAAI,CAAC,CAAC,EAAE;QAC7CV,IAAI,CAACU,IAAI,CAAC,GAAGrB,gBAAgB,CAACF,CAAC,CAACa,IAAI,CAACU,IAAI,CAAC,CAAC,CAAC;MAChD;IACJ,CAAC,CAAC;EACN;EACA,IAAIE,QAAQ,GAAGT,KAAK,CAACP,QAAQ,CAACiB,MAAM,CAACjC,QAAQ,CAAC;IAC1CwB,SAAS,EAAEA,SAAS;IACpBU,UAAU,EAAEX,KAAK,CAACW;EACtB,CAAC,EAAE;IACCC,SAAS,EAAEZ,KAAK,CAACY;EACrB,CAAC,EAAE,CAACZ,KAAK,CAACW,UAAU,GAAG;IACnBnB,KAAK,EAAEK;EACX,CAAC,GAAG,CAAC,CAAC,EAAE,CAACG,KAAK,CAACW,UAAU,IAAIE,MAAM,CAACC,QAAQ,CAACX,KAAK,CAAC,GAAG;IAClDA,KAAK,EAAEA;EACX,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACR,IAAI,KAAK,CAAC,KAAKM,QAAQ,EAAE;IACrB,OAAO,EAAE;EACb;EACA,OAAOrB,kBAAkB,CAACqB,QAAQ,CAAC,GAAGA,QAAQ,CAACnB,OAAO,CAAC,CAAC,GAAG,CAACN,CAAC,CAACyB,QAAQ,CAAC,CAACM,GAAG,CAAC,CAAC,CAAC,CAAC;AACnF;AAEA,SAASC,uBAAuBA,CAACC,WAAW,EAAEC,WAAW,EAAE;EACvDA,WAAW,CAACZ,OAAO,CAACa,UAAU,IAAI;IAC9B,IAAIC,WAAW,GAAG,CAAC,CAACH,WAAW,CAACI,IAAI,CAACC,UAAU,IAAIH,UAAU,KAAKG,UAAU,CAAC;IAC7E,IAAI,CAACF,WAAW,IAAID,UAAU,CAACI,UAAU,EAAE;MACvCJ,UAAU,CAACI,UAAU,CAACC,WAAW,CAACL,UAAU,CAAC;IACjD;EACJ,CAAC,CAAC;AACN;AACA,OAAO,MAAMM,eAAe,SAAS9C,gBAAgB,CAAC;EAClD+C,WAAWA,CAAC1B,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAAC2B,cAAc,GAAG,IAAI,CAACA,cAAc,CAACC,IAAI,CAAC,IAAI,CAAC;EACxD;EACAD,cAAcA,CAAA,EAAG;IACb,IAAIE,IAAI,GAAGhD,gBAAgB,CAAC,IAAI,CAACiD,GAAG,EAAE,IAAI,CAAC;IAC3C,IAAI,EAAE,IAAI,KAAKD,IAAI,IAAI,KAAK,CAAC,KAAKA,IAAI,IAAIA,IAAI,CAACN,UAAU,CAAC,EAAE;MACxD,OAAO,MAAM,CAAC,CAAC;IACnB;IACA,IAAItB,SAAS,GAAG4B,IAAI,CAACN,UAAU;IAC/B,IAAIQ,UAAU,GAAG/C,CAAC,CAACiB,SAAS,CAAC;IAC7B,IAAI+B,oBAAoB,GAAGD,UAAU,CAACE,QAAQ,CAAC,CAAC,CAAC3C,OAAO,CAAC,CAAC;IAC1D,IAAI4C,OAAO,GAAGnC,qBAAqB,CAAC,IAAI,CAACC,KAAK,EAAEd,gBAAgB,CAAC6C,UAAU,CAAC,CAAC;IAC7EjD,WAAW,CAACE,CAAC,CAAC6C,IAAI,CAAC,EAAE7C,CAAC,CAACkD,OAAO,CAAC,CAAC;IAChC,OAAO,MAAM;MACT,IAAIC,uBAAuB,GAAGnD,CAAC,CAACiB,SAAS,CAAC,CAACgC,QAAQ,CAAC,CAAC,CAAC3C,OAAO,CAAC,CAAC;MAC/D0B,uBAAuB,CAACgB,oBAAoB,EAAEG,uBAAuB,CAAC;MACtElC,SAAS,CAACmC,WAAW,CAACP,IAAI,CAAC;IAC/B,CAAC;EACL;EACAQ,qBAAqBA,CAACC,SAAS,EAAE;IAC7B,IAAI;MACA9C,KAAK,EAAEA,KAAK;MACZC,QAAQ,EAAEA;IACd,CAAC,GAAG,IAAI,CAACO,KAAK;IACd,IAAI;MACAF,OAAO,EAAEA,OAAO;MAChBN,KAAK,EAAE+C,SAAS;MAChB9C,QAAQ,EAAE+C;IACd,CAAC,GAAGF,SAAS;IACb,IAAIG,gBAAgB,GAAG,IAAI,KAAK3C,OAAO,IAAI,KAAK,CAAC,KAAKA,OAAO,GAAGA,OAAO,GAAGf,aAAa;IACvF,IAAIU,QAAQ,KAAK+C,YAAY,EAAE;MAC3B,OAAO,IAAI;IACf;IACA,IAAI,CAACrD,SAAS,CAACK,KAAK,CAAC,IAAI,CAACL,SAAS,CAACoD,SAAS,CAAC,EAAE;MAC5C,OAAO/C,KAAK,KAAK+C,SAAS;IAC9B;IACA,IAAI;MACA1C,IAAI,EAAEA,IAAI;MACVM,KAAK,EAAEA;IACX,CAAC,GAAGX,KAAK;IACT,IAAI;MACAK,IAAI,EAAE6C,QAAQ;MACdvC,KAAK,EAAEwC;IACX,CAAC,GAAGJ,SAAS;IACb,IAAIpC,KAAK,KAAKwC,SAAS,EAAE;MACrB,OAAO,IAAI;IACf;IACA,OAAO,CAACF,gBAAgB,CAAC5C,IAAI,EAAE6C,QAAQ,CAAC;EAC5C;EACAE,aAAaA,CAAA,EAAG;IACZ,OAAO,CAAC,IAAIhE,aAAa,CAAC,IAAI,CAAC+C,cAAc,EAAE,CAAC,IAAI,CAAC3B,KAAK,CAACP,QAAQ,EAAE,IAAI,CAACO,KAAK,CAACR,KAAK,CAAC,CAAC,CAAC;EAC5F;EACAqD,aAAaA,CAAA,EAAG;IACZ,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC,IAAI,CAAC/C,KAAK,CAACP,QAAQ,EAAE,IAAI,CAACO,KAAK,CAACR,KAAK,CAAC,CAAC;EACpE;EACAwD,oBAAoBA,CAAA,EAAG,CAAC;EACxBtC,MAAMA,CAAA,EAAG;IACL,OAAO,IAAI;EACf;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}