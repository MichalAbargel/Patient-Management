{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/scheduler/utils/filtering/remote.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { equalByValue } from \"../../../../../core/utils/common\";\nimport { extend } from \"../../../../../core/utils/extend\";\nimport dateSerialization from \"../../../../../core/utils/date_serialization\";\nimport { isDefined, isString } from \"../../../../../core/utils/type\";\nimport getDatesWithoutTime from \"./getDatesWithoutTime\";\nvar FilterPosition = {\n  dateFilter: 0,\n  userFilter: 1\n};\nclass RemoteFilterCombiner {\n  constructor(options) {\n    this.options = options;\n  }\n  get dataAccessors() {\n    return this.options.dataAccessors;\n  }\n  get dataSourceFilter() {\n    return this.options.dataSourceFilter;\n  }\n  get dateSerializationFormat() {\n    return this.options.dateSerializationFormat;\n  }\n  get forceIsoDateParsing() {\n    return isDefined(this.options.forceIsoDateParsing) ? this.options.forceIsoDateParsing : true;\n  }\n  makeDateFilter(min, max) {\n    var {\n      endDateExpr: endDateExpr,\n      recurrenceRuleExpr: recurrenceRuleExpr,\n      startDateExpr: startDateExpr\n    } = this.dataAccessors.expr;\n    var dateFilter = [[[endDateExpr, \">=\", min], [startDateExpr, \"<\", max]], \"or\", [recurrenceRuleExpr, \"startswith\", \"freq\"], \"or\", [[endDateExpr, min], [startDateExpr, min]]];\n    if (!recurrenceRuleExpr) {\n      dateFilter.splice(1, 2);\n    }\n    return dateFilter;\n  }\n  combineFilters(dateFilter, userFilter) {\n    var combinedFilter = [];\n    dateFilter && combinedFilter.push(dateFilter);\n    userFilter && combinedFilter.push(userFilter);\n    return this.serializeRemoteFilter(combinedFilter);\n  }\n  serializeRemoteFilter(combinedFilter) {\n    if (!Array.isArray(combinedFilter)) {\n      return combinedFilter;\n    }\n    var {\n      endDateExpr: endDateExpr,\n      startDateExpr: startDateExpr\n    } = this.dataAccessors.expr;\n    var filter = extend([], combinedFilter);\n    if (isString(filter[0])) {\n      if (this.forceIsoDateParsing && filter.length > 1) {\n        if (filter[0] === startDateExpr || filter[0] === endDateExpr) {\n          var lastFilterValue = filter[filter.length - 1];\n          filter[filter.length - 1] = dateSerialization.serializeDate(new Date(lastFilterValue), this.dateSerializationFormat);\n        }\n      }\n    }\n    for (var i = 0; i < filter.length; i += 1) {\n      filter[i] = this.serializeRemoteFilter(filter[i]);\n    }\n    return filter;\n  }\n  getUserFilter(dateFilter) {\n    if (!this.dataSourceFilter || equalByValue(this.dataSourceFilter, dateFilter)) {\n      return;\n    }\n    var containsDateFilter = this.dataSourceFilter.length > 0 && equalByValue(this.dataSourceFilter[FilterPosition.dateFilter], dateFilter);\n    var userFilter = containsDateFilter ? this.dataSourceFilter[FilterPosition.userFilter] : this.dataSourceFilter;\n    return userFilter;\n  }\n  combine(min, max) {\n    var [trimMin, trimMax] = getDatesWithoutTime(min, max);\n    var dateFilter = this.makeDateFilter(trimMin, trimMax);\n    var userFilter = this.getUserFilter(dateFilter);\n    var combinedFilter = this.combineFilters(dateFilter, userFilter);\n    return combinedFilter;\n  }\n}\nvar combineRemoteFilter = options => new RemoteFilterCombiner(options).combine(options.min, options.max);\nexport default combineRemoteFilter;","map":{"version":3,"names":["equalByValue","extend","dateSerialization","isDefined","isString","getDatesWithoutTime","FilterPosition","dateFilter","userFilter","RemoteFilterCombiner","constructor","options","dataAccessors","dataSourceFilter","dateSerializationFormat","forceIsoDateParsing","makeDateFilter","min","max","endDateExpr","recurrenceRuleExpr","startDateExpr","expr","splice","combineFilters","combinedFilter","push","serializeRemoteFilter","Array","isArray","filter","length","lastFilterValue","serializeDate","Date","i","getUserFilter","containsDateFilter","combine","trimMin","trimMax","combineRemoteFilter"],"sources":["C:/Users/Michal Abargel/Desktop/FULLSTACK_PROJECTS/PrivateLessones/PL/client/gui/node_modules/devextreme/esm/renovation/ui/scheduler/utils/filtering/remote.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/scheduler/utils/filtering/remote.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    equalByValue\r\n} from \"../../../../../core/utils/common\";\r\nimport {\r\n    extend\r\n} from \"../../../../../core/utils/extend\";\r\nimport dateSerialization from \"../../../../../core/utils/date_serialization\";\r\nimport {\r\n    isDefined,\r\n    isString\r\n} from \"../../../../../core/utils/type\";\r\nimport getDatesWithoutTime from \"./getDatesWithoutTime\";\r\nvar FilterPosition = {\r\n    dateFilter: 0,\r\n    userFilter: 1\r\n};\r\nclass RemoteFilterCombiner {\r\n    constructor(options) {\r\n        this.options = options\r\n    }\r\n    get dataAccessors() {\r\n        return this.options.dataAccessors\r\n    }\r\n    get dataSourceFilter() {\r\n        return this.options.dataSourceFilter\r\n    }\r\n    get dateSerializationFormat() {\r\n        return this.options.dateSerializationFormat\r\n    }\r\n    get forceIsoDateParsing() {\r\n        return isDefined(this.options.forceIsoDateParsing) ? this.options.forceIsoDateParsing : true\r\n    }\r\n    makeDateFilter(min, max) {\r\n        var {\r\n            endDateExpr: endDateExpr,\r\n            recurrenceRuleExpr: recurrenceRuleExpr,\r\n            startDateExpr: startDateExpr\r\n        } = this.dataAccessors.expr;\r\n        var dateFilter = [\r\n            [\r\n                [endDateExpr, \">=\", min],\r\n                [startDateExpr, \"<\", max]\r\n            ], \"or\", [recurrenceRuleExpr, \"startswith\", \"freq\"], \"or\", [\r\n                [endDateExpr, min],\r\n                [startDateExpr, min]\r\n            ]\r\n        ];\r\n        if (!recurrenceRuleExpr) {\r\n            dateFilter.splice(1, 2)\r\n        }\r\n        return dateFilter\r\n    }\r\n    combineFilters(dateFilter, userFilter) {\r\n        var combinedFilter = [];\r\n        dateFilter && combinedFilter.push(dateFilter);\r\n        userFilter && combinedFilter.push(userFilter);\r\n        return this.serializeRemoteFilter(combinedFilter)\r\n    }\r\n    serializeRemoteFilter(combinedFilter) {\r\n        if (!Array.isArray(combinedFilter)) {\r\n            return combinedFilter\r\n        }\r\n        var {\r\n            endDateExpr: endDateExpr,\r\n            startDateExpr: startDateExpr\r\n        } = this.dataAccessors.expr;\r\n        var filter = extend([], combinedFilter);\r\n        if (isString(filter[0])) {\r\n            if (this.forceIsoDateParsing && filter.length > 1) {\r\n                if (filter[0] === startDateExpr || filter[0] === endDateExpr) {\r\n                    var lastFilterValue = filter[filter.length - 1];\r\n                    filter[filter.length - 1] = dateSerialization.serializeDate(new Date(lastFilterValue), this.dateSerializationFormat)\r\n                }\r\n            }\r\n        }\r\n        for (var i = 0; i < filter.length; i += 1) {\r\n            filter[i] = this.serializeRemoteFilter(filter[i])\r\n        }\r\n        return filter\r\n    }\r\n    getUserFilter(dateFilter) {\r\n        if (!this.dataSourceFilter || equalByValue(this.dataSourceFilter, dateFilter)) {\r\n            return\r\n        }\r\n        var containsDateFilter = this.dataSourceFilter.length > 0 && equalByValue(this.dataSourceFilter[FilterPosition.dateFilter], dateFilter);\r\n        var userFilter = containsDateFilter ? this.dataSourceFilter[FilterPosition.userFilter] : this.dataSourceFilter;\r\n        return userFilter\r\n    }\r\n    combine(min, max) {\r\n        var [trimMin, trimMax] = getDatesWithoutTime(min, max);\r\n        var dateFilter = this.makeDateFilter(trimMin, trimMax);\r\n        var userFilter = this.getUserFilter(dateFilter);\r\n        var combinedFilter = this.combineFilters(dateFilter, userFilter);\r\n        return combinedFilter\r\n    }\r\n}\r\nvar combineRemoteFilter = options => new RemoteFilterCombiner(options).combine(options.min, options.max);\r\nexport default combineRemoteFilter;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}