{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/appointmentAdapter.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { extend } from \"../../core/utils/extend\";\nimport errors from \"../widget/ui.errors\";\nimport { deepExtendArraySafe } from \"../../core/utils/object\";\nimport { getRecurrenceProcessor } from \"./recurrence\";\nimport { ExpressionUtils } from \"./expressionUtils\";\nvar PROPERTY_NAMES = {\n  startDate: \"startDate\",\n  endDate: \"endDate\",\n  allDay: \"allDay\",\n  text: \"text\",\n  description: \"description\",\n  startDateTimeZone: \"startDateTimeZone\",\n  endDateTimeZone: \"endDateTimeZone\",\n  recurrenceRule: \"recurrenceRule\",\n  recurrenceException: \"recurrenceException\",\n  disabled: \"disabled\"\n};\nclass AppointmentAdapter {\n  constructor(rawAppointment, dataAccessors, timeZoneCalculator, options) {\n    this.rawAppointment = rawAppointment;\n    this.dataAccessors = dataAccessors;\n    this.timeZoneCalculator = timeZoneCalculator;\n    this.options = options;\n  }\n  get duration() {\n    return this.endDate ? this.endDate - this.startDate : 0;\n  }\n  get startDate() {\n    var result = this.getField(PROPERTY_NAMES.startDate);\n    return void 0 === result ? result : new Date(result);\n  }\n  set startDate(value) {\n    this.setField(PROPERTY_NAMES.startDate, value);\n  }\n  get endDate() {\n    var result = this.getField(PROPERTY_NAMES.endDate);\n    return void 0 === result ? result : new Date(result);\n  }\n  set endDate(value) {\n    this.setField(PROPERTY_NAMES.endDate, value);\n  }\n  get allDay() {\n    return this.getField(PROPERTY_NAMES.allDay);\n  }\n  set allDay(value) {\n    this.setField(PROPERTY_NAMES.allDay, value);\n  }\n  get text() {\n    return this.getField(PROPERTY_NAMES.text);\n  }\n  set text(value) {\n    this.setField(PROPERTY_NAMES.text, value);\n  }\n  get description() {\n    return this.getField(PROPERTY_NAMES.description);\n  }\n  set description(value) {\n    this.setField(PROPERTY_NAMES.description, value);\n  }\n  get startDateTimeZone() {\n    return this.getField(PROPERTY_NAMES.startDateTimeZone);\n  }\n  get endDateTimeZone() {\n    return this.getField(PROPERTY_NAMES.endDateTimeZone);\n  }\n  get recurrenceRule() {\n    return this.getField(PROPERTY_NAMES.recurrenceRule);\n  }\n  set recurrenceRule(value) {\n    this.setField(PROPERTY_NAMES.recurrenceRule, value);\n  }\n  get recurrenceException() {\n    return this.getField(PROPERTY_NAMES.recurrenceException);\n  }\n  set recurrenceException(value) {\n    this.setField(PROPERTY_NAMES.recurrenceException, value);\n  }\n  get disabled() {\n    return !!this.getField(PROPERTY_NAMES.disabled);\n  }\n  get isRecurrent() {\n    return getRecurrenceProcessor().isValidRecurrenceRule(this.recurrenceRule);\n  }\n  getField(property) {\n    return ExpressionUtils.getField(this.dataAccessors, property, this.rawAppointment);\n  }\n  setField(property, value) {\n    return ExpressionUtils.setField(this.dataAccessors, property, this.rawAppointment, value);\n  }\n  calculateStartDate(pathTimeZoneConversion) {\n    if (!this.startDate || isNaN(this.startDate.getTime())) {\n      throw errors.Error(\"E1032\", this.text);\n    }\n    return this.calculateDate(this.startDate, this.startDateTimeZone, pathTimeZoneConversion);\n  }\n  calculateEndDate(pathTimeZoneConversion) {\n    return this.calculateDate(this.endDate, this.endDateTimeZone, pathTimeZoneConversion);\n  }\n  calculateDate(date, appointmentTimeZone, pathTimeZoneConversion) {\n    if (!date) {\n      return;\n    }\n    return this.timeZoneCalculator.createDate(date, {\n      appointmentTimeZone: appointmentTimeZone,\n      path: pathTimeZoneConversion\n    });\n  }\n  clone() {\n    var options = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : void 0;\n    var result = new AppointmentAdapter(deepExtendArraySafe({}, this.rawAppointment), this.dataAccessors, this.timeZoneCalculator, options);\n    if (null !== options && void 0 !== options && options.pathTimeZone) {\n      result.startDate = result.calculateStartDate(options.pathTimeZone);\n      result.endDate = result.calculateEndDate(options.pathTimeZone);\n    }\n    return result;\n  }\n  source() {\n    var serializeDate = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : false;\n    if (serializeDate) {\n      var clonedAdapter = this.clone();\n      clonedAdapter.startDate = this.startDate;\n      clonedAdapter.endDate = this.endDate;\n      return clonedAdapter.source();\n    }\n    return extend({}, this.rawAppointment);\n  }\n}\nexport default AppointmentAdapter;\nexport var createAppointmentAdapter = (rawAppointment, dataAccessors, timeZoneCalculator, options) => new AppointmentAdapter(rawAppointment, dataAccessors, timeZoneCalculator, options);","map":{"version":3,"names":["extend","errors","deepExtendArraySafe","getRecurrenceProcessor","ExpressionUtils","PROPERTY_NAMES","startDate","endDate","allDay","text","description","startDateTimeZone","endDateTimeZone","recurrenceRule","recurrenceException","disabled","AppointmentAdapter","constructor","rawAppointment","dataAccessors","timeZoneCalculator","options","duration","result","getField","Date","value","setField","isRecurrent","isValidRecurrenceRule","property","calculateStartDate","pathTimeZoneConversion","isNaN","getTime","Error","calculateDate","calculateEndDate","date","appointmentTimeZone","createDate","path","clone","arguments","length","pathTimeZone","source","serializeDate","clonedAdapter","createAppointmentAdapter"],"sources":["C:/Users/Michal Abargel/Desktop/FULLSTACK_PROJECTS/Patient-Management/client/node_modules/devextreme/esm/ui/scheduler/appointmentAdapter.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/appointmentAdapter.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport {\r\n    deepExtendArraySafe\r\n} from \"../../core/utils/object\";\r\nimport {\r\n    getRecurrenceProcessor\r\n} from \"./recurrence\";\r\nimport {\r\n    ExpressionUtils\r\n} from \"./expressionUtils\";\r\nvar PROPERTY_NAMES = {\r\n    startDate: \"startDate\",\r\n    endDate: \"endDate\",\r\n    allDay: \"allDay\",\r\n    text: \"text\",\r\n    description: \"description\",\r\n    startDateTimeZone: \"startDateTimeZone\",\r\n    endDateTimeZone: \"endDateTimeZone\",\r\n    recurrenceRule: \"recurrenceRule\",\r\n    recurrenceException: \"recurrenceException\",\r\n    disabled: \"disabled\"\r\n};\r\nclass AppointmentAdapter {\r\n    constructor(rawAppointment, dataAccessors, timeZoneCalculator, options) {\r\n        this.rawAppointment = rawAppointment;\r\n        this.dataAccessors = dataAccessors;\r\n        this.timeZoneCalculator = timeZoneCalculator;\r\n        this.options = options\r\n    }\r\n    get duration() {\r\n        return this.endDate ? this.endDate - this.startDate : 0\r\n    }\r\n    get startDate() {\r\n        var result = this.getField(PROPERTY_NAMES.startDate);\r\n        return void 0 === result ? result : new Date(result)\r\n    }\r\n    set startDate(value) {\r\n        this.setField(PROPERTY_NAMES.startDate, value)\r\n    }\r\n    get endDate() {\r\n        var result = this.getField(PROPERTY_NAMES.endDate);\r\n        return void 0 === result ? result : new Date(result)\r\n    }\r\n    set endDate(value) {\r\n        this.setField(PROPERTY_NAMES.endDate, value)\r\n    }\r\n    get allDay() {\r\n        return this.getField(PROPERTY_NAMES.allDay)\r\n    }\r\n    set allDay(value) {\r\n        this.setField(PROPERTY_NAMES.allDay, value)\r\n    }\r\n    get text() {\r\n        return this.getField(PROPERTY_NAMES.text)\r\n    }\r\n    set text(value) {\r\n        this.setField(PROPERTY_NAMES.text, value)\r\n    }\r\n    get description() {\r\n        return this.getField(PROPERTY_NAMES.description)\r\n    }\r\n    set description(value) {\r\n        this.setField(PROPERTY_NAMES.description, value)\r\n    }\r\n    get startDateTimeZone() {\r\n        return this.getField(PROPERTY_NAMES.startDateTimeZone)\r\n    }\r\n    get endDateTimeZone() {\r\n        return this.getField(PROPERTY_NAMES.endDateTimeZone)\r\n    }\r\n    get recurrenceRule() {\r\n        return this.getField(PROPERTY_NAMES.recurrenceRule)\r\n    }\r\n    set recurrenceRule(value) {\r\n        this.setField(PROPERTY_NAMES.recurrenceRule, value)\r\n    }\r\n    get recurrenceException() {\r\n        return this.getField(PROPERTY_NAMES.recurrenceException)\r\n    }\r\n    set recurrenceException(value) {\r\n        this.setField(PROPERTY_NAMES.recurrenceException, value)\r\n    }\r\n    get disabled() {\r\n        return !!this.getField(PROPERTY_NAMES.disabled)\r\n    }\r\n    get isRecurrent() {\r\n        return getRecurrenceProcessor().isValidRecurrenceRule(this.recurrenceRule)\r\n    }\r\n    getField(property) {\r\n        return ExpressionUtils.getField(this.dataAccessors, property, this.rawAppointment)\r\n    }\r\n    setField(property, value) {\r\n        return ExpressionUtils.setField(this.dataAccessors, property, this.rawAppointment, value)\r\n    }\r\n    calculateStartDate(pathTimeZoneConversion) {\r\n        if (!this.startDate || isNaN(this.startDate.getTime())) {\r\n            throw errors.Error(\"E1032\", this.text)\r\n        }\r\n        return this.calculateDate(this.startDate, this.startDateTimeZone, pathTimeZoneConversion)\r\n    }\r\n    calculateEndDate(pathTimeZoneConversion) {\r\n        return this.calculateDate(this.endDate, this.endDateTimeZone, pathTimeZoneConversion)\r\n    }\r\n    calculateDate(date, appointmentTimeZone, pathTimeZoneConversion) {\r\n        if (!date) {\r\n            return\r\n        }\r\n        return this.timeZoneCalculator.createDate(date, {\r\n            appointmentTimeZone: appointmentTimeZone,\r\n            path: pathTimeZoneConversion\r\n        })\r\n    }\r\n    clone() {\r\n        var options = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : void 0;\r\n        var result = new AppointmentAdapter(deepExtendArraySafe({}, this.rawAppointment), this.dataAccessors, this.timeZoneCalculator, options);\r\n        if (null !== options && void 0 !== options && options.pathTimeZone) {\r\n            result.startDate = result.calculateStartDate(options.pathTimeZone);\r\n            result.endDate = result.calculateEndDate(options.pathTimeZone)\r\n        }\r\n        return result\r\n    }\r\n    source() {\r\n        var serializeDate = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : false;\r\n        if (serializeDate) {\r\n            var clonedAdapter = this.clone();\r\n            clonedAdapter.startDate = this.startDate;\r\n            clonedAdapter.endDate = this.endDate;\r\n            return clonedAdapter.source()\r\n        }\r\n        return extend({}, this.rawAppointment)\r\n    }\r\n}\r\nexport default AppointmentAdapter;\r\nexport var createAppointmentAdapter = (rawAppointment, dataAccessors, timeZoneCalculator, options) => new AppointmentAdapter(rawAppointment, dataAccessors, timeZoneCalculator, options);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}