{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/workspaces/cells_selection_state.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getSelectedCells } from \"../../../renovation/ui/scheduler/workspaces/base/utils\";\nexport default class CellsSelectionState {\n  constructor(viewDataProvider) {\n    this._viewDataProvider = viewDataProvider;\n    this._focusedCell = null;\n    this._selectedCells = null;\n    this._firstSelectedCell = null;\n    this._prevFocusedCell = null;\n    this._prevSelectedCells = null;\n  }\n  get viewDataProvider() {\n    return this._viewDataProvider;\n  }\n  get focusedCell() {\n    var focusedCell = this._focusedCell;\n    if (!focusedCell) {\n      return;\n    }\n    var {\n      groupIndex: groupIndex,\n      startDate: startDate,\n      allDay: allDay\n    } = focusedCell;\n    var cellInfo = {\n      groupIndex: groupIndex,\n      startDate: startDate,\n      isAllDay: allDay,\n      index: focusedCell.index\n    };\n    var cellPosition = this.viewDataProvider.findCellPositionInMap(cellInfo);\n    return {\n      coordinates: cellPosition,\n      cellData: focusedCell\n    };\n  }\n  setFocusedCell(rowIndex, columnIndex, isAllDay) {\n    if (rowIndex >= 0) {\n      var cell = this._viewDataProvider.getCellData(rowIndex, columnIndex, isAllDay);\n      this._focusedCell = cell;\n    }\n  }\n  setSelectedCells(lastCellCoordinates) {\n    var firstCellCoordinates = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : void 0;\n    var viewDataProvider = this._viewDataProvider;\n    var {\n      rowIndex: lastRowIndex,\n      columnIndex: lastColumnIndex,\n      allDay: isLastCellAllDay\n    } = lastCellCoordinates;\n    if (lastRowIndex < 0) {\n      return;\n    }\n    var firstCell = firstCellCoordinates ? viewDataProvider.getCellData(firstCellCoordinates.rowIndex, firstCellCoordinates.columnIndex, firstCellCoordinates.allDay) : this._firstSelectedCell;\n    var lastCell = viewDataProvider.getCellData(lastRowIndex, lastColumnIndex, isLastCellAllDay);\n    this._firstSelectedCell = firstCell;\n    this._selectedCells = getSelectedCells(this._viewDataProvider, firstCell, lastCell, isLastCellAllDay);\n  }\n  setSelectedCellsByData(selectedCellsData) {\n    this._selectedCells = selectedCellsData;\n  }\n  getSelectedCells() {\n    return this._selectedCells;\n  }\n  releaseSelectedAndFocusedCells() {\n    this.releaseSelectedCells();\n    this.releaseFocusedCell();\n  }\n  releaseSelectedCells() {\n    this._prevSelectedCells = this._selectedCells;\n    this._prevFirstSelectedCell = this._firstSelectedCell;\n    this._selectedCells = null;\n    this._firstSelectedCell = null;\n  }\n  releaseFocusedCell() {\n    this._prevFocusedCell = this._focusedCell;\n    this._focusedCell = null;\n  }\n  restoreSelectedAndFocusedCells() {\n    this._selectedCells = this._selectedCells || this._prevSelectedCells;\n    this._focusedCell = this._focusedCell || this._prevFocusedCell;\n    this._firstSelectedCell = this._firstSelectedCell || this._prevFirstSelectedCell;\n    this._prevSelectedCells = null;\n    this._prevFirstSelectedCell = null;\n    this._prevFocusedCell = null;\n  }\n  clearSelectedAndFocusedCells() {\n    this._prevSelectedCells = null;\n    this._selectedCells = null;\n    this._prevFocusedCell = null;\n    this._focusedCell = null;\n  }\n}","map":{"version":3,"names":["getSelectedCells","CellsSelectionState","constructor","viewDataProvider","_viewDataProvider","_focusedCell","_selectedCells","_firstSelectedCell","_prevFocusedCell","_prevSelectedCells","focusedCell","groupIndex","startDate","allDay","cellInfo","isAllDay","index","cellPosition","findCellPositionInMap","coordinates","cellData","setFocusedCell","rowIndex","columnIndex","cell","getCellData","setSelectedCells","lastCellCoordinates","firstCellCoordinates","arguments","length","lastRowIndex","lastColumnIndex","isLastCellAllDay","firstCell","lastCell","setSelectedCellsByData","selectedCellsData","releaseSelectedAndFocusedCells","releaseSelectedCells","releaseFocusedCell","_prevFirstSelectedCell","restoreSelectedAndFocusedCells","clearSelectedAndFocusedCells"],"sources":["C:/Users/Michal Abargel/Desktop/FULLSTACK_PROJECTS/PrivateLessones/PL/client/gui/node_modules/devextreme/esm/ui/scheduler/workspaces/cells_selection_state.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/workspaces/cells_selection_state.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getSelectedCells\r\n} from \"../../../renovation/ui/scheduler/workspaces/base/utils\";\r\nexport default class CellsSelectionState {\r\n    constructor(viewDataProvider) {\r\n        this._viewDataProvider = viewDataProvider;\r\n        this._focusedCell = null;\r\n        this._selectedCells = null;\r\n        this._firstSelectedCell = null;\r\n        this._prevFocusedCell = null;\r\n        this._prevSelectedCells = null\r\n    }\r\n    get viewDataProvider() {\r\n        return this._viewDataProvider\r\n    }\r\n    get focusedCell() {\r\n        var focusedCell = this._focusedCell;\r\n        if (!focusedCell) {\r\n            return\r\n        }\r\n        var {\r\n            groupIndex: groupIndex,\r\n            startDate: startDate,\r\n            allDay: allDay\r\n        } = focusedCell;\r\n        var cellInfo = {\r\n            groupIndex: groupIndex,\r\n            startDate: startDate,\r\n            isAllDay: allDay,\r\n            index: focusedCell.index\r\n        };\r\n        var cellPosition = this.viewDataProvider.findCellPositionInMap(cellInfo);\r\n        return {\r\n            coordinates: cellPosition,\r\n            cellData: focusedCell\r\n        }\r\n    }\r\n    setFocusedCell(rowIndex, columnIndex, isAllDay) {\r\n        if (rowIndex >= 0) {\r\n            var cell = this._viewDataProvider.getCellData(rowIndex, columnIndex, isAllDay);\r\n            this._focusedCell = cell\r\n        }\r\n    }\r\n    setSelectedCells(lastCellCoordinates) {\r\n        var firstCellCoordinates = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : void 0;\r\n        var viewDataProvider = this._viewDataProvider;\r\n        var {\r\n            rowIndex: lastRowIndex,\r\n            columnIndex: lastColumnIndex,\r\n            allDay: isLastCellAllDay\r\n        } = lastCellCoordinates;\r\n        if (lastRowIndex < 0) {\r\n            return\r\n        }\r\n        var firstCell = firstCellCoordinates ? viewDataProvider.getCellData(firstCellCoordinates.rowIndex, firstCellCoordinates.columnIndex, firstCellCoordinates.allDay) : this._firstSelectedCell;\r\n        var lastCell = viewDataProvider.getCellData(lastRowIndex, lastColumnIndex, isLastCellAllDay);\r\n        this._firstSelectedCell = firstCell;\r\n        this._selectedCells = getSelectedCells(this._viewDataProvider, firstCell, lastCell, isLastCellAllDay)\r\n    }\r\n    setSelectedCellsByData(selectedCellsData) {\r\n        this._selectedCells = selectedCellsData\r\n    }\r\n    getSelectedCells() {\r\n        return this._selectedCells\r\n    }\r\n    releaseSelectedAndFocusedCells() {\r\n        this.releaseSelectedCells();\r\n        this.releaseFocusedCell()\r\n    }\r\n    releaseSelectedCells() {\r\n        this._prevSelectedCells = this._selectedCells;\r\n        this._prevFirstSelectedCell = this._firstSelectedCell;\r\n        this._selectedCells = null;\r\n        this._firstSelectedCell = null\r\n    }\r\n    releaseFocusedCell() {\r\n        this._prevFocusedCell = this._focusedCell;\r\n        this._focusedCell = null\r\n    }\r\n    restoreSelectedAndFocusedCells() {\r\n        this._selectedCells = this._selectedCells || this._prevSelectedCells;\r\n        this._focusedCell = this._focusedCell || this._prevFocusedCell;\r\n        this._firstSelectedCell = this._firstSelectedCell || this._prevFirstSelectedCell;\r\n        this._prevSelectedCells = null;\r\n        this._prevFirstSelectedCell = null;\r\n        this._prevFocusedCell = null\r\n    }\r\n    clearSelectedAndFocusedCells() {\r\n        this._prevSelectedCells = null;\r\n        this._selectedCells = null;\r\n        this._prevFocusedCell = null;\r\n        this._focusedCell = null\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,gBAAgB,QACb,wDAAwD;AAC/D,eAAe,MAAMC,mBAAmB,CAAC;EACrCC,WAAWA,CAACC,gBAAgB,EAAE;IAC1B,IAAI,CAACC,iBAAiB,GAAGD,gBAAgB;IACzC,IAAI,CAACE,YAAY,GAAG,IAAI;IACxB,IAAI,CAACC,cAAc,GAAG,IAAI;IAC1B,IAAI,CAACC,kBAAkB,GAAG,IAAI;IAC9B,IAAI,CAACC,gBAAgB,GAAG,IAAI;IAC5B,IAAI,CAACC,kBAAkB,GAAG,IAAI;EAClC;EACA,IAAIN,gBAAgBA,CAAA,EAAG;IACnB,OAAO,IAAI,CAACC,iBAAiB;EACjC;EACA,IAAIM,WAAWA,CAAA,EAAG;IACd,IAAIA,WAAW,GAAG,IAAI,CAACL,YAAY;IACnC,IAAI,CAACK,WAAW,EAAE;MACd;IACJ;IACA,IAAI;MACAC,UAAU,EAAEA,UAAU;MACtBC,SAAS,EAAEA,SAAS;MACpBC,MAAM,EAAEA;IACZ,CAAC,GAAGH,WAAW;IACf,IAAII,QAAQ,GAAG;MACXH,UAAU,EAAEA,UAAU;MACtBC,SAAS,EAAEA,SAAS;MACpBG,QAAQ,EAAEF,MAAM;MAChBG,KAAK,EAAEN,WAAW,CAACM;IACvB,CAAC;IACD,IAAIC,YAAY,GAAG,IAAI,CAACd,gBAAgB,CAACe,qBAAqB,CAACJ,QAAQ,CAAC;IACxE,OAAO;MACHK,WAAW,EAAEF,YAAY;MACzBG,QAAQ,EAAEV;IACd,CAAC;EACL;EACAW,cAAcA,CAACC,QAAQ,EAAEC,WAAW,EAAER,QAAQ,EAAE;IAC5C,IAAIO,QAAQ,IAAI,CAAC,EAAE;MACf,IAAIE,IAAI,GAAG,IAAI,CAACpB,iBAAiB,CAACqB,WAAW,CAACH,QAAQ,EAAEC,WAAW,EAAER,QAAQ,CAAC;MAC9E,IAAI,CAACV,YAAY,GAAGmB,IAAI;IAC5B;EACJ;EACAE,gBAAgBA,CAACC,mBAAmB,EAAE;IAClC,IAAIC,oBAAoB,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,KAAKD,SAAS,CAAC,CAAC,CAAC,GAAGA,SAAS,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;IAClG,IAAI1B,gBAAgB,GAAG,IAAI,CAACC,iBAAiB;IAC7C,IAAI;MACAkB,QAAQ,EAAES,YAAY;MACtBR,WAAW,EAAES,eAAe;MAC5BnB,MAAM,EAAEoB;IACZ,CAAC,GAAGN,mBAAmB;IACvB,IAAII,YAAY,GAAG,CAAC,EAAE;MAClB;IACJ;IACA,IAAIG,SAAS,GAAGN,oBAAoB,GAAGzB,gBAAgB,CAACsB,WAAW,CAACG,oBAAoB,CAACN,QAAQ,EAAEM,oBAAoB,CAACL,WAAW,EAAEK,oBAAoB,CAACf,MAAM,CAAC,GAAG,IAAI,CAACN,kBAAkB;IAC3L,IAAI4B,QAAQ,GAAGhC,gBAAgB,CAACsB,WAAW,CAACM,YAAY,EAAEC,eAAe,EAAEC,gBAAgB,CAAC;IAC5F,IAAI,CAAC1B,kBAAkB,GAAG2B,SAAS;IACnC,IAAI,CAAC5B,cAAc,GAAGN,gBAAgB,CAAC,IAAI,CAACI,iBAAiB,EAAE8B,SAAS,EAAEC,QAAQ,EAAEF,gBAAgB,CAAC;EACzG;EACAG,sBAAsBA,CAACC,iBAAiB,EAAE;IACtC,IAAI,CAAC/B,cAAc,GAAG+B,iBAAiB;EAC3C;EACArC,gBAAgBA,CAAA,EAAG;IACf,OAAO,IAAI,CAACM,cAAc;EAC9B;EACAgC,8BAA8BA,CAAA,EAAG;IAC7B,IAAI,CAACC,oBAAoB,CAAC,CAAC;IAC3B,IAAI,CAACC,kBAAkB,CAAC,CAAC;EAC7B;EACAD,oBAAoBA,CAAA,EAAG;IACnB,IAAI,CAAC9B,kBAAkB,GAAG,IAAI,CAACH,cAAc;IAC7C,IAAI,CAACmC,sBAAsB,GAAG,IAAI,CAAClC,kBAAkB;IACrD,IAAI,CAACD,cAAc,GAAG,IAAI;IAC1B,IAAI,CAACC,kBAAkB,GAAG,IAAI;EAClC;EACAiC,kBAAkBA,CAAA,EAAG;IACjB,IAAI,CAAChC,gBAAgB,GAAG,IAAI,CAACH,YAAY;IACzC,IAAI,CAACA,YAAY,GAAG,IAAI;EAC5B;EACAqC,8BAA8BA,CAAA,EAAG;IAC7B,IAAI,CAACpC,cAAc,GAAG,IAAI,CAACA,cAAc,IAAI,IAAI,CAACG,kBAAkB;IACpE,IAAI,CAACJ,YAAY,GAAG,IAAI,CAACA,YAAY,IAAI,IAAI,CAACG,gBAAgB;IAC9D,IAAI,CAACD,kBAAkB,GAAG,IAAI,CAACA,kBAAkB,IAAI,IAAI,CAACkC,sBAAsB;IAChF,IAAI,CAAChC,kBAAkB,GAAG,IAAI;IAC9B,IAAI,CAACgC,sBAAsB,GAAG,IAAI;IAClC,IAAI,CAACjC,gBAAgB,GAAG,IAAI;EAChC;EACAmC,4BAA4BA,CAAA,EAAG;IAC3B,IAAI,CAAClC,kBAAkB,GAAG,IAAI;IAC9B,IAAI,CAACH,cAAc,GAAG,IAAI;IAC1B,IAAI,CAACE,gBAAgB,GAAG,IAAI;IAC5B,IAAI,CAACH,YAAY,GAAG,IAAI;EAC5B;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}