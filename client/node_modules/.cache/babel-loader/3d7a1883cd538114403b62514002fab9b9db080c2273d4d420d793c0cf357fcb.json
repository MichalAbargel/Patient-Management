{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/drop_down_button.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport $ from \"../core/renderer\";\nimport Widget from \"./widget/ui.widget\";\nimport { FunctionTemplate } from \"../core/templates/function_template\";\nimport registerComponent from \"../core/component_registrator\";\nimport ButtonGroup from \"./button_group\";\nimport Popup from \"./popup/ui.popup\";\nimport List from \"./list_light\";\nimport { compileGetter } from \"../core/utils/data\";\nimport { getPublicElement } from \"../core/element\";\nimport { getImageContainer } from \"../core/utils/icon\";\nimport DataHelperMixin from \"../data_helper\";\nimport { DataSource } from \"../data/data_source/data_source\";\nimport ArrayStore from \"../data/array_store\";\nimport { Deferred } from \"../core/utils/deferred\";\nimport { extend } from \"../core/utils/extend\";\nimport { isPlainObject, isDefined } from \"../core/utils/type\";\nimport { ensureDefined, noop } from \"../core/utils/common\";\nimport Guid from \"../core/guid\";\nimport { getElementWidth, getSizeValue } from \"./drop_down_editor/utils\";\nimport messageLocalization from \"../localization/message\";\nvar DROP_DOWN_BUTTON_CLASS = \"dx-dropdownbutton\";\nvar DROP_DOWN_BUTTON_CONTENT = \"dx-dropdownbutton-content\";\nvar DROP_DOWN_BUTTON_ACTION_CLASS = \"dx-dropdownbutton-action\";\nvar DROP_DOWN_BUTTON_TOGGLE_CLASS = \"dx-dropdownbutton-toggle\";\nvar DROP_DOWN_BUTTON_HAS_ARROW_CLASS = \"dx-dropdownbutton-has-arrow\";\nvar DROP_DOWN_BUTTON_POPUP_WRAPPER_CLASS = \"dx-dropdownbutton-popup-wrapper\";\nvar DROP_DOWN_EDITOR_OVERLAY_CLASS = \"dx-dropdowneditor-overlay\";\nvar DX_BUTTON_CLASS = \"dx-button\";\nvar DX_BUTTON_TEXT_CLASS = \"dx-button-text\";\nvar DX_ICON_RIGHT_CLASS = \"dx-icon-right\";\nvar DropDownButton = Widget.inherit({\n  _getDefaultOptions() {\n    return extend(this.callBase(), {\n      itemTemplate: \"item\",\n      keyExpr: \"this\",\n      displayExpr: void 0,\n      selectedItem: null,\n      selectedItemKey: null,\n      stylingMode: \"outlined\",\n      deferRendering: true,\n      noDataText: messageLocalization.format(\"dxCollectionWidget-noDataText\"),\n      useSelectMode: false,\n      splitButton: false,\n      showArrowIcon: true,\n      text: \"\",\n      icon: void 0,\n      onButtonClick: null,\n      onSelectionChanged: null,\n      onItemClick: null,\n      opened: false,\n      items: null,\n      dataSource: null,\n      focusStateEnabled: true,\n      hoverStateEnabled: true,\n      dropDownOptions: {},\n      dropDownContentTemplate: \"content\",\n      wrapItemText: false,\n      useItemTextAsTitle: true,\n      grouped: false,\n      groupTemplate: \"group\",\n      buttonGroupOptions: {}\n    });\n  },\n  _setOptionsByReference() {\n    this.callBase();\n    extend(this._optionsByReference, {\n      selectedItem: true\n    });\n  },\n  _init() {\n    this.callBase();\n    this._createItemClickAction();\n    this._createActionClickAction();\n    this._createSelectionChangedAction();\n    this._initDataSource();\n    this._compileKeyGetter();\n    this._compileDisplayGetter();\n    this._itemsToDataSource(this.option(\"items\"));\n    this._options.cache(\"buttonGroupOptions\", this.option(\"buttonGroupOptions\"));\n    this._options.cache(\"dropDownOptions\", this.option(\"dropDownOptions\"));\n  },\n  _initTemplates() {\n    this._templateManager.addDefaultTemplates({\n      content: new FunctionTemplate(options => {\n        var $popupContent = $(options.container);\n        var $listContainer = $(\"<div>\").appendTo($popupContent);\n        this._list = this._createComponent($listContainer, List, this._listOptions());\n        this._list.registerKeyHandler(\"escape\", this._escHandler.bind(this));\n        this._list.registerKeyHandler(\"tab\", this._escHandler.bind(this));\n        this._list.registerKeyHandler(\"leftArrow\", this._escHandler.bind(this));\n        this._list.registerKeyHandler(\"rightArrow\", this._escHandler.bind(this));\n      })\n    });\n    this.callBase();\n  },\n  _itemsToDataSource: function (value) {\n    if (!this._dataSource) {\n      this._dataSource = new DataSource({\n        store: new ArrayStore({\n          key: this._getKey(),\n          data: value\n        }),\n        pageSize: 0\n      });\n    }\n  },\n  _getKey: function () {\n    var _this$_dataSource;\n    var keyExpr = this.option(\"keyExpr\");\n    var storeKey = null === (_this$_dataSource = this._dataSource) || void 0 === _this$_dataSource ? void 0 : _this$_dataSource.key();\n    return isDefined(storeKey) && (!isDefined(keyExpr) || \"this\" === keyExpr) ? storeKey : keyExpr;\n  },\n  _compileKeyGetter() {\n    this._keyGetter = compileGetter(this._getKey());\n  },\n  _compileDisplayGetter() {\n    this._displayGetter = compileGetter(this.option(\"displayExpr\"));\n  },\n  _initMarkup() {\n    this.callBase();\n    this.$element().addClass(DROP_DOWN_BUTTON_CLASS);\n    this._renderButtonGroup();\n    this._updateArrowClass();\n    if (isDefined(this.option(\"selectedItemKey\"))) {\n      this._loadSelectedItem().done(this._updateActionButton.bind(this));\n    }\n  },\n  _renderFocusTarget: noop,\n  _render() {\n    if (!this.option(\"deferRendering\") || this.option(\"opened\")) {\n      this._renderPopup();\n    }\n    this.callBase();\n  },\n  _renderContentImpl() {\n    if (this._popup) {\n      this._renderPopupContent();\n    }\n    return this.callBase();\n  },\n  _loadSelectedItem() {\n    var _this$_loadSingleDefe;\n    null === (_this$_loadSingleDefe = this._loadSingleDeferred) || void 0 === _this$_loadSingleDefe ? void 0 : _this$_loadSingleDefe.reject();\n    var d = new Deferred();\n    if (this._list && void 0 !== this._lastSelectedItemData) {\n      var cachedResult = this.option(\"useSelectMode\") ? this._list.option(\"selectedItem\") : this._lastSelectedItemData;\n      return d.resolve(cachedResult);\n    }\n    this._lastSelectedItemData = void 0;\n    var selectedItemKey = this.option(\"selectedItemKey\");\n    this._loadSingle(this._getKey(), selectedItemKey).done(d.resolve).fail(() => {\n      d.resolve(null);\n    });\n    this._loadSingleDeferred = d;\n    return d.promise();\n  },\n  _createActionClickAction() {\n    this._actionClickAction = this._createActionByOption(\"onButtonClick\");\n  },\n  _createSelectionChangedAction() {\n    this._selectionChangedAction = this._createActionByOption(\"onSelectionChanged\");\n  },\n  _createItemClickAction() {\n    this._itemClickAction = this._createActionByOption(\"onItemClick\");\n  },\n  _fireSelectionChangedAction(_ref) {\n    var {\n      previousValue: previousValue,\n      value: value\n    } = _ref;\n    this._selectionChangedAction({\n      item: value,\n      previousItem: previousValue\n    });\n  },\n  _fireItemClickAction(_ref2) {\n    var {\n      event: event,\n      itemElement: itemElement,\n      itemData: itemData\n    } = _ref2;\n    return this._itemClickAction({\n      event: event,\n      itemElement: itemElement,\n      itemData: this._actionItem || itemData\n    });\n  },\n  _actionButtonConfig() {\n    return {\n      text: this.option(\"text\"),\n      icon: this.option(\"icon\"),\n      elementAttr: {\n        class: DROP_DOWN_BUTTON_ACTION_CLASS\n      }\n    };\n  },\n  _getButtonGroupItems() {\n    var items = [];\n    items.push(this._actionButtonConfig());\n    if (this.option(\"splitButton\")) {\n      items.push({\n        icon: \"spindown\",\n        elementAttr: {\n          class: DROP_DOWN_BUTTON_TOGGLE_CLASS\n        }\n      });\n    }\n    return items;\n  },\n  _buttonGroupItemClick(_ref3) {\n    var {\n      event: event,\n      itemData: itemData\n    } = _ref3;\n    var isActionButton = itemData.elementAttr.class === DROP_DOWN_BUTTON_ACTION_CLASS;\n    var isToggleButton = itemData.elementAttr.class === DROP_DOWN_BUTTON_TOGGLE_CLASS;\n    if (isToggleButton) {\n      this.toggle();\n    } else if (isActionButton) {\n      this._actionClickAction({\n        event: event,\n        selectedItem: this.option(\"selectedItem\")\n      });\n      if (!this.option(\"splitButton\")) {\n        this.toggle();\n      }\n    }\n  },\n  _buttonGroupOptions() {\n    var {\n      splitButton: splitButton,\n      showArrowIcon: showArrowIcon,\n      focusStateEnabled: focusStateEnabled,\n      hoverStateEnabled: hoverStateEnabled,\n      stylingMode: stylingMode,\n      accessKey: accessKey,\n      tabIndex: tabIndex\n    } = this.option();\n    var buttonTemplate = splitButton || !showArrowIcon ? \"content\" : (_ref4, buttonContent) => {\n      var {\n        text: text,\n        icon: icon\n      } = _ref4;\n      var $firstIcon = getImageContainer(icon);\n      var $textContainer = text ? $(\"<span>\").text(text).addClass(DX_BUTTON_TEXT_CLASS) : void 0;\n      var $secondIcon = getImageContainer(\"spindown\").addClass(DX_ICON_RIGHT_CLASS);\n      $(buttonContent).append($firstIcon, $textContainer, $secondIcon);\n    };\n    return extend({\n      items: this._getButtonGroupItems(),\n      onItemClick: this._buttonGroupItemClick.bind(this),\n      width: \"100%\",\n      height: \"100%\",\n      selectionMode: \"none\",\n      onKeyboardHandled: e => this._keyboardHandler(e),\n      buttonTemplate: buttonTemplate,\n      focusStateEnabled: focusStateEnabled,\n      hoverStateEnabled: hoverStateEnabled,\n      stylingMode: stylingMode,\n      accessKey: accessKey,\n      tabIndex: tabIndex\n    }, this._options.cache(\"buttonGroupOptions\"));\n  },\n  _renderPopupContent() {\n    var $content = this._popup.$content();\n    var template = this._getTemplateByOption(\"dropDownContentTemplate\");\n    $content.empty();\n    this._popupContentId = \"dx-\" + new Guid();\n    this.setAria(\"id\", this._popupContentId, $content);\n    return template.render({\n      container: getPublicElement($content),\n      model: this.option(\"items\") || this._dataSource\n    });\n  },\n  _popupOptions() {\n    var horizontalAlignment = this.option(\"rtlEnabled\") ? \"right\" : \"left\";\n    return extend({\n      dragEnabled: false,\n      focusStateEnabled: false,\n      deferRendering: this.option(\"deferRendering\"),\n      hideOnOutsideClick: e => {\n        var $element = this.$element();\n        var $buttonClicked = $(e.target).closest(\".\".concat(DROP_DOWN_BUTTON_CLASS));\n        return !$buttonClicked.is($element);\n      },\n      showTitle: false,\n      animation: {\n        show: {\n          type: \"fade\",\n          duration: 0,\n          from: 0,\n          to: 1\n        },\n        hide: {\n          type: \"fade\",\n          duration: 400,\n          from: 1,\n          to: 0\n        }\n      },\n      _ignoreFunctionValueDeprecation: true,\n      width: () => getElementWidth(this.$element()),\n      height: \"auto\",\n      shading: false,\n      position: {\n        of: this.$element(),\n        collision: \"flipfit\",\n        my: horizontalAlignment + \" top\",\n        at: horizontalAlignment + \" bottom\"\n      },\n      _wrapperClassExternal: DROP_DOWN_EDITOR_OVERLAY_CLASS\n    }, this._options.cache(\"dropDownOptions\"), {\n      visible: this.option(\"opened\")\n    });\n  },\n  _listOptions() {\n    var selectedItemKey = this.option(\"selectedItemKey\");\n    var useSelectMode = this.option(\"useSelectMode\");\n    return {\n      selectionMode: useSelectMode ? \"single\" : \"none\",\n      wrapItemText: this.option(\"wrapItemText\"),\n      focusStateEnabled: this.option(\"focusStateEnabled\"),\n      hoverStateEnabled: this.option(\"hoverStateEnabled\"),\n      useItemTextAsTitle: this.option(\"useItemTextAsTitle\"),\n      onContentReady: () => this._fireContentReadyAction(),\n      selectedItemKeys: isDefined(selectedItemKey) && useSelectMode ? [selectedItemKey] : [],\n      grouped: this.option(\"grouped\"),\n      groupTemplate: this.option(\"groupTemplate\"),\n      keyExpr: this._getKey(),\n      noDataText: this.option(\"noDataText\"),\n      displayExpr: this.option(\"displayExpr\"),\n      itemTemplate: this.option(\"itemTemplate\"),\n      items: this.option(\"items\"),\n      dataSource: this._dataSource,\n      onItemClick: e => {\n        if (!this.option(\"useSelectMode\")) {\n          this._lastSelectedItemData = e.itemData;\n        }\n        this.option(\"selectedItemKey\", this._keyGetter(e.itemData));\n        var actionResult = this._fireItemClickAction(e);\n        if (false !== actionResult) {\n          this.toggle(false);\n          this._buttonGroup.focus();\n        }\n      }\n    };\n  },\n  _upDownKeyHandler() {\n    if (this._popup && this._popup.option(\"visible\") && this._list) {\n      this._list.focus();\n    } else {\n      this.open();\n    }\n    return true;\n  },\n  _escHandler() {\n    this.close();\n    this._buttonGroup.focus();\n    return true;\n  },\n  _tabHandler() {\n    this.close();\n    return true;\n  },\n  _renderPopup() {\n    var $popup = $(\"<div>\");\n    this.$element().append($popup);\n    this._popup = this._createComponent($popup, Popup, this._popupOptions());\n    this._popup.$content().addClass(DROP_DOWN_BUTTON_CONTENT);\n    this._popup.$wrapper().addClass(DROP_DOWN_BUTTON_POPUP_WRAPPER_CLASS);\n    this._popup.on(\"hiding\", this._popupHidingHandler.bind(this));\n    this._popup.on(\"showing\", this._popupShowingHandler.bind(this));\n    this._bindInnerWidgetOptions(this._popup, \"dropDownOptions\");\n  },\n  _popupHidingHandler() {\n    this.option(\"opened\", false);\n    this._updateAriaAttributes(false);\n  },\n  _popupOptionChanged: function (args) {\n    var options = Widget.getOptionsFromContainer(args);\n    this._setPopupOption(options);\n    var optionsKeys = Object.keys(options);\n    if (-1 !== optionsKeys.indexOf(\"width\") || -1 !== optionsKeys.indexOf(\"height\")) {\n      this._dimensionChanged();\n    }\n  },\n  _dimensionChanged: function () {\n    var popupWidth = getSizeValue(this.option(\"dropDownOptions.width\"));\n    if (void 0 === popupWidth) {\n      this._setPopupOption(\"width\", () => getElementWidth(this.$element()));\n    }\n  },\n  _setPopupOption: function (optionName, value) {\n    this._setWidgetOption(\"_popup\", arguments);\n  },\n  _popupShowingHandler() {\n    this.option(\"opened\", true);\n    this._updateAriaAttributes(true);\n  },\n  _setElementAria(value) {\n    var elementAria = {\n      owns: value ? this._popupContentId : void 0\n    };\n    this.setAria(elementAria, this.$element());\n  },\n  _setButtonsAria(value) {\n    var commonButtonAria = {\n      expanded: value,\n      haspopup: \"listbox\"\n    };\n    var firstButtonAria = {};\n    if (!this.option(\"text\")) {\n      firstButtonAria.label = \"dropdownbutton\";\n    }\n    this._getButtons().each((index, $button) => {\n      if (0 === index) {\n        this.setAria(_extends({}, firstButtonAria, commonButtonAria), $($button));\n      } else {\n        this.setAria(commonButtonAria, $($button));\n      }\n    });\n  },\n  _updateAriaAttributes(value) {\n    this._setElementAria(value);\n    this._setButtonsAria(value);\n  },\n  _getButtons() {\n    return this._buttonGroup.$element().find(\".\".concat(DX_BUTTON_CLASS));\n  },\n  _renderButtonGroup() {\n    var $buttonGroup = this._buttonGroup && this._buttonGroup.$element() || $(\"<div>\");\n    if (!this._buttonGroup) {\n      this.$element().append($buttonGroup);\n    }\n    this._buttonGroup = this._createComponent($buttonGroup, ButtonGroup, this._buttonGroupOptions());\n    this._buttonGroup.registerKeyHandler(\"downArrow\", this._upDownKeyHandler.bind(this));\n    this._buttonGroup.registerKeyHandler(\"tab\", this._tabHandler.bind(this));\n    this._buttonGroup.registerKeyHandler(\"upArrow\", this._upDownKeyHandler.bind(this));\n    this._buttonGroup.registerKeyHandler(\"escape\", this._escHandler.bind(this));\n    this._bindInnerWidgetOptions(this._buttonGroup, \"buttonGroupOptions\");\n    this._updateAriaAttributes(this.option(\"opened\"));\n  },\n  _updateArrowClass() {\n    var hasArrow = this.option(\"splitButton\") || this.option(\"showArrowIcon\");\n    this.$element().toggleClass(DROP_DOWN_BUTTON_HAS_ARROW_CLASS, hasArrow);\n  },\n  toggle(visible) {\n    if (!this._popup) {\n      this._renderPopup();\n      this._renderContent();\n    }\n    return this._popup.toggle(visible);\n  },\n  open() {\n    return this.toggle(true);\n  },\n  close() {\n    return this.toggle(false);\n  },\n  _setListOption(name, value) {\n    this._list && this._list.option(name, value);\n  },\n  _getDisplayValue(item) {\n    var isPrimitiveItem = !isPlainObject(item);\n    var displayValue = isPrimitiveItem ? item : this._displayGetter(item);\n    return !isPlainObject(displayValue) ? String(ensureDefined(displayValue, \"\")) : \"\";\n  },\n  _updateActionButton(selectedItem) {\n    if (this.option(\"useSelectMode\")) {\n      this.option({\n        text: this._getDisplayValue(selectedItem),\n        icon: isPlainObject(selectedItem) ? selectedItem.icon : void 0\n      });\n    }\n    this._setOptionWithoutOptionChange(\"selectedItem\", selectedItem);\n    this._setOptionWithoutOptionChange(\"selectedItemKey\", this._keyGetter(selectedItem));\n  },\n  _clean() {\n    this._list && this._list.$element().remove();\n    this._popup && this._popup.$element().remove();\n  },\n  _selectedItemKeyChanged(value) {\n    this._setListOption(\"selectedItemKeys\", this.option(\"useSelectMode\") && isDefined(value) ? [value] : []);\n    var previousItem = this.option(\"selectedItem\");\n    this._loadSelectedItem().done(selectedItem => {\n      this._updateActionButton(selectedItem);\n      if (this._displayGetter(previousItem) !== this._displayGetter(selectedItem)) {\n        this._fireSelectionChangedAction({\n          previousValue: previousItem,\n          value: selectedItem\n        });\n      }\n    });\n  },\n  _updateButtonGroup(name, value) {\n    this._buttonGroup.option(name, value);\n    this._updateAriaAttributes(this.option(\"opened\"));\n  },\n  _actionButtonOptionChanged(_ref5) {\n    var {\n      name: name,\n      value: value\n    } = _ref5;\n    var newConfig = {};\n    newConfig[name] = value;\n    this._updateButtonGroup(\"items[0]\", extend({}, this._actionButtonConfig(), newConfig));\n    this._popup && this._popup.repaint();\n  },\n  _selectModeChanged(value) {\n    if (value) {\n      this._setListOption(\"selectionMode\", \"single\");\n      var selectedItemKey = this.option(\"selectedItemKey\");\n      this._setListOption(\"selectedItemKeys\", isDefined(selectedItemKey) ? [selectedItemKey] : []);\n      this._selectedItemKeyChanged(this.option(\"selectedItemKey\"));\n    } else {\n      this._setListOption(\"selectionMode\", \"none\");\n      this.option({\n        selectedItemKey: void 0,\n        selectedItem: void 0\n      });\n      this._actionButtonOptionChanged({\n        text: this.option(\"text\")\n      });\n    }\n  },\n  _updateItemCollection(optionName) {\n    var selectedItemKey = this.option(\"selectedItemKey\");\n    this._setListOption(\"selectedItem\", null);\n    this._setWidgetOption(\"_list\", [optionName]);\n    if (isDefined(selectedItemKey)) {\n      this._loadSelectedItem().done(selectedItem => {\n        this._setListOption(\"selectedItemKeys\", [selectedItemKey]);\n        this._setListOption(\"selectedItem\", selectedItem);\n      }).fail(error => {\n        this._setListOption(\"selectedItemKeys\", []);\n      }).always(this._updateActionButton.bind(this));\n    }\n  },\n  _updateDataSource: function () {\n    var items = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._dataSource.items();\n    this._dataSource = void 0;\n    this._itemsToDataSource(items);\n    this._updateKeyExpr();\n  },\n  _updateKeyExpr: function () {\n    this._compileKeyGetter();\n    this._setListOption(\"keyExpr\", this._getKey());\n  },\n  focus: function () {\n    this._buttonGroup.focus();\n  },\n  _optionChanged(args) {\n    var _this$_popup;\n    var {\n      name: name,\n      value: value\n    } = args;\n    switch (name) {\n      case \"useSelectMode\":\n        this._selectModeChanged(value);\n        break;\n      case \"splitButton\":\n        this._updateArrowClass();\n        this._renderButtonGroup();\n        break;\n      case \"displayExpr\":\n        this._compileDisplayGetter();\n        this._setListOption(name, value);\n        this._updateActionButton(this.option(\"selectedItem\"));\n        break;\n      case \"keyExpr\":\n        this._updateDataSource();\n        break;\n      case \"buttonGroupOptions\":\n        this._innerWidgetOptionChanged(this._buttonGroup, args);\n        break;\n      case \"dropDownOptions\":\n        if (\"dropDownOptions.visible\" === args.fullName) {\n          break;\n        }\n        if (void 0 !== args.value.visible) {\n          delete args.value.visible;\n        }\n        this._popupOptionChanged(args);\n        this._innerWidgetOptionChanged(this._popup, args);\n        break;\n      case \"opened\":\n        this.toggle(value);\n        break;\n      case \"focusStateEnabled\":\n      case \"hoverStateEnabled\":\n        this._setListOption(name, value);\n        this._updateButtonGroup(name, value);\n        this.callBase(args);\n        break;\n      case \"items\":\n        this._updateDataSource(this.option(\"items\"));\n        this._updateItemCollection(name);\n        break;\n      case \"dataSource\":\n        if (Array.isArray(value)) {\n          this._updateDataSource(this.option(\"dataSource\"));\n        } else {\n          this._initDataSource();\n          this._updateKeyExpr();\n        }\n        this._updateItemCollection(name);\n        break;\n      case \"icon\":\n      case \"text\":\n        this._actionButtonOptionChanged(args);\n        break;\n      case \"showArrowIcon\":\n        this._updateArrowClass();\n        this._renderButtonGroup();\n        this._popup && this._popup.repaint();\n        break;\n      case \"width\":\n      case \"height\":\n        this.callBase(args);\n        null === (_this$_popup = this._popup) || void 0 === _this$_popup ? void 0 : _this$_popup.repaint();\n        break;\n      case \"stylingMode\":\n        this._updateButtonGroup(name, value);\n        break;\n      case \"itemTemplate\":\n      case \"grouped\":\n      case \"noDataText\":\n      case \"groupTemplate\":\n      case \"wrapItemText\":\n      case \"useItemTextAsTitle\":\n        this._setListOption(name, value);\n        break;\n      case \"dropDownContentTemplate\":\n        this._renderContent();\n        break;\n      case \"selectedItemKey\":\n        this._selectedItemKeyChanged(value);\n        break;\n      case \"selectedItem\":\n        break;\n      case \"onItemClick\":\n        this._createItemClickAction();\n        break;\n      case \"onButtonClick\":\n        this._createActionClickAction();\n        break;\n      case \"onSelectionChanged\":\n        this._createSelectionChangedAction();\n        break;\n      case \"deferRendering\":\n        this.toggle(this.option(\"opened\"));\n        break;\n      case \"tabIndex\":\n        this._updateButtonGroup(name, value);\n        break;\n      default:\n        this.callBase(args);\n    }\n  }\n}).include(DataHelperMixin);\nregisterComponent(\"dxDropDownButton\", DropDownButton);\nexport default DropDownButton;","map":{"version":3,"names":["_extends","$","Widget","FunctionTemplate","registerComponent","ButtonGroup","Popup","List","compileGetter","getPublicElement","getImageContainer","DataHelperMixin","DataSource","ArrayStore","Deferred","extend","isPlainObject","isDefined","ensureDefined","noop","Guid","getElementWidth","getSizeValue","messageLocalization","DROP_DOWN_BUTTON_CLASS","DROP_DOWN_BUTTON_CONTENT","DROP_DOWN_BUTTON_ACTION_CLASS","DROP_DOWN_BUTTON_TOGGLE_CLASS","DROP_DOWN_BUTTON_HAS_ARROW_CLASS","DROP_DOWN_BUTTON_POPUP_WRAPPER_CLASS","DROP_DOWN_EDITOR_OVERLAY_CLASS","DX_BUTTON_CLASS","DX_BUTTON_TEXT_CLASS","DX_ICON_RIGHT_CLASS","DropDownButton","inherit","_getDefaultOptions","callBase","itemTemplate","keyExpr","displayExpr","selectedItem","selectedItemKey","stylingMode","deferRendering","noDataText","format","useSelectMode","splitButton","showArrowIcon","text","icon","onButtonClick","onSelectionChanged","onItemClick","opened","items","dataSource","focusStateEnabled","hoverStateEnabled","dropDownOptions","dropDownContentTemplate","wrapItemText","useItemTextAsTitle","grouped","groupTemplate","buttonGroupOptions","_setOptionsByReference","_optionsByReference","_init","_createItemClickAction","_createActionClickAction","_createSelectionChangedAction","_initDataSource","_compileKeyGetter","_compileDisplayGetter","_itemsToDataSource","option","_options","cache","_initTemplates","_templateManager","addDefaultTemplates","content","options","$popupContent","container","$listContainer","appendTo","_list","_createComponent","_listOptions","registerKeyHandler","_escHandler","bind","value","_dataSource","store","key","_getKey","data","pageSize","_this$_dataSource","storeKey","_keyGetter","_displayGetter","_initMarkup","$element","addClass","_renderButtonGroup","_updateArrowClass","_loadSelectedItem","done","_updateActionButton","_renderFocusTarget","_render","_renderPopup","_renderContentImpl","_popup","_renderPopupContent","_this$_loadSingleDefe","_loadSingleDeferred","reject","d","_lastSelectedItemData","cachedResult","resolve","_loadSingle","fail","promise","_actionClickAction","_createActionByOption","_selectionChangedAction","_itemClickAction","_fireSelectionChangedAction","_ref","previousValue","item","previousItem","_fireItemClickAction","_ref2","event","itemElement","itemData","_actionItem","_actionButtonConfig","elementAttr","class","_getButtonGroupItems","push","_buttonGroupItemClick","_ref3","isActionButton","isToggleButton","toggle","_buttonGroupOptions","accessKey","tabIndex","buttonTemplate","_ref4","buttonContent","$firstIcon","$textContainer","$secondIcon","append","width","height","selectionMode","onKeyboardHandled","e","_keyboardHandler","$content","template","_getTemplateByOption","empty","_popupContentId","setAria","render","model","_popupOptions","horizontalAlignment","dragEnabled","hideOnOutsideClick","$buttonClicked","target","closest","concat","is","showTitle","animation","show","type","duration","from","to","hide","_ignoreFunctionValueDeprecation","shading","position","of","collision","my","at","_wrapperClassExternal","visible","onContentReady","_fireContentReadyAction","selectedItemKeys","actionResult","_buttonGroup","focus","_upDownKeyHandler","open","close","_tabHandler","$popup","$wrapper","on","_popupHidingHandler","_popupShowingHandler","_bindInnerWidgetOptions","_updateAriaAttributes","_popupOptionChanged","args","getOptionsFromContainer","_setPopupOption","optionsKeys","Object","keys","indexOf","_dimensionChanged","popupWidth","optionName","_setWidgetOption","arguments","_setElementAria","elementAria","owns","_setButtonsAria","commonButtonAria","expanded","haspopup","firstButtonAria","label","_getButtons","each","index","$button","find","$buttonGroup","hasArrow","toggleClass","_renderContent","_setListOption","name","_getDisplayValue","isPrimitiveItem","displayValue","String","_setOptionWithoutOptionChange","_clean","remove","_selectedItemKeyChanged","_updateButtonGroup","_actionButtonOptionChanged","_ref5","newConfig","repaint","_selectModeChanged","_updateItemCollection","error","always","_updateDataSource","length","_updateKeyExpr","_optionChanged","_this$_popup","_innerWidgetOptionChanged","fullName","Array","isArray","include"],"sources":["C:/Users/Michal Abargel/Desktop/FULLSTACK_PROJECTS/Patient-Management/client/node_modules/devextreme/esm/ui/drop_down_button.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/drop_down_button.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport $ from \"../core/renderer\";\r\nimport Widget from \"./widget/ui.widget\";\r\nimport {\r\n    FunctionTemplate\r\n} from \"../core/templates/function_template\";\r\nimport registerComponent from \"../core/component_registrator\";\r\nimport ButtonGroup from \"./button_group\";\r\nimport Popup from \"./popup/ui.popup\";\r\nimport List from \"./list_light\";\r\nimport {\r\n    compileGetter\r\n} from \"../core/utils/data\";\r\nimport {\r\n    getPublicElement\r\n} from \"../core/element\";\r\nimport {\r\n    getImageContainer\r\n} from \"../core/utils/icon\";\r\nimport DataHelperMixin from \"../data_helper\";\r\nimport {\r\n    DataSource\r\n} from \"../data/data_source/data_source\";\r\nimport ArrayStore from \"../data/array_store\";\r\nimport {\r\n    Deferred\r\n} from \"../core/utils/deferred\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport {\r\n    isPlainObject,\r\n    isDefined\r\n} from \"../core/utils/type\";\r\nimport {\r\n    ensureDefined,\r\n    noop\r\n} from \"../core/utils/common\";\r\nimport Guid from \"../core/guid\";\r\nimport {\r\n    getElementWidth,\r\n    getSizeValue\r\n} from \"./drop_down_editor/utils\";\r\nimport messageLocalization from \"../localization/message\";\r\nvar DROP_DOWN_BUTTON_CLASS = \"dx-dropdownbutton\";\r\nvar DROP_DOWN_BUTTON_CONTENT = \"dx-dropdownbutton-content\";\r\nvar DROP_DOWN_BUTTON_ACTION_CLASS = \"dx-dropdownbutton-action\";\r\nvar DROP_DOWN_BUTTON_TOGGLE_CLASS = \"dx-dropdownbutton-toggle\";\r\nvar DROP_DOWN_BUTTON_HAS_ARROW_CLASS = \"dx-dropdownbutton-has-arrow\";\r\nvar DROP_DOWN_BUTTON_POPUP_WRAPPER_CLASS = \"dx-dropdownbutton-popup-wrapper\";\r\nvar DROP_DOWN_EDITOR_OVERLAY_CLASS = \"dx-dropdowneditor-overlay\";\r\nvar DX_BUTTON_CLASS = \"dx-button\";\r\nvar DX_BUTTON_TEXT_CLASS = \"dx-button-text\";\r\nvar DX_ICON_RIGHT_CLASS = \"dx-icon-right\";\r\nvar DropDownButton = Widget.inherit({\r\n    _getDefaultOptions() {\r\n        return extend(this.callBase(), {\r\n            itemTemplate: \"item\",\r\n            keyExpr: \"this\",\r\n            displayExpr: void 0,\r\n            selectedItem: null,\r\n            selectedItemKey: null,\r\n            stylingMode: \"outlined\",\r\n            deferRendering: true,\r\n            noDataText: messageLocalization.format(\"dxCollectionWidget-noDataText\"),\r\n            useSelectMode: false,\r\n            splitButton: false,\r\n            showArrowIcon: true,\r\n            text: \"\",\r\n            icon: void 0,\r\n            onButtonClick: null,\r\n            onSelectionChanged: null,\r\n            onItemClick: null,\r\n            opened: false,\r\n            items: null,\r\n            dataSource: null,\r\n            focusStateEnabled: true,\r\n            hoverStateEnabled: true,\r\n            dropDownOptions: {},\r\n            dropDownContentTemplate: \"content\",\r\n            wrapItemText: false,\r\n            useItemTextAsTitle: true,\r\n            grouped: false,\r\n            groupTemplate: \"group\",\r\n            buttonGroupOptions: {}\r\n        })\r\n    },\r\n    _setOptionsByReference() {\r\n        this.callBase();\r\n        extend(this._optionsByReference, {\r\n            selectedItem: true\r\n        })\r\n    },\r\n    _init() {\r\n        this.callBase();\r\n        this._createItemClickAction();\r\n        this._createActionClickAction();\r\n        this._createSelectionChangedAction();\r\n        this._initDataSource();\r\n        this._compileKeyGetter();\r\n        this._compileDisplayGetter();\r\n        this._itemsToDataSource(this.option(\"items\"));\r\n        this._options.cache(\"buttonGroupOptions\", this.option(\"buttonGroupOptions\"));\r\n        this._options.cache(\"dropDownOptions\", this.option(\"dropDownOptions\"))\r\n    },\r\n    _initTemplates() {\r\n        this._templateManager.addDefaultTemplates({\r\n            content: new FunctionTemplate(options => {\r\n                var $popupContent = $(options.container);\r\n                var $listContainer = $(\"<div>\").appendTo($popupContent);\r\n                this._list = this._createComponent($listContainer, List, this._listOptions());\r\n                this._list.registerKeyHandler(\"escape\", this._escHandler.bind(this));\r\n                this._list.registerKeyHandler(\"tab\", this._escHandler.bind(this));\r\n                this._list.registerKeyHandler(\"leftArrow\", this._escHandler.bind(this));\r\n                this._list.registerKeyHandler(\"rightArrow\", this._escHandler.bind(this))\r\n            })\r\n        });\r\n        this.callBase()\r\n    },\r\n    _itemsToDataSource: function(value) {\r\n        if (!this._dataSource) {\r\n            this._dataSource = new DataSource({\r\n                store: new ArrayStore({\r\n                    key: this._getKey(),\r\n                    data: value\r\n                }),\r\n                pageSize: 0\r\n            })\r\n        }\r\n    },\r\n    _getKey: function() {\r\n        var _this$_dataSource;\r\n        var keyExpr = this.option(\"keyExpr\");\r\n        var storeKey = null === (_this$_dataSource = this._dataSource) || void 0 === _this$_dataSource ? void 0 : _this$_dataSource.key();\r\n        return isDefined(storeKey) && (!isDefined(keyExpr) || \"this\" === keyExpr) ? storeKey : keyExpr\r\n    },\r\n    _compileKeyGetter() {\r\n        this._keyGetter = compileGetter(this._getKey())\r\n    },\r\n    _compileDisplayGetter() {\r\n        this._displayGetter = compileGetter(this.option(\"displayExpr\"))\r\n    },\r\n    _initMarkup() {\r\n        this.callBase();\r\n        this.$element().addClass(DROP_DOWN_BUTTON_CLASS);\r\n        this._renderButtonGroup();\r\n        this._updateArrowClass();\r\n        if (isDefined(this.option(\"selectedItemKey\"))) {\r\n            this._loadSelectedItem().done(this._updateActionButton.bind(this))\r\n        }\r\n    },\r\n    _renderFocusTarget: noop,\r\n    _render() {\r\n        if (!this.option(\"deferRendering\") || this.option(\"opened\")) {\r\n            this._renderPopup()\r\n        }\r\n        this.callBase()\r\n    },\r\n    _renderContentImpl() {\r\n        if (this._popup) {\r\n            this._renderPopupContent()\r\n        }\r\n        return this.callBase()\r\n    },\r\n    _loadSelectedItem() {\r\n        var _this$_loadSingleDefe;\r\n        null === (_this$_loadSingleDefe = this._loadSingleDeferred) || void 0 === _this$_loadSingleDefe ? void 0 : _this$_loadSingleDefe.reject();\r\n        var d = new Deferred;\r\n        if (this._list && void 0 !== this._lastSelectedItemData) {\r\n            var cachedResult = this.option(\"useSelectMode\") ? this._list.option(\"selectedItem\") : this._lastSelectedItemData;\r\n            return d.resolve(cachedResult)\r\n        }\r\n        this._lastSelectedItemData = void 0;\r\n        var selectedItemKey = this.option(\"selectedItemKey\");\r\n        this._loadSingle(this._getKey(), selectedItemKey).done(d.resolve).fail(() => {\r\n            d.resolve(null)\r\n        });\r\n        this._loadSingleDeferred = d;\r\n        return d.promise()\r\n    },\r\n    _createActionClickAction() {\r\n        this._actionClickAction = this._createActionByOption(\"onButtonClick\")\r\n    },\r\n    _createSelectionChangedAction() {\r\n        this._selectionChangedAction = this._createActionByOption(\"onSelectionChanged\")\r\n    },\r\n    _createItemClickAction() {\r\n        this._itemClickAction = this._createActionByOption(\"onItemClick\")\r\n    },\r\n    _fireSelectionChangedAction(_ref) {\r\n        var {\r\n            previousValue: previousValue,\r\n            value: value\r\n        } = _ref;\r\n        this._selectionChangedAction({\r\n            item: value,\r\n            previousItem: previousValue\r\n        })\r\n    },\r\n    _fireItemClickAction(_ref2) {\r\n        var {\r\n            event: event,\r\n            itemElement: itemElement,\r\n            itemData: itemData\r\n        } = _ref2;\r\n        return this._itemClickAction({\r\n            event: event,\r\n            itemElement: itemElement,\r\n            itemData: this._actionItem || itemData\r\n        })\r\n    },\r\n    _actionButtonConfig() {\r\n        return {\r\n            text: this.option(\"text\"),\r\n            icon: this.option(\"icon\"),\r\n            elementAttr: {\r\n                class: DROP_DOWN_BUTTON_ACTION_CLASS\r\n            }\r\n        }\r\n    },\r\n    _getButtonGroupItems() {\r\n        var items = [];\r\n        items.push(this._actionButtonConfig());\r\n        if (this.option(\"splitButton\")) {\r\n            items.push({\r\n                icon: \"spindown\",\r\n                elementAttr: {\r\n                    class: DROP_DOWN_BUTTON_TOGGLE_CLASS\r\n                }\r\n            })\r\n        }\r\n        return items\r\n    },\r\n    _buttonGroupItemClick(_ref3) {\r\n        var {\r\n            event: event,\r\n            itemData: itemData\r\n        } = _ref3;\r\n        var isActionButton = itemData.elementAttr.class === DROP_DOWN_BUTTON_ACTION_CLASS;\r\n        var isToggleButton = itemData.elementAttr.class === DROP_DOWN_BUTTON_TOGGLE_CLASS;\r\n        if (isToggleButton) {\r\n            this.toggle()\r\n        } else if (isActionButton) {\r\n            this._actionClickAction({\r\n                event: event,\r\n                selectedItem: this.option(\"selectedItem\")\r\n            });\r\n            if (!this.option(\"splitButton\")) {\r\n                this.toggle()\r\n            }\r\n        }\r\n    },\r\n    _buttonGroupOptions() {\r\n        var {\r\n            splitButton: splitButton,\r\n            showArrowIcon: showArrowIcon,\r\n            focusStateEnabled: focusStateEnabled,\r\n            hoverStateEnabled: hoverStateEnabled,\r\n            stylingMode: stylingMode,\r\n            accessKey: accessKey,\r\n            tabIndex: tabIndex\r\n        } = this.option();\r\n        var buttonTemplate = splitButton || !showArrowIcon ? \"content\" : (_ref4, buttonContent) => {\r\n            var {\r\n                text: text,\r\n                icon: icon\r\n            } = _ref4;\r\n            var $firstIcon = getImageContainer(icon);\r\n            var $textContainer = text ? $(\"<span>\").text(text).addClass(DX_BUTTON_TEXT_CLASS) : void 0;\r\n            var $secondIcon = getImageContainer(\"spindown\").addClass(DX_ICON_RIGHT_CLASS);\r\n            $(buttonContent).append($firstIcon, $textContainer, $secondIcon)\r\n        };\r\n        return extend({\r\n            items: this._getButtonGroupItems(),\r\n            onItemClick: this._buttonGroupItemClick.bind(this),\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            selectionMode: \"none\",\r\n            onKeyboardHandled: e => this._keyboardHandler(e),\r\n            buttonTemplate: buttonTemplate,\r\n            focusStateEnabled: focusStateEnabled,\r\n            hoverStateEnabled: hoverStateEnabled,\r\n            stylingMode: stylingMode,\r\n            accessKey: accessKey,\r\n            tabIndex: tabIndex\r\n        }, this._options.cache(\"buttonGroupOptions\"))\r\n    },\r\n    _renderPopupContent() {\r\n        var $content = this._popup.$content();\r\n        var template = this._getTemplateByOption(\"dropDownContentTemplate\");\r\n        $content.empty();\r\n        this._popupContentId = \"dx-\" + new Guid;\r\n        this.setAria(\"id\", this._popupContentId, $content);\r\n        return template.render({\r\n            container: getPublicElement($content),\r\n            model: this.option(\"items\") || this._dataSource\r\n        })\r\n    },\r\n    _popupOptions() {\r\n        var horizontalAlignment = this.option(\"rtlEnabled\") ? \"right\" : \"left\";\r\n        return extend({\r\n            dragEnabled: false,\r\n            focusStateEnabled: false,\r\n            deferRendering: this.option(\"deferRendering\"),\r\n            hideOnOutsideClick: e => {\r\n                var $element = this.$element();\r\n                var $buttonClicked = $(e.target).closest(\".\".concat(DROP_DOWN_BUTTON_CLASS));\r\n                return !$buttonClicked.is($element)\r\n            },\r\n            showTitle: false,\r\n            animation: {\r\n                show: {\r\n                    type: \"fade\",\r\n                    duration: 0,\r\n                    from: 0,\r\n                    to: 1\r\n                },\r\n                hide: {\r\n                    type: \"fade\",\r\n                    duration: 400,\r\n                    from: 1,\r\n                    to: 0\r\n                }\r\n            },\r\n            _ignoreFunctionValueDeprecation: true,\r\n            width: () => getElementWidth(this.$element()),\r\n            height: \"auto\",\r\n            shading: false,\r\n            position: {\r\n                of: this.$element(),\r\n                collision: \"flipfit\",\r\n                my: horizontalAlignment + \" top\",\r\n                at: horizontalAlignment + \" bottom\"\r\n            },\r\n            _wrapperClassExternal: DROP_DOWN_EDITOR_OVERLAY_CLASS\r\n        }, this._options.cache(\"dropDownOptions\"), {\r\n            visible: this.option(\"opened\")\r\n        })\r\n    },\r\n    _listOptions() {\r\n        var selectedItemKey = this.option(\"selectedItemKey\");\r\n        var useSelectMode = this.option(\"useSelectMode\");\r\n        return {\r\n            selectionMode: useSelectMode ? \"single\" : \"none\",\r\n            wrapItemText: this.option(\"wrapItemText\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            useItemTextAsTitle: this.option(\"useItemTextAsTitle\"),\r\n            onContentReady: () => this._fireContentReadyAction(),\r\n            selectedItemKeys: isDefined(selectedItemKey) && useSelectMode ? [selectedItemKey] : [],\r\n            grouped: this.option(\"grouped\"),\r\n            groupTemplate: this.option(\"groupTemplate\"),\r\n            keyExpr: this._getKey(),\r\n            noDataText: this.option(\"noDataText\"),\r\n            displayExpr: this.option(\"displayExpr\"),\r\n            itemTemplate: this.option(\"itemTemplate\"),\r\n            items: this.option(\"items\"),\r\n            dataSource: this._dataSource,\r\n            onItemClick: e => {\r\n                if (!this.option(\"useSelectMode\")) {\r\n                    this._lastSelectedItemData = e.itemData\r\n                }\r\n                this.option(\"selectedItemKey\", this._keyGetter(e.itemData));\r\n                var actionResult = this._fireItemClickAction(e);\r\n                if (false !== actionResult) {\r\n                    this.toggle(false);\r\n                    this._buttonGroup.focus()\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _upDownKeyHandler() {\r\n        if (this._popup && this._popup.option(\"visible\") && this._list) {\r\n            this._list.focus()\r\n        } else {\r\n            this.open()\r\n        }\r\n        return true\r\n    },\r\n    _escHandler() {\r\n        this.close();\r\n        this._buttonGroup.focus();\r\n        return true\r\n    },\r\n    _tabHandler() {\r\n        this.close();\r\n        return true\r\n    },\r\n    _renderPopup() {\r\n        var $popup = $(\"<div>\");\r\n        this.$element().append($popup);\r\n        this._popup = this._createComponent($popup, Popup, this._popupOptions());\r\n        this._popup.$content().addClass(DROP_DOWN_BUTTON_CONTENT);\r\n        this._popup.$wrapper().addClass(DROP_DOWN_BUTTON_POPUP_WRAPPER_CLASS);\r\n        this._popup.on(\"hiding\", this._popupHidingHandler.bind(this));\r\n        this._popup.on(\"showing\", this._popupShowingHandler.bind(this));\r\n        this._bindInnerWidgetOptions(this._popup, \"dropDownOptions\")\r\n    },\r\n    _popupHidingHandler() {\r\n        this.option(\"opened\", false);\r\n        this._updateAriaAttributes(false)\r\n    },\r\n    _popupOptionChanged: function(args) {\r\n        var options = Widget.getOptionsFromContainer(args);\r\n        this._setPopupOption(options);\r\n        var optionsKeys = Object.keys(options);\r\n        if (-1 !== optionsKeys.indexOf(\"width\") || -1 !== optionsKeys.indexOf(\"height\")) {\r\n            this._dimensionChanged()\r\n        }\r\n    },\r\n    _dimensionChanged: function() {\r\n        var popupWidth = getSizeValue(this.option(\"dropDownOptions.width\"));\r\n        if (void 0 === popupWidth) {\r\n            this._setPopupOption(\"width\", () => getElementWidth(this.$element()))\r\n        }\r\n    },\r\n    _setPopupOption: function(optionName, value) {\r\n        this._setWidgetOption(\"_popup\", arguments)\r\n    },\r\n    _popupShowingHandler() {\r\n        this.option(\"opened\", true);\r\n        this._updateAriaAttributes(true)\r\n    },\r\n    _setElementAria(value) {\r\n        var elementAria = {\r\n            owns: value ? this._popupContentId : void 0\r\n        };\r\n        this.setAria(elementAria, this.$element())\r\n    },\r\n    _setButtonsAria(value) {\r\n        var commonButtonAria = {\r\n            expanded: value,\r\n            haspopup: \"listbox\"\r\n        };\r\n        var firstButtonAria = {};\r\n        if (!this.option(\"text\")) {\r\n            firstButtonAria.label = \"dropdownbutton\"\r\n        }\r\n        this._getButtons().each((index, $button) => {\r\n            if (0 === index) {\r\n                this.setAria(_extends({}, firstButtonAria, commonButtonAria), $($button))\r\n            } else {\r\n                this.setAria(commonButtonAria, $($button))\r\n            }\r\n        })\r\n    },\r\n    _updateAriaAttributes(value) {\r\n        this._setElementAria(value);\r\n        this._setButtonsAria(value)\r\n    },\r\n    _getButtons() {\r\n        return this._buttonGroup.$element().find(\".\".concat(DX_BUTTON_CLASS))\r\n    },\r\n    _renderButtonGroup() {\r\n        var $buttonGroup = this._buttonGroup && this._buttonGroup.$element() || $(\"<div>\");\r\n        if (!this._buttonGroup) {\r\n            this.$element().append($buttonGroup)\r\n        }\r\n        this._buttonGroup = this._createComponent($buttonGroup, ButtonGroup, this._buttonGroupOptions());\r\n        this._buttonGroup.registerKeyHandler(\"downArrow\", this._upDownKeyHandler.bind(this));\r\n        this._buttonGroup.registerKeyHandler(\"tab\", this._tabHandler.bind(this));\r\n        this._buttonGroup.registerKeyHandler(\"upArrow\", this._upDownKeyHandler.bind(this));\r\n        this._buttonGroup.registerKeyHandler(\"escape\", this._escHandler.bind(this));\r\n        this._bindInnerWidgetOptions(this._buttonGroup, \"buttonGroupOptions\");\r\n        this._updateAriaAttributes(this.option(\"opened\"))\r\n    },\r\n    _updateArrowClass() {\r\n        var hasArrow = this.option(\"splitButton\") || this.option(\"showArrowIcon\");\r\n        this.$element().toggleClass(DROP_DOWN_BUTTON_HAS_ARROW_CLASS, hasArrow)\r\n    },\r\n    toggle(visible) {\r\n        if (!this._popup) {\r\n            this._renderPopup();\r\n            this._renderContent()\r\n        }\r\n        return this._popup.toggle(visible)\r\n    },\r\n    open() {\r\n        return this.toggle(true)\r\n    },\r\n    close() {\r\n        return this.toggle(false)\r\n    },\r\n    _setListOption(name, value) {\r\n        this._list && this._list.option(name, value)\r\n    },\r\n    _getDisplayValue(item) {\r\n        var isPrimitiveItem = !isPlainObject(item);\r\n        var displayValue = isPrimitiveItem ? item : this._displayGetter(item);\r\n        return !isPlainObject(displayValue) ? String(ensureDefined(displayValue, \"\")) : \"\"\r\n    },\r\n    _updateActionButton(selectedItem) {\r\n        if (this.option(\"useSelectMode\")) {\r\n            this.option({\r\n                text: this._getDisplayValue(selectedItem),\r\n                icon: isPlainObject(selectedItem) ? selectedItem.icon : void 0\r\n            })\r\n        }\r\n        this._setOptionWithoutOptionChange(\"selectedItem\", selectedItem);\r\n        this._setOptionWithoutOptionChange(\"selectedItemKey\", this._keyGetter(selectedItem))\r\n    },\r\n    _clean() {\r\n        this._list && this._list.$element().remove();\r\n        this._popup && this._popup.$element().remove()\r\n    },\r\n    _selectedItemKeyChanged(value) {\r\n        this._setListOption(\"selectedItemKeys\", this.option(\"useSelectMode\") && isDefined(value) ? [value] : []);\r\n        var previousItem = this.option(\"selectedItem\");\r\n        this._loadSelectedItem().done(selectedItem => {\r\n            this._updateActionButton(selectedItem);\r\n            if (this._displayGetter(previousItem) !== this._displayGetter(selectedItem)) {\r\n                this._fireSelectionChangedAction({\r\n                    previousValue: previousItem,\r\n                    value: selectedItem\r\n                })\r\n            }\r\n        })\r\n    },\r\n    _updateButtonGroup(name, value) {\r\n        this._buttonGroup.option(name, value);\r\n        this._updateAriaAttributes(this.option(\"opened\"))\r\n    },\r\n    _actionButtonOptionChanged(_ref5) {\r\n        var {\r\n            name: name,\r\n            value: value\r\n        } = _ref5;\r\n        var newConfig = {};\r\n        newConfig[name] = value;\r\n        this._updateButtonGroup(\"items[0]\", extend({}, this._actionButtonConfig(), newConfig));\r\n        this._popup && this._popup.repaint()\r\n    },\r\n    _selectModeChanged(value) {\r\n        if (value) {\r\n            this._setListOption(\"selectionMode\", \"single\");\r\n            var selectedItemKey = this.option(\"selectedItemKey\");\r\n            this._setListOption(\"selectedItemKeys\", isDefined(selectedItemKey) ? [selectedItemKey] : []);\r\n            this._selectedItemKeyChanged(this.option(\"selectedItemKey\"))\r\n        } else {\r\n            this._setListOption(\"selectionMode\", \"none\");\r\n            this.option({\r\n                selectedItemKey: void 0,\r\n                selectedItem: void 0\r\n            });\r\n            this._actionButtonOptionChanged({\r\n                text: this.option(\"text\")\r\n            })\r\n        }\r\n    },\r\n    _updateItemCollection(optionName) {\r\n        var selectedItemKey = this.option(\"selectedItemKey\");\r\n        this._setListOption(\"selectedItem\", null);\r\n        this._setWidgetOption(\"_list\", [optionName]);\r\n        if (isDefined(selectedItemKey)) {\r\n            this._loadSelectedItem().done(selectedItem => {\r\n                this._setListOption(\"selectedItemKeys\", [selectedItemKey]);\r\n                this._setListOption(\"selectedItem\", selectedItem)\r\n            }).fail(error => {\r\n                this._setListOption(\"selectedItemKeys\", [])\r\n            }).always(this._updateActionButton.bind(this))\r\n        }\r\n    },\r\n    _updateDataSource: function() {\r\n        var items = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._dataSource.items();\r\n        this._dataSource = void 0;\r\n        this._itemsToDataSource(items);\r\n        this._updateKeyExpr()\r\n    },\r\n    _updateKeyExpr: function() {\r\n        this._compileKeyGetter();\r\n        this._setListOption(\"keyExpr\", this._getKey())\r\n    },\r\n    focus: function() {\r\n        this._buttonGroup.focus()\r\n    },\r\n    _optionChanged(args) {\r\n        var _this$_popup;\r\n        var {\r\n            name: name,\r\n            value: value\r\n        } = args;\r\n        switch (name) {\r\n            case \"useSelectMode\":\r\n                this._selectModeChanged(value);\r\n                break;\r\n            case \"splitButton\":\r\n                this._updateArrowClass();\r\n                this._renderButtonGroup();\r\n                break;\r\n            case \"displayExpr\":\r\n                this._compileDisplayGetter();\r\n                this._setListOption(name, value);\r\n                this._updateActionButton(this.option(\"selectedItem\"));\r\n                break;\r\n            case \"keyExpr\":\r\n                this._updateDataSource();\r\n                break;\r\n            case \"buttonGroupOptions\":\r\n                this._innerWidgetOptionChanged(this._buttonGroup, args);\r\n                break;\r\n            case \"dropDownOptions\":\r\n                if (\"dropDownOptions.visible\" === args.fullName) {\r\n                    break\r\n                }\r\n                if (void 0 !== args.value.visible) {\r\n                    delete args.value.visible\r\n                }\r\n                this._popupOptionChanged(args);\r\n                this._innerWidgetOptionChanged(this._popup, args);\r\n                break;\r\n            case \"opened\":\r\n                this.toggle(value);\r\n                break;\r\n            case \"focusStateEnabled\":\r\n            case \"hoverStateEnabled\":\r\n                this._setListOption(name, value);\r\n                this._updateButtonGroup(name, value);\r\n                this.callBase(args);\r\n                break;\r\n            case \"items\":\r\n                this._updateDataSource(this.option(\"items\"));\r\n                this._updateItemCollection(name);\r\n                break;\r\n            case \"dataSource\":\r\n                if (Array.isArray(value)) {\r\n                    this._updateDataSource(this.option(\"dataSource\"))\r\n                } else {\r\n                    this._initDataSource();\r\n                    this._updateKeyExpr()\r\n                }\r\n                this._updateItemCollection(name);\r\n                break;\r\n            case \"icon\":\r\n            case \"text\":\r\n                this._actionButtonOptionChanged(args);\r\n                break;\r\n            case \"showArrowIcon\":\r\n                this._updateArrowClass();\r\n                this._renderButtonGroup();\r\n                this._popup && this._popup.repaint();\r\n                break;\r\n            case \"width\":\r\n            case \"height\":\r\n                this.callBase(args);\r\n                null === (_this$_popup = this._popup) || void 0 === _this$_popup ? void 0 : _this$_popup.repaint();\r\n                break;\r\n            case \"stylingMode\":\r\n                this._updateButtonGroup(name, value);\r\n                break;\r\n            case \"itemTemplate\":\r\n            case \"grouped\":\r\n            case \"noDataText\":\r\n            case \"groupTemplate\":\r\n            case \"wrapItemText\":\r\n            case \"useItemTextAsTitle\":\r\n                this._setListOption(name, value);\r\n                break;\r\n            case \"dropDownContentTemplate\":\r\n                this._renderContent();\r\n                break;\r\n            case \"selectedItemKey\":\r\n                this._selectedItemKeyChanged(value);\r\n                break;\r\n            case \"selectedItem\":\r\n                break;\r\n            case \"onItemClick\":\r\n                this._createItemClickAction();\r\n                break;\r\n            case \"onButtonClick\":\r\n                this._createActionClickAction();\r\n                break;\r\n            case \"onSelectionChanged\":\r\n                this._createSelectionChangedAction();\r\n                break;\r\n            case \"deferRendering\":\r\n                this.toggle(this.option(\"opened\"));\r\n                break;\r\n            case \"tabIndex\":\r\n                this._updateButtonGroup(name, value);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n}).include(DataHelperMixin);\r\nregisterComponent(\"dxDropDownButton\", DropDownButton);\r\nexport default DropDownButton;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}