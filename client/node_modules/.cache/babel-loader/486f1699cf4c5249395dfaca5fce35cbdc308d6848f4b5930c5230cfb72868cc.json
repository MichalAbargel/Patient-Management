{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Michal Abargel\\\\Desktop\\\\FULLSTACK_PROJECTS\\\\Patient-Management\\\\client\\\\src\\\\components\\\\statistics\\\\BasicLineChart.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { LineChart } from \"@mui/x-charts/LineChart\";\nimport { Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BasicLineChart = () => {\n  _s();\n  const URL = \"http://localhost:3500/api/statistics/activePatients\";\n  const [xVals, setXVals] = useState(null);\n  const [yVals, setYVals] = useState(null);\n  const getLegalDates = datesList => {\n    const newList = [];\n    datesList.forEach(element => {\n      const date = new Date(element);\n      const month = String(date.getMonth() + 1).padStart(2, \"0\");\n      const day = String(date.getDate()).padStart(2, \"0\");\n      newList.push(`${day}/${month}`);\n    });\n    console.log(newList);\n    return newList;\n  };\n  const getActivePatients = async () => {\n    try {\n      const response = await fetch(`${URL}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (response.ok) {\n        const responseData = await response.json();\n        setXVals(getLegalDates(responseData.dates));\n        setYVals(responseData.activePatientsCount);\n      }\n    } catch (error) {\n      console.log(\"Error fetching data\", error);\n    }\n  };\n  useEffect(() => {\n    getActivePatients();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      align: \"center\",\n      children: \"Active Patients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), xVals != null && yVals != null && /*#__PURE__*/_jsxDEV(LineChart, {\n      xAxis: [{\n        scaleType: \"point\",\n        data: xVals,\n        label: \"Day In Month\"\n      }],\n      series: [{\n        data: yVals,\n        label: \"Active Patients\"\n      }],\n      width: 800,\n      height: 500\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(BasicLineChart, \"B5d0qJCWE349QrWkWBhIc2y8Nq8=\");\n_c = BasicLineChart;\nexport default BasicLineChart;\nvar _c;\n$RefreshReg$(_c, \"BasicLineChart\");","map":{"version":3,"names":["useState","useEffect","LineChart","Typography","jsxDEV","_jsxDEV","BasicLineChart","_s","URL","xVals","setXVals","yVals","setYVals","getLegalDates","datesList","newList","forEach","element","date","Date","month","String","getMonth","padStart","day","getDate","push","console","log","getActivePatients","response","fetch","method","headers","ok","responseData","json","dates","activePatientsCount","error","children","variant","align","fileName","_jsxFileName","lineNumber","columnNumber","xAxis","scaleType","data","label","series","width","height","_c","$RefreshReg$"],"sources":["C:/Users/Michal Abargel/Desktop/FULLSTACK_PROJECTS/Patient-Management/client/src/components/statistics/BasicLineChart.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { LineChart } from \"@mui/x-charts/LineChart\";\r\nimport { Typography } from \"@mui/material\";\r\n\r\nconst BasicLineChart = () => {\r\n  const URL = \"http://localhost:3500/api/statistics/activePatients\";\r\n  const [xVals, setXVals] = useState(null);\r\n  const [yVals, setYVals] = useState(null);\r\n\r\n  const getLegalDates = (datesList) => {\r\n    const newList = [];\r\n    datesList.forEach((element) => {\r\n      const date = new Date(element);\r\n      const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n      const day = String(date.getDate()).padStart(2, \"0\");\r\n      newList.push(`${day}/${month}`);\r\n    });\r\n    console.log(newList);\r\n    return newList;\r\n  };\r\n\r\n  const getActivePatients = async () => {\r\n    try {\r\n      const response = await fetch(`${URL}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      if (response.ok) {\r\n        const responseData = await response.json();\r\n        setXVals(getLegalDates(responseData.dates));\r\n        setYVals(responseData.activePatientsCount);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error fetching data\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getActivePatients();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h2\" align=\"center\">\r\n        Active Patients\r\n      </Typography>\r\n      {xVals != null && yVals != null && (\r\n        <LineChart\r\n          xAxis={[{ scaleType: \"point\", data: xVals, label: \"Day In Month\" }]}\r\n          series={[\r\n            {\r\n              data: yVals,\r\n              label: \"Active Patients\",\r\n            },\r\n          ]}\r\n          width={800}\r\n          height={500}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default BasicLineChart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}