{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/scheduler/appointments/rendering_strategies/m_appointments_positioning_strategy_base.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { isDefined } from \"../../../../core/utils/type\";\nvar COLLECTOR_DEFAULT_WIDTH = 24;\nvar COLLECTOR_DEFAULT_OFFSET = 3;\nvar COMPACT_THEME_APPOINTMENT_DEFAULT_OFFSET = 22;\nvar APPOINTMENT_MIN_COUNT = 1;\nvar APPOINTMENT_DEFAULT_WIDTH = 40;\nvar COLLECTOR_WIDTH_IN_PERCENTS = 75;\nvar APPOINTMENT_INCREASED_WIDTH = 50;\nclass AppointmentPositioningStrategy {\n  constructor(renderingStrategy) {\n    this._renderingStrategy = renderingStrategy;\n  }\n  getDropDownAppointmentWidth(intervalCount, isAllDay) {\n    if (isAllDay || !isDefined(isAllDay)) {\n      return COLLECTOR_WIDTH_IN_PERCENTS * this._renderingStrategy.cellWidth / 100;\n    }\n    return COLLECTOR_DEFAULT_WIDTH;\n  }\n  getCollectorTopOffset(allDay) {\n    return COLLECTOR_DEFAULT_OFFSET;\n  }\n  getCollectorLeftOffset() {\n    return COLLECTOR_DEFAULT_OFFSET;\n  }\n  getAppointmentDefaultOffset() {\n    if (this._renderingStrategy._isCompactTheme()) {\n      return COMPACT_THEME_APPOINTMENT_DEFAULT_OFFSET;\n    }\n    return this._renderingStrategy.appointmentOffset;\n  }\n  getDynamicAppointmentCountPerCell() {\n    var renderingStrategy = this._renderingStrategy;\n    var {\n      cellHeight: cellHeight\n    } = renderingStrategy;\n    var allDayCount = Math.floor((cellHeight - renderingStrategy._getAppointmentDefaultOffset()) / renderingStrategy._getAppointmentDefaultHeight()) || this._getAppointmentMinCount();\n    if (renderingStrategy.allDaySupported()) {\n      return {\n        allDay: \"vertical\" === renderingStrategy.groupOrientation ? allDayCount : this._renderingStrategy.appointmentCountPerCell,\n        simple: this._calculateDynamicAppointmentCountPerCell() || this._getAppointmentMinCount()\n      };\n    }\n    return allDayCount;\n  }\n  getDropDownAppointmentHeight() {\n    return;\n  }\n  _getAppointmentMinCount() {\n    return APPOINTMENT_MIN_COUNT;\n  }\n  _calculateDynamicAppointmentCountPerCell() {\n    return Math.floor(this._renderingStrategy._getAppointmentMaxWidth() / APPOINTMENT_INCREASED_WIDTH);\n  }\n  _getAppointmentDefaultWidth() {\n    return APPOINTMENT_DEFAULT_WIDTH;\n  }\n}\nexport default AppointmentPositioningStrategy;","map":{"version":3,"names":["isDefined","COLLECTOR_DEFAULT_WIDTH","COLLECTOR_DEFAULT_OFFSET","COMPACT_THEME_APPOINTMENT_DEFAULT_OFFSET","APPOINTMENT_MIN_COUNT","APPOINTMENT_DEFAULT_WIDTH","COLLECTOR_WIDTH_IN_PERCENTS","APPOINTMENT_INCREASED_WIDTH","AppointmentPositioningStrategy","constructor","renderingStrategy","_renderingStrategy","getDropDownAppointmentWidth","intervalCount","isAllDay","cellWidth","getCollectorTopOffset","allDay","getCollectorLeftOffset","getAppointmentDefaultOffset","_isCompactTheme","appointmentOffset","getDynamicAppointmentCountPerCell","cellHeight","allDayCount","Math","floor","_getAppointmentDefaultOffset","_getAppointmentDefaultHeight","_getAppointmentMinCount","allDaySupported","groupOrientation","appointmentCountPerCell","simple","_calculateDynamicAppointmentCountPerCell","getDropDownAppointmentHeight","_getAppointmentMaxWidth","_getAppointmentDefaultWidth"],"sources":["C:/Users/Michal Abargel/Desktop/FULLSTACK_PROJECTS/Patient-Management/client/node_modules/devextreme/esm/__internal/scheduler/appointments/rendering_strategies/m_appointments_positioning_strategy_base.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/scheduler/appointments/rendering_strategies/m_appointments_positioning_strategy_base.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isDefined\r\n} from \"../../../../core/utils/type\";\r\nvar COLLECTOR_DEFAULT_WIDTH = 24;\r\nvar COLLECTOR_DEFAULT_OFFSET = 3;\r\nvar COMPACT_THEME_APPOINTMENT_DEFAULT_OFFSET = 22;\r\nvar APPOINTMENT_MIN_COUNT = 1;\r\nvar APPOINTMENT_DEFAULT_WIDTH = 40;\r\nvar COLLECTOR_WIDTH_IN_PERCENTS = 75;\r\nvar APPOINTMENT_INCREASED_WIDTH = 50;\r\nclass AppointmentPositioningStrategy {\r\n    constructor(renderingStrategy) {\r\n        this._renderingStrategy = renderingStrategy\r\n    }\r\n    getDropDownAppointmentWidth(intervalCount, isAllDay) {\r\n        if (isAllDay || !isDefined(isAllDay)) {\r\n            return COLLECTOR_WIDTH_IN_PERCENTS * this._renderingStrategy.cellWidth / 100\r\n        }\r\n        return COLLECTOR_DEFAULT_WIDTH\r\n    }\r\n    getCollectorTopOffset(allDay) {\r\n        return COLLECTOR_DEFAULT_OFFSET\r\n    }\r\n    getCollectorLeftOffset() {\r\n        return COLLECTOR_DEFAULT_OFFSET\r\n    }\r\n    getAppointmentDefaultOffset() {\r\n        if (this._renderingStrategy._isCompactTheme()) {\r\n            return COMPACT_THEME_APPOINTMENT_DEFAULT_OFFSET\r\n        }\r\n        return this._renderingStrategy.appointmentOffset\r\n    }\r\n    getDynamicAppointmentCountPerCell() {\r\n        var renderingStrategy = this._renderingStrategy;\r\n        var {\r\n            cellHeight: cellHeight\r\n        } = renderingStrategy;\r\n        var allDayCount = Math.floor((cellHeight - renderingStrategy._getAppointmentDefaultOffset()) / renderingStrategy._getAppointmentDefaultHeight()) || this._getAppointmentMinCount();\r\n        if (renderingStrategy.allDaySupported()) {\r\n            return {\r\n                allDay: \"vertical\" === renderingStrategy.groupOrientation ? allDayCount : this._renderingStrategy.appointmentCountPerCell,\r\n                simple: this._calculateDynamicAppointmentCountPerCell() || this._getAppointmentMinCount()\r\n            }\r\n        }\r\n        return allDayCount\r\n    }\r\n    getDropDownAppointmentHeight() {\r\n        return\r\n    }\r\n    _getAppointmentMinCount() {\r\n        return APPOINTMENT_MIN_COUNT\r\n    }\r\n    _calculateDynamicAppointmentCountPerCell() {\r\n        return Math.floor(this._renderingStrategy._getAppointmentMaxWidth() / APPOINTMENT_INCREASED_WIDTH)\r\n    }\r\n    _getAppointmentDefaultWidth() {\r\n        return APPOINTMENT_DEFAULT_WIDTH\r\n    }\r\n}\r\nexport default AppointmentPositioningStrategy;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,SAAS,QACN,6BAA6B;AACpC,IAAIC,uBAAuB,GAAG,EAAE;AAChC,IAAIC,wBAAwB,GAAG,CAAC;AAChC,IAAIC,wCAAwC,GAAG,EAAE;AACjD,IAAIC,qBAAqB,GAAG,CAAC;AAC7B,IAAIC,yBAAyB,GAAG,EAAE;AAClC,IAAIC,2BAA2B,GAAG,EAAE;AACpC,IAAIC,2BAA2B,GAAG,EAAE;AACpC,MAAMC,8BAA8B,CAAC;EACjCC,WAAWA,CAACC,iBAAiB,EAAE;IAC3B,IAAI,CAACC,kBAAkB,GAAGD,iBAAiB;EAC/C;EACAE,2BAA2BA,CAACC,aAAa,EAAEC,QAAQ,EAAE;IACjD,IAAIA,QAAQ,IAAI,CAACd,SAAS,CAACc,QAAQ,CAAC,EAAE;MAClC,OAAOR,2BAA2B,GAAG,IAAI,CAACK,kBAAkB,CAACI,SAAS,GAAG,GAAG;IAChF;IACA,OAAOd,uBAAuB;EAClC;EACAe,qBAAqBA,CAACC,MAAM,EAAE;IAC1B,OAAOf,wBAAwB;EACnC;EACAgB,sBAAsBA,CAAA,EAAG;IACrB,OAAOhB,wBAAwB;EACnC;EACAiB,2BAA2BA,CAAA,EAAG;IAC1B,IAAI,IAAI,CAACR,kBAAkB,CAACS,eAAe,CAAC,CAAC,EAAE;MAC3C,OAAOjB,wCAAwC;IACnD;IACA,OAAO,IAAI,CAACQ,kBAAkB,CAACU,iBAAiB;EACpD;EACAC,iCAAiCA,CAAA,EAAG;IAChC,IAAIZ,iBAAiB,GAAG,IAAI,CAACC,kBAAkB;IAC/C,IAAI;MACAY,UAAU,EAAEA;IAChB,CAAC,GAAGb,iBAAiB;IACrB,IAAIc,WAAW,GAAGC,IAAI,CAACC,KAAK,CAAC,CAACH,UAAU,GAAGb,iBAAiB,CAACiB,4BAA4B,CAAC,CAAC,IAAIjB,iBAAiB,CAACkB,4BAA4B,CAAC,CAAC,CAAC,IAAI,IAAI,CAACC,uBAAuB,CAAC,CAAC;IAClL,IAAInB,iBAAiB,CAACoB,eAAe,CAAC,CAAC,EAAE;MACrC,OAAO;QACHb,MAAM,EAAE,UAAU,KAAKP,iBAAiB,CAACqB,gBAAgB,GAAGP,WAAW,GAAG,IAAI,CAACb,kBAAkB,CAACqB,uBAAuB;QACzHC,MAAM,EAAE,IAAI,CAACC,wCAAwC,CAAC,CAAC,IAAI,IAAI,CAACL,uBAAuB,CAAC;MAC5F,CAAC;IACL;IACA,OAAOL,WAAW;EACtB;EACAW,4BAA4BA,CAAA,EAAG;IAC3B;EACJ;EACAN,uBAAuBA,CAAA,EAAG;IACtB,OAAOzB,qBAAqB;EAChC;EACA8B,wCAAwCA,CAAA,EAAG;IACvC,OAAOT,IAAI,CAACC,KAAK,CAAC,IAAI,CAACf,kBAAkB,CAACyB,uBAAuB,CAAC,CAAC,GAAG7B,2BAA2B,CAAC;EACtG;EACA8B,2BAA2BA,CAAA,EAAG;IAC1B,OAAOhC,yBAAyB;EACpC;AACJ;AACA,eAAeG,8BAA8B"},"metadata":{},"sourceType":"module","externalDependencies":[]}