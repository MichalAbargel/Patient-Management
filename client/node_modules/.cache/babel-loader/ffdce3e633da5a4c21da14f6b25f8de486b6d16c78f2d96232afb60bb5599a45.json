{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"slots\", \"slotProps\", \"onItemClick\", \"skipAnimation\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { area as d3Area } from 'd3-shape';\nimport { SeriesContext } from '../context/SeriesContextProvider';\nimport { CartesianContext } from '../context/CartesianContextProvider';\nimport { AreaElement } from './AreaElement';\nimport { getValueToPositionMapper } from '../hooks/useScale';\nimport getCurveFactory from '../internals/getCurve';\nimport { DEFAULT_X_AXIS_KEY } from '../constants';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useAggregatedData = () => {\n  const seriesData = React.useContext(SeriesContext).line;\n  const axisData = React.useContext(CartesianContext);\n  if (seriesData === undefined) {\n    return [];\n  }\n  const {\n    series,\n    stackingGroups\n  } = seriesData;\n  const {\n    xAxis,\n    yAxis,\n    xAxisIds,\n    yAxisIds\n  } = axisData;\n  const defaultXAxisId = xAxisIds[0];\n  const defaultYAxisId = yAxisIds[0];\n  return stackingGroups.flatMap(_ref => {\n    let {\n      ids: groupIds\n    } = _ref;\n    return groupIds.flatMap(seriesId => {\n      var _xData$map;\n      const {\n        xAxisKey = defaultXAxisId,\n        yAxisKey = defaultYAxisId,\n        stackedData,\n        data,\n        connectNulls\n      } = series[seriesId];\n      const xScale = getValueToPositionMapper(xAxis[xAxisKey].scale);\n      const yScale = yAxis[yAxisKey].scale;\n      const xData = xAxis[xAxisKey].data;\n      if (process.env.NODE_ENV !== 'production') {\n        if (xData === undefined) {\n          throw new Error(\"MUI X Charts: \".concat(xAxisKey === DEFAULT_X_AXIS_KEY ? 'The first `xAxis`' : \"The x-axis with id \\\"\".concat(xAxisKey, \"\\\"\"), \" should have data property to be able to display a line plot.\"));\n        }\n        if (xData.length < stackedData.length) {\n          throw new Error(\"MUI X Charts: The data length of the x axis (\".concat(xData.length, \" items) is lower than the length of series (\").concat(stackedData.length, \" items).\"));\n        }\n      }\n      const areaPath = d3Area().x(d => xScale(d.x)).defined((_, i) => connectNulls || data[i] != null).y0(d => d.y && yScale(d.y[0])).y1(d => d.y && yScale(d.y[1]));\n      const curve = getCurveFactory(series[seriesId].curve);\n      const formattedData = (_xData$map = xData === null || xData === void 0 ? void 0 : xData.map((x, index) => ({\n        x,\n        y: stackedData[index]\n      }))) !== null && _xData$map !== void 0 ? _xData$map : [];\n      const d3Data = connectNulls ? formattedData.filter((_, i) => data[i] != null) : formattedData;\n      const d = areaPath.curve(curve)(d3Data) || '';\n      return _extends({}, series[seriesId], {\n        d,\n        seriesId\n      });\n    });\n  });\n};\n\n/**\r\n * Demos:\r\n *\r\n * - [Lines](https://mui.com/x/react-charts/lines/)\r\n * - [Areas demonstration](https://mui.com/x/react-charts/areas-demo/)\r\n * - [Stacking](https://mui.com/x/react-charts/stacking/)\r\n *\r\n * API:\r\n *\r\n * - [AreaPlot API](https://mui.com/x/api/charts/area-plot/)\r\n */\nfunction AreaPlot(props) {\n  const {\n      slots,\n      slotProps,\n      onItemClick,\n      skipAnimation\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const completedData = useAggregatedData();\n  return /*#__PURE__*/_jsx(\"g\", _extends({}, other, {\n    children: completedData.reverse().map(_ref2 => {\n      let {\n        d,\n        seriesId,\n        color,\n        highlightScope,\n        area\n      } = _ref2;\n      return !!area && /*#__PURE__*/_jsx(AreaElement, {\n        id: seriesId,\n        d: d,\n        color: color,\n        highlightScope: highlightScope,\n        slots: slots,\n        slotProps: slotProps,\n        onClick: onItemClick && (event => onItemClick(event, {\n          type: 'line',\n          seriesId\n        })),\n        skipAnimation: skipAnimation\n      }, seriesId);\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? AreaPlot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\r\n   * Callback fired when a line area item is clicked.\r\n   * @param {React.MouseEvent<SVGPathElement, MouseEvent>} event The event source of the callback.\r\n   * @param {LineItemIdentifier} lineItemIdentifier The line item identifier.\r\n   */\n  onItemClick: PropTypes.func,\n  /**\r\n   * If `true`, animations are skipped.\r\n   * @default false\r\n   */\n  skipAnimation: PropTypes.bool,\n  /**\r\n   * The props used for each component slot.\r\n   * @default {}\r\n   */\n  slotProps: PropTypes.object,\n  /**\r\n   * Overridable component slots.\r\n   * @default {}\r\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { AreaPlot };","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","area","d3Area","SeriesContext","CartesianContext","AreaElement","getValueToPositionMapper","getCurveFactory","DEFAULT_X_AXIS_KEY","jsx","_jsx","useAggregatedData","seriesData","useContext","line","axisData","undefined","series","stackingGroups","xAxis","yAxis","xAxisIds","yAxisIds","defaultXAxisId","defaultYAxisId","flatMap","_ref","ids","groupIds","seriesId","_xData$map","xAxisKey","yAxisKey","stackedData","data","connectNulls","xScale","scale","yScale","xData","process","env","NODE_ENV","Error","concat","length","areaPath","x","d","defined","_","i","y0","y","y1","curve","formattedData","map","index","d3Data","filter","AreaPlot","props","slots","slotProps","onItemClick","skipAnimation","other","completedData","children","reverse","_ref2","color","highlightScope","id","onClick","event","type","propTypes","func","bool","object"],"sources":["C:/Users/Michal Abargel/Desktop/FULLSTACK_PROJECTS/Patient-Management/client/node_modules/@mui/x-charts/esm/LineChart/AreaPlot.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nconst _excluded = [\"slots\", \"slotProps\", \"onItemClick\", \"skipAnimation\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { area as d3Area } from 'd3-shape';\r\nimport { SeriesContext } from '../context/SeriesContextProvider';\r\nimport { CartesianContext } from '../context/CartesianContextProvider';\r\nimport { AreaElement } from './AreaElement';\r\nimport { getValueToPositionMapper } from '../hooks/useScale';\r\nimport getCurveFactory from '../internals/getCurve';\r\nimport { DEFAULT_X_AXIS_KEY } from '../constants';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst useAggregatedData = () => {\r\n  const seriesData = React.useContext(SeriesContext).line;\r\n  const axisData = React.useContext(CartesianContext);\r\n  if (seriesData === undefined) {\r\n    return [];\r\n  }\r\n  const {\r\n    series,\r\n    stackingGroups\r\n  } = seriesData;\r\n  const {\r\n    xAxis,\r\n    yAxis,\r\n    xAxisIds,\r\n    yAxisIds\r\n  } = axisData;\r\n  const defaultXAxisId = xAxisIds[0];\r\n  const defaultYAxisId = yAxisIds[0];\r\n  return stackingGroups.flatMap(({\r\n    ids: groupIds\r\n  }) => {\r\n    return groupIds.flatMap(seriesId => {\r\n      const {\r\n        xAxisKey = defaultXAxisId,\r\n        yAxisKey = defaultYAxisId,\r\n        stackedData,\r\n        data,\r\n        connectNulls\r\n      } = series[seriesId];\r\n      const xScale = getValueToPositionMapper(xAxis[xAxisKey].scale);\r\n      const yScale = yAxis[yAxisKey].scale;\r\n      const xData = xAxis[xAxisKey].data;\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        if (xData === undefined) {\r\n          throw new Error(`MUI X Charts: ${xAxisKey === DEFAULT_X_AXIS_KEY ? 'The first `xAxis`' : `The x-axis with id \"${xAxisKey}\"`} should have data property to be able to display a line plot.`);\r\n        }\r\n        if (xData.length < stackedData.length) {\r\n          throw new Error(`MUI X Charts: The data length of the x axis (${xData.length} items) is lower than the length of series (${stackedData.length} items).`);\r\n        }\r\n      }\r\n      const areaPath = d3Area().x(d => xScale(d.x)).defined((_, i) => connectNulls || data[i] != null).y0(d => d.y && yScale(d.y[0])).y1(d => d.y && yScale(d.y[1]));\r\n      const curve = getCurveFactory(series[seriesId].curve);\r\n      const formattedData = xData?.map((x, index) => ({\r\n        x,\r\n        y: stackedData[index]\r\n      })) ?? [];\r\n      const d3Data = connectNulls ? formattedData.filter((_, i) => data[i] != null) : formattedData;\r\n      const d = areaPath.curve(curve)(d3Data) || '';\r\n      return _extends({}, series[seriesId], {\r\n        d,\r\n        seriesId\r\n      });\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n * Demos:\r\n *\r\n * - [Lines](https://mui.com/x/react-charts/lines/)\r\n * - [Areas demonstration](https://mui.com/x/react-charts/areas-demo/)\r\n * - [Stacking](https://mui.com/x/react-charts/stacking/)\r\n *\r\n * API:\r\n *\r\n * - [AreaPlot API](https://mui.com/x/api/charts/area-plot/)\r\n */\r\nfunction AreaPlot(props) {\r\n  const {\r\n      slots,\r\n      slotProps,\r\n      onItemClick,\r\n      skipAnimation\r\n    } = props,\r\n    other = _objectWithoutPropertiesLoose(props, _excluded);\r\n  const completedData = useAggregatedData();\r\n  return /*#__PURE__*/_jsx(\"g\", _extends({}, other, {\r\n    children: completedData.reverse().map(({\r\n      d,\r\n      seriesId,\r\n      color,\r\n      highlightScope,\r\n      area\r\n    }) => !!area && /*#__PURE__*/_jsx(AreaElement, {\r\n      id: seriesId,\r\n      d: d,\r\n      color: color,\r\n      highlightScope: highlightScope,\r\n      slots: slots,\r\n      slotProps: slotProps,\r\n      onClick: onItemClick && (event => onItemClick(event, {\r\n        type: 'line',\r\n        seriesId\r\n      })),\r\n      skipAnimation: skipAnimation\r\n    }, seriesId))\r\n  }));\r\n}\r\nprocess.env.NODE_ENV !== \"production\" ? AreaPlot.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\r\n  // ----------------------------------------------------------------------\r\n  /**\r\n   * Callback fired when a line area item is clicked.\r\n   * @param {React.MouseEvent<SVGPathElement, MouseEvent>} event The event source of the callback.\r\n   * @param {LineItemIdentifier} lineItemIdentifier The line item identifier.\r\n   */\r\n  onItemClick: PropTypes.func,\r\n  /**\r\n   * If `true`, animations are skipped.\r\n   * @default false\r\n   */\r\n  skipAnimation: PropTypes.bool,\r\n  /**\r\n   * The props used for each component slot.\r\n   * @default {}\r\n   */\r\n  slotProps: PropTypes.object,\r\n  /**\r\n   * Overridable component slots.\r\n   * @default {}\r\n   */\r\n  slots: PropTypes.object\r\n} : void 0;\r\nexport { AreaPlot };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}