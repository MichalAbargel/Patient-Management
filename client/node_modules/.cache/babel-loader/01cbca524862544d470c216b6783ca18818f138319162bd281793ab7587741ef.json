{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/workspaces/view_model/utils.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport dateUtils from \"../../../../core/utils/date\";\nimport { VIEWS } from \"../../constants\";\nimport { ViewDataGenerator } from \"./view_data_generator\";\nimport { ViewDataGeneratorDay } from \"./view_data_generator_day\";\nimport { ViewDataGeneratorMonth } from \"./view_data_generator_month\";\nimport { ViewDataGeneratorTimelineMonth } from \"./view_data_generator_timeline_month\";\nimport { ViewDataGeneratorWeek } from \"./view_data_generator_week\";\nimport { ViewDataGeneratorWorkWeek } from \"./view_data_generator_work_week\";\nvar DAYS_IN_WEEK = 7;\nvar MS_IN_DAY = 864e5;\nexport var getViewDataGeneratorByViewType = viewType => {\n  switch (viewType) {\n    case VIEWS.MONTH:\n      return new ViewDataGeneratorMonth();\n    case VIEWS.TIMELINE_MONTH:\n      return new ViewDataGeneratorTimelineMonth();\n    case VIEWS.DAY:\n    case VIEWS.TIMELINE_DAY:\n      return new ViewDataGeneratorDay();\n    case VIEWS.WEEK:\n    case VIEWS.TIMELINE_WEEK:\n      return new ViewDataGeneratorWeek();\n    case VIEWS.WORK_WEEK:\n    case VIEWS.TIMELINE_WORK_WEEK:\n      return new ViewDataGeneratorWorkWeek();\n    default:\n      return new ViewDataGenerator();\n  }\n};\nexport function alignToFirstDayOfWeek(date, firstDayOfWeek) {\n  var newDate = new Date(date);\n  var dayDiff = newDate.getDay() - firstDayOfWeek;\n  if (dayDiff < 0) {\n    dayDiff += DAYS_IN_WEEK;\n  }\n  newDate.setDate(newDate.getDate() - dayDiff);\n  return newDate;\n}\nexport function alignToLastDayOfWeek(date, firstDayOfWeek) {\n  var newDate = alignToFirstDayOfWeek(date, firstDayOfWeek);\n  newDate.setDate(newDate.getDate() + DAYS_IN_WEEK - 1);\n  return newDate;\n}\nexport function calculateDaysBetweenDates(fromDate, toDate) {\n  var msDiff = dateUtils.trimTime(toDate).getTime() - dateUtils.trimTime(fromDate).getTime();\n  return Math.round(msDiff / MS_IN_DAY) + 1;\n}\nexport function calculateAlignedWeeksBetweenDates(fromDate, toDate, firstDayOfWeek) {\n  var alignedFromDate = alignToFirstDayOfWeek(fromDate, firstDayOfWeek);\n  var alignedToDate = alignToLastDayOfWeek(toDate, firstDayOfWeek);\n  var weekCount = calculateDaysBetweenDates(alignedFromDate, alignedToDate) / DAYS_IN_WEEK;\n  return Math.max(weekCount, 6);\n}","map":{"version":3,"names":["dateUtils","VIEWS","ViewDataGenerator","ViewDataGeneratorDay","ViewDataGeneratorMonth","ViewDataGeneratorTimelineMonth","ViewDataGeneratorWeek","ViewDataGeneratorWorkWeek","DAYS_IN_WEEK","MS_IN_DAY","getViewDataGeneratorByViewType","viewType","MONTH","TIMELINE_MONTH","DAY","TIMELINE_DAY","WEEK","TIMELINE_WEEK","WORK_WEEK","TIMELINE_WORK_WEEK","alignToFirstDayOfWeek","date","firstDayOfWeek","newDate","Date","dayDiff","getDay","setDate","getDate","alignToLastDayOfWeek","calculateDaysBetweenDates","fromDate","toDate","msDiff","trimTime","getTime","Math","round","calculateAlignedWeeksBetweenDates","alignedFromDate","alignedToDate","weekCount","max"],"sources":["C:/Users/Michal Abargel/Desktop/FULLSTACK_PROJECTS/Patient-Management/client/node_modules/devextreme/esm/ui/scheduler/workspaces/view_model/utils.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/workspaces/view_model/utils.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport dateUtils from \"../../../../core/utils/date\";\r\nimport {\r\n    VIEWS\r\n} from \"../../constants\";\r\nimport {\r\n    ViewDataGenerator\r\n} from \"./view_data_generator\";\r\nimport {\r\n    ViewDataGeneratorDay\r\n} from \"./view_data_generator_day\";\r\nimport {\r\n    ViewDataGeneratorMonth\r\n} from \"./view_data_generator_month\";\r\nimport {\r\n    ViewDataGeneratorTimelineMonth\r\n} from \"./view_data_generator_timeline_month\";\r\nimport {\r\n    ViewDataGeneratorWeek\r\n} from \"./view_data_generator_week\";\r\nimport {\r\n    ViewDataGeneratorWorkWeek\r\n} from \"./view_data_generator_work_week\";\r\nvar DAYS_IN_WEEK = 7;\r\nvar MS_IN_DAY = 864e5;\r\nexport var getViewDataGeneratorByViewType = viewType => {\r\n    switch (viewType) {\r\n        case VIEWS.MONTH:\r\n            return new ViewDataGeneratorMonth;\r\n        case VIEWS.TIMELINE_MONTH:\r\n            return new ViewDataGeneratorTimelineMonth;\r\n        case VIEWS.DAY:\r\n        case VIEWS.TIMELINE_DAY:\r\n            return new ViewDataGeneratorDay;\r\n        case VIEWS.WEEK:\r\n        case VIEWS.TIMELINE_WEEK:\r\n            return new ViewDataGeneratorWeek;\r\n        case VIEWS.WORK_WEEK:\r\n        case VIEWS.TIMELINE_WORK_WEEK:\r\n            return new ViewDataGeneratorWorkWeek;\r\n        default:\r\n            return new ViewDataGenerator\r\n    }\r\n};\r\nexport function alignToFirstDayOfWeek(date, firstDayOfWeek) {\r\n    var newDate = new Date(date);\r\n    var dayDiff = newDate.getDay() - firstDayOfWeek;\r\n    if (dayDiff < 0) {\r\n        dayDiff += DAYS_IN_WEEK\r\n    }\r\n    newDate.setDate(newDate.getDate() - dayDiff);\r\n    return newDate\r\n}\r\nexport function alignToLastDayOfWeek(date, firstDayOfWeek) {\r\n    var newDate = alignToFirstDayOfWeek(date, firstDayOfWeek);\r\n    newDate.setDate(newDate.getDate() + DAYS_IN_WEEK - 1);\r\n    return newDate\r\n}\r\nexport function calculateDaysBetweenDates(fromDate, toDate) {\r\n    var msDiff = dateUtils.trimTime(toDate).getTime() - dateUtils.trimTime(fromDate).getTime();\r\n    return Math.round(msDiff / MS_IN_DAY) + 1\r\n}\r\nexport function calculateAlignedWeeksBetweenDates(fromDate, toDate, firstDayOfWeek) {\r\n    var alignedFromDate = alignToFirstDayOfWeek(fromDate, firstDayOfWeek);\r\n    var alignedToDate = alignToLastDayOfWeek(toDate, firstDayOfWeek);\r\n    var weekCount = calculateDaysBetweenDates(alignedFromDate, alignedToDate) / DAYS_IN_WEEK;\r\n    return Math.max(weekCount, 6)\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,SAAS,MAAM,6BAA6B;AACnD,SACIC,KAAK,QACF,iBAAiB;AACxB,SACIC,iBAAiB,QACd,uBAAuB;AAC9B,SACIC,oBAAoB,QACjB,2BAA2B;AAClC,SACIC,sBAAsB,QACnB,6BAA6B;AACpC,SACIC,8BAA8B,QAC3B,sCAAsC;AAC7C,SACIC,qBAAqB,QAClB,4BAA4B;AACnC,SACIC,yBAAyB,QACtB,iCAAiC;AACxC,IAAIC,YAAY,GAAG,CAAC;AACpB,IAAIC,SAAS,GAAG,KAAK;AACrB,OAAO,IAAIC,8BAA8B,GAAGC,QAAQ,IAAI;EACpD,QAAQA,QAAQ;IACZ,KAAKV,KAAK,CAACW,KAAK;MACZ,OAAO,IAAIR,sBAAsB,CAAD,CAAC;IACrC,KAAKH,KAAK,CAACY,cAAc;MACrB,OAAO,IAAIR,8BAA8B,CAAD,CAAC;IAC7C,KAAKJ,KAAK,CAACa,GAAG;IACd,KAAKb,KAAK,CAACc,YAAY;MACnB,OAAO,IAAIZ,oBAAoB,CAAD,CAAC;IACnC,KAAKF,KAAK,CAACe,IAAI;IACf,KAAKf,KAAK,CAACgB,aAAa;MACpB,OAAO,IAAIX,qBAAqB,CAAD,CAAC;IACpC,KAAKL,KAAK,CAACiB,SAAS;IACpB,KAAKjB,KAAK,CAACkB,kBAAkB;MACzB,OAAO,IAAIZ,yBAAyB,CAAD,CAAC;IACxC;MACI,OAAO,IAAIL,iBAAiB,CAAD,CAAC;EACpC;AACJ,CAAC;AACD,OAAO,SAASkB,qBAAqBA,CAACC,IAAI,EAAEC,cAAc,EAAE;EACxD,IAAIC,OAAO,GAAG,IAAIC,IAAI,CAACH,IAAI,CAAC;EAC5B,IAAII,OAAO,GAAGF,OAAO,CAACG,MAAM,CAAC,CAAC,GAAGJ,cAAc;EAC/C,IAAIG,OAAO,GAAG,CAAC,EAAE;IACbA,OAAO,IAAIjB,YAAY;EAC3B;EACAe,OAAO,CAACI,OAAO,CAACJ,OAAO,CAACK,OAAO,CAAC,CAAC,GAAGH,OAAO,CAAC;EAC5C,OAAOF,OAAO;AAClB;AACA,OAAO,SAASM,oBAAoBA,CAACR,IAAI,EAAEC,cAAc,EAAE;EACvD,IAAIC,OAAO,GAAGH,qBAAqB,CAACC,IAAI,EAAEC,cAAc,CAAC;EACzDC,OAAO,CAACI,OAAO,CAACJ,OAAO,CAACK,OAAO,CAAC,CAAC,GAAGpB,YAAY,GAAG,CAAC,CAAC;EACrD,OAAOe,OAAO;AAClB;AACA,OAAO,SAASO,yBAAyBA,CAACC,QAAQ,EAAEC,MAAM,EAAE;EACxD,IAAIC,MAAM,GAAGjC,SAAS,CAACkC,QAAQ,CAACF,MAAM,CAAC,CAACG,OAAO,CAAC,CAAC,GAAGnC,SAAS,CAACkC,QAAQ,CAACH,QAAQ,CAAC,CAACI,OAAO,CAAC,CAAC;EAC1F,OAAOC,IAAI,CAACC,KAAK,CAACJ,MAAM,GAAGxB,SAAS,CAAC,GAAG,CAAC;AAC7C;AACA,OAAO,SAAS6B,iCAAiCA,CAACP,QAAQ,EAAEC,MAAM,EAAEV,cAAc,EAAE;EAChF,IAAIiB,eAAe,GAAGnB,qBAAqB,CAACW,QAAQ,EAAET,cAAc,CAAC;EACrE,IAAIkB,aAAa,GAAGX,oBAAoB,CAACG,MAAM,EAAEV,cAAc,CAAC;EAChE,IAAImB,SAAS,GAAGX,yBAAyB,CAACS,eAAe,EAAEC,aAAa,CAAC,GAAGhC,YAAY;EACxF,OAAO4B,IAAI,CAACM,GAAG,CAACD,SAAS,EAAE,CAAC,CAAC;AACjC"},"metadata":{},"sourceType":"module","externalDependencies":[]}