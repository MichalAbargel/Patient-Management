{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/scheduler/resources/m_utils.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { wrapToArray } from \"../../../core/utils/array\";\nimport { equalByValue } from \"../../../core/utils/common\";\nimport { compileGetter, compileSetter } from \"../../../core/utils/data\";\nimport { Deferred, when } from \"../../../core/utils/deferred\";\nimport { extend } from \"../../../core/utils/extend\";\nimport { each } from \"../../../core/utils/iterator\";\nimport { deepExtendArraySafe } from \"../../../core/utils/object\";\nimport { isDefined } from \"../../../core/utils/type\";\nimport { DataSource } from \"../../../data/data_source/data_source\";\nimport { normalizeDataSourceOptions } from \"../../../data/data_source/utils\";\nimport { hasResourceValue } from \"../../../renovation/ui/scheduler/resources/hasResourceValue\";\nexport var getValueExpr = resource => resource.valueExpr || \"id\";\nexport var getDisplayExpr = resource => resource.displayExpr || \"text\";\nexport var getFieldExpr = resource => resource.fieldExpr || resource.field;\nexport var getWrappedDataSource = dataSource => {\n  if (dataSource instanceof DataSource) {\n    return dataSource;\n  }\n  var result = _extends(_extends({}, normalizeDataSourceOptions(dataSource)), {\n    pageSize: 0\n  });\n  if (!Array.isArray(dataSource)) {\n    result.filter = dataSource.filter;\n  }\n  return new DataSource(result);\n};\nexport var createResourcesTree = groups => {\n  var leafIndex = 0;\n  var make = (group, groupIndex, result, parent) => {\n    var _a;\n    result = result || [];\n    for (var itemIndex = 0; itemIndex < group.items.length; itemIndex++) {\n      var currentGroupItem = group.items[itemIndex];\n      var resultItem = {\n        name: group.name,\n        value: currentGroupItem.id,\n        title: currentGroupItem.text,\n        data: null === (_a = group.data) || void 0 === _a ? void 0 : _a[itemIndex],\n        children: [],\n        parent: parent || null\n      };\n      var nextGroupIndex = groupIndex + 1;\n      if (groups[nextGroupIndex]) {\n        make(groups[nextGroupIndex], nextGroupIndex, resultItem.children, resultItem);\n      }\n      if (!resultItem.children.length) {\n        resultItem.leafIndex = leafIndex;\n        leafIndex++;\n      }\n      result.push(resultItem);\n    }\n    return result;\n  };\n  return make(groups[0], 0);\n};\nexport var getPathToLeaf = (leafIndex, groups) => {\n  var tree = createResourcesTree(groups);\n  var findLeafByIndex = (data, index) => {\n    for (var i = 0; i < data.length; i++) {\n      if (data[i].leafIndex === index) {\n        return data[i];\n      }\n      var _leaf = findLeafByIndex(data[i].children, index);\n      if (_leaf) {\n        return _leaf;\n      }\n    }\n  };\n  var makeBranch = (leaf, result) => {\n    result = result || [];\n    result.push(leaf.value);\n    if (leaf.parent) {\n      makeBranch(leaf.parent, result);\n    }\n    return result;\n  };\n  var leaf = findLeafByIndex(tree, leafIndex);\n  return makeBranch(leaf).reverse();\n};\nexport var getCellGroups = (groupIndex, groups) => {\n  var result = [];\n  if (getGroupCount(groups)) {\n    if (groupIndex < 0) {\n      return;\n    }\n    var path = getPathToLeaf(groupIndex, groups);\n    for (var i = 0; i < groups.length; i++) {\n      result.push({\n        name: groups[i].name,\n        id: path[i]\n      });\n    }\n  }\n  return result;\n};\nexport var getGroupCount = groups => {\n  var result = 0;\n  for (var i = 0, len = groups.length; i < len; i++) {\n    if (!i) {\n      result = groups[i].items.length;\n    } else {\n      result *= groups[i].items.length;\n    }\n  }\n  return result;\n};\nexport var getGroupsObjectFromGroupsArray = groupsArray => groupsArray.reduce((currentGroups, _ref) => {\n  var {\n    name: name,\n    id: id\n  } = _ref;\n  return _extends(_extends({}, currentGroups), {\n    [name]: id\n  });\n}, {});\nexport var getAllGroups = groups => {\n  var groupCount = getGroupCount(groups);\n  return [...new Array(groupCount)].map((_, groupIndex) => {\n    var groupsArray = getCellGroups(groupIndex, groups);\n    return getGroupsObjectFromGroupsArray(groupsArray);\n  });\n};\nexport var getResourceByField = (fieldName, loadedResources) => {\n  for (var i = 0; i < loadedResources.length; i++) {\n    var resource = loadedResources[i];\n    if (resource.name === fieldName) {\n      return resource.data;\n    }\n  }\n  return [];\n};\nexport var createResourceEditorModel = (resources, loadedResources) => resources.map(resource => {\n  var dataField = getFieldExpr(resource);\n  var dataSource = getResourceByField(dataField, loadedResources);\n  return {\n    editorOptions: {\n      dataSource: dataSource.length ? dataSource : getWrappedDataSource(resource.dataSource),\n      displayExpr: getDisplayExpr(resource),\n      valueExpr: getValueExpr(resource)\n    },\n    dataField: dataField,\n    editorType: resource.allowMultiple ? \"dxTagBox\" : \"dxSelectBox\",\n    label: {\n      text: resource.label || dataField\n    }\n  };\n});\nexport var isResourceMultiple = (resources, resourceField) => {\n  var resource = resources.find(resource => {\n    var field = getFieldExpr(resource);\n    return field === resourceField;\n  });\n  return !!(null === resource || void 0 === resource ? void 0 : resource.allowMultiple);\n};\nexport var filterResources = (resources, fields) => resources.filter(resource => {\n  var field = getFieldExpr(resource);\n  return fields.indexOf(field) > -1;\n});\nexport var getPaintedResources = (resources, groups) => {\n  var newGroups = groups || [];\n  var result = resources.find(resource => resource.useColorAsDefault);\n  if (result) {\n    return result;\n  }\n  var newResources = newGroups.length ? filterResources(resources, newGroups) : resources;\n  return newResources[newResources.length - 1];\n};\nexport var getOrLoadResourceItem = (resources, resourceLoaderMap, field, value) => {\n  var result = new Deferred();\n  resources.filter(resource => getFieldExpr(resource) === field && isDefined(resource.dataSource)).forEach(resource => {\n    var wrappedDataSource = getWrappedDataSource(resource.dataSource);\n    var valueExpr = getValueExpr(resource);\n    if (!resourceLoaderMap.has(field)) {\n      resourceLoaderMap.set(field, wrappedDataSource.load());\n    }\n    resourceLoaderMap.get(field).done(data => {\n      var getter = compileGetter(valueExpr);\n      var filteredData = data.filter(resource => equalByValue(getter(resource), value));\n      result.resolve(filteredData[0]);\n    }).fail(() => {\n      resourceLoaderMap.delete(field);\n      result.reject();\n    });\n  });\n  return result.promise();\n};\nexport var getDataAccessors = (dataAccessors, fieldName, type) => {\n  var actions = dataAccessors[type];\n  return actions[fieldName];\n};\nexport var groupAppointmentsByResources = function (config, appointments) {\n  var groups = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [];\n  var result = {\n    0: appointments\n  };\n  if (groups.length && config.loadedResources.length) {\n    result = groupAppointmentsByResourcesCore(config, appointments, config.loadedResources);\n  }\n  var totalResourceCount = 0;\n  config.loadedResources.forEach((resource, index) => {\n    if (!index) {\n      totalResourceCount = resource.items.length;\n    } else {\n      totalResourceCount *= resource.items.length;\n    }\n  });\n  for (var index = 0; index < totalResourceCount; index++) {\n    var key = index.toString();\n    if (result[key]) {\n      continue;\n    }\n    result[key] = [];\n  }\n  return result;\n};\nexport var groupAppointmentsByResourcesCore = (config, appointments, resources) => {\n  var tree = createResourcesTree(resources);\n  var result = {};\n  appointments.forEach(appointment => {\n    var treeLeaves = getResourceTreeLeaves((field, action) => getDataAccessors(config.dataAccessors, field, action), tree, appointment);\n    for (var i = 0; i < treeLeaves.length; i++) {\n      if (!result[treeLeaves[i]]) {\n        result[treeLeaves[i]] = [];\n      }\n      result[treeLeaves[i]].push(deepExtendArraySafe({}, appointment, true));\n    }\n  });\n  return result;\n};\nexport var getResourceTreeLeaves = (getDataAccessors, tree, rawAppointment, result) => {\n  result = result || [];\n  for (var i = 0; i < tree.length; i++) {\n    if (!hasGroupItem(getDataAccessors, rawAppointment, tree[i].name, tree[i].value)) {\n      continue;\n    }\n    if (isDefined(tree[i].leafIndex)) {\n      result.push(tree[i].leafIndex);\n    }\n    if (tree[i].children) {\n      getResourceTreeLeaves(getDataAccessors, tree[i].children, rawAppointment, result);\n    }\n  }\n  return result;\n};\nvar hasGroupItem = (getDataAccessors, rawAppointment, groupName, itemValue) => {\n  var resourceValue = getDataAccessors(groupName, \"getter\")(rawAppointment);\n  return hasResourceValue(wrapToArray(resourceValue), itemValue);\n};\nexport var createReducedResourcesTree = (loadedResources, getDataAccessors, appointments) => {\n  var tree = createResourcesTree(loadedResources);\n  return reduceResourcesTree(getDataAccessors, tree, appointments);\n};\nexport var reduceResourcesTree = (getDataAccessors, tree, existingAppointments, _result) => {\n  _result = _result ? _result.children : [];\n  tree.forEach((node, index) => {\n    var ok = false;\n    var resourceName = node.name;\n    var resourceValue = node.value;\n    var resourceTitle = node.title;\n    var resourceData = node.data;\n    var resourceGetter = getDataAccessors(resourceName, \"getter\");\n    existingAppointments.forEach(appointment => {\n      if (!ok) {\n        var resourceFromAppointment = resourceGetter(appointment);\n        if (Array.isArray(resourceFromAppointment)) {\n          if (resourceFromAppointment.includes(resourceValue)) {\n            _result.push({\n              name: resourceName,\n              value: resourceValue,\n              title: resourceTitle,\n              data: resourceData,\n              children: []\n            });\n            ok = true;\n          }\n        } else if (resourceFromAppointment === resourceValue) {\n          _result.push({\n            name: resourceName,\n            value: resourceValue,\n            title: resourceTitle,\n            data: resourceData,\n            children: []\n          });\n          ok = true;\n        }\n      }\n    });\n    if (ok && node.children && node.children.length) {\n      reduceResourcesTree(getDataAccessors, node.children, existingAppointments, _result[index]);\n    }\n  });\n  return _result;\n};\nexport var getResourcesDataByGroups = (loadedResources, resources, groups) => {\n  if (!groups || !groups.length) {\n    return loadedResources;\n  }\n  var fieldNames = {};\n  var currentResourcesData = [];\n  groups.forEach(group => {\n    each(group, (name, value) => {\n      fieldNames[name] = value;\n    });\n  });\n  var resourceData = loadedResources.filter(_ref2 => {\n    var {\n      name: name\n    } = _ref2;\n    return isDefined(fieldNames[name]);\n  });\n  resourceData.forEach(data => currentResourcesData.push(extend({}, data)));\n  currentResourcesData.forEach(currentResource => {\n    var {\n      items: items,\n      data: data,\n      name: resourceName\n    } = currentResource;\n    var resource = filterResources(resources, [resourceName])[0] || {};\n    var valueExpr = getValueExpr(resource);\n    var filteredItems = [];\n    var filteredData = [];\n    groups.filter(group => isDefined(group[resourceName])).forEach(group => {\n      each(group, (name, value) => {\n        if (!filteredItems.filter(item => item.id === value && item[valueExpr] === name).length) {\n          var currentItems = items.filter(item => item.id === value);\n          var currentData = data.filter(item => item[valueExpr] === value);\n          filteredItems.push(...currentItems);\n          filteredData.push(...currentData);\n        }\n      });\n    });\n    currentResource.items = filteredItems;\n    currentResource.data = filteredData;\n  });\n  return currentResourcesData;\n};\nexport var setResourceToAppointment = (resources, dataAccessors, appointment, groups) => {\n  var resourcesSetter = dataAccessors.setter;\n  for (var name in groups) {\n    var resourceData = groups[name];\n    var value = isResourceMultiple(resources, name) ? wrapToArray(resourceData) : resourceData;\n    resourcesSetter[name](appointment, value);\n  }\n};\nexport var getResourceColor = (resources, resourceLoaderMap, field, value) => {\n  var result = new Deferred();\n  var resource = filterResources(resources, [field])[0] || {};\n  var colorExpr = resource.colorExpr || \"color\";\n  var colorGetter = compileGetter(colorExpr);\n  getOrLoadResourceItem(resources, resourceLoaderMap, field, value).done(resource => result.resolve(colorGetter(resource))).fail(() => result.reject());\n  return result.promise();\n};\nexport var getAppointmentColor = (resourceConfig, appointmentConfig) => {\n  var {\n    resources: resources,\n    dataAccessors: dataAccessors,\n    loadedResources: loadedResources,\n    resourceLoaderMap: resourceLoaderMap\n  } = resourceConfig;\n  var {\n    groupIndex: groupIndex,\n    groups: groups,\n    itemData: itemData\n  } = appointmentConfig;\n  var paintedResources = getPaintedResources(resources || [], groups);\n  if (paintedResources) {\n    var field = getFieldExpr(paintedResources);\n    var cellGroups = getCellGroups(groupIndex, loadedResources);\n    var resourcesDataAccessors = getDataAccessors(dataAccessors, field, \"getter\");\n    var resourceValues = wrapToArray(resourcesDataAccessors(itemData));\n    var groupId = resourceValues[0];\n    for (var i = 0; i < cellGroups.length; i++) {\n      if (cellGroups[i].name === field) {\n        groupId = cellGroups[i].id;\n        break;\n      }\n    }\n    return getResourceColor(resources, resourceLoaderMap, field, groupId);\n  }\n  return new Deferred().resolve().promise();\n};\nexport var createExpressions = function () {\n  var resources = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];\n  var result = {\n    getter: {},\n    setter: {}\n  };\n  resources.forEach(resource => {\n    var field = getFieldExpr(resource);\n    result.getter[field] = compileGetter(field);\n    result.setter[field] = compileSetter(field);\n  });\n  return result;\n};\nvar getTransformedResourceData = (resource, data) => {\n  var valueGetter = compileGetter(getValueExpr(resource));\n  var displayGetter = compileGetter(getDisplayExpr(resource));\n  return data.map(item => {\n    var result = {\n      id: valueGetter(item),\n      text: displayGetter(item)\n    };\n    if (item.color) {\n      result.color = item.color;\n    }\n    return result;\n  });\n};\nexport var loadResources = (groups, resources, resourceLoaderMap) => {\n  var result = new Deferred();\n  var deferreds = [];\n  var newGroups = groups || [];\n  var newResources = resources || [];\n  var loadedResources = [];\n  filterResources(newResources, newGroups).forEach(resource => {\n    var deferred = new Deferred();\n    var name = getFieldExpr(resource);\n    deferreds.push(deferred);\n    var dataSourcePromise = getWrappedDataSource(resource.dataSource).load();\n    resourceLoaderMap.set(name, dataSourcePromise);\n    dataSourcePromise.done(data => {\n      var items = getTransformedResourceData(resource, data);\n      deferred.resolve({\n        name: name,\n        items: items,\n        data: data\n      });\n    }).fail(() => deferred.reject());\n  });\n  if (!deferreds.length) {\n    return result.resolve(loadedResources);\n  }\n  when.apply(null, deferreds).done(function () {\n    for (var _len = arguments.length, resources = new Array(_len), _key = 0; _key < _len; _key++) {\n      resources[_key] = arguments[_key];\n    }\n    var hasEmpty = resources.some(r => 0 === r.items.length);\n    loadedResources = hasEmpty ? [] : resources;\n    result.resolve(loadedResources);\n  }).fail(() => result.reject());\n  return result.promise();\n};\nexport var getNormalizedResources = (rawAppointment, dataAccessors, resources) => {\n  var result = {};\n  each(dataAccessors.resources.getter, fieldName => {\n    var value = dataAccessors.resources.getter[fieldName](rawAppointment);\n    if (isDefined(value)) {\n      var isMultiple = isResourceMultiple(resources, fieldName);\n      var resourceValue = isMultiple ? wrapToArray(value) : value;\n      result[fieldName] = resourceValue;\n    }\n  });\n  return result;\n};","map":{"version":3,"names":["_extends","wrapToArray","equalByValue","compileGetter","compileSetter","Deferred","when","extend","each","deepExtendArraySafe","isDefined","DataSource","normalizeDataSourceOptions","hasResourceValue","getValueExpr","resource","valueExpr","getDisplayExpr","displayExpr","getFieldExpr","fieldExpr","field","getWrappedDataSource","dataSource","result","pageSize","Array","isArray","filter","createResourcesTree","groups","leafIndex","make","group","groupIndex","parent","_a","itemIndex","items","length","currentGroupItem","resultItem","name","value","id","title","text","data","children","nextGroupIndex","push","getPathToLeaf","tree","findLeafByIndex","index","i","_leaf","makeBranch","leaf","reverse","getCellGroups","getGroupCount","path","len","getGroupsObjectFromGroupsArray","groupsArray","reduce","currentGroups","_ref","getAllGroups","groupCount","map","_","getResourceByField","fieldName","loadedResources","createResourceEditorModel","resources","dataField","editorOptions","editorType","allowMultiple","label","isResourceMultiple","resourceField","find","filterResources","fields","indexOf","getPaintedResources","newGroups","useColorAsDefault","newResources","getOrLoadResourceItem","resourceLoaderMap","forEach","wrappedDataSource","has","set","load","get","done","getter","filteredData","resolve","fail","delete","reject","promise","getDataAccessors","dataAccessors","type","actions","groupAppointmentsByResources","config","appointments","arguments","groupAppointmentsByResourcesCore","totalResourceCount","key","toString","appointment","treeLeaves","getResourceTreeLeaves","action","rawAppointment","hasGroupItem","groupName","itemValue","resourceValue","createReducedResourcesTree","reduceResourcesTree","existingAppointments","_result","node","ok","resourceName","resourceTitle","resourceData","resourceGetter","resourceFromAppointment","includes","getResourcesDataByGroups","fieldNames","currentResourcesData","_ref2","currentResource","filteredItems","item","currentItems","currentData","setResourceToAppointment","resourcesSetter","setter","getResourceColor","colorExpr","colorGetter","getAppointmentColor","resourceConfig","appointmentConfig","itemData","paintedResources","cellGroups","resourcesDataAccessors","resourceValues","groupId","createExpressions","getTransformedResourceData","valueGetter","displayGetter","color","loadResources","deferreds","deferred","dataSourcePromise","apply","_len","_key","hasEmpty","some","r","getNormalizedResources","isMultiple"],"sources":["C:/Users/Michal Abargel/Desktop/FULLSTACK_PROJECTS/PrivateLessones/F(x)/client/gui/node_modules/devextreme/esm/__internal/scheduler/resources/m_utils.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/scheduler/resources/m_utils.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport {\r\n    wrapToArray\r\n} from \"../../../core/utils/array\";\r\nimport {\r\n    equalByValue\r\n} from \"../../../core/utils/common\";\r\nimport {\r\n    compileGetter,\r\n    compileSetter\r\n} from \"../../../core/utils/data\";\r\nimport {\r\n    Deferred,\r\n    when\r\n} from \"../../../core/utils/deferred\";\r\nimport {\r\n    extend\r\n} from \"../../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../../core/utils/iterator\";\r\nimport {\r\n    deepExtendArraySafe\r\n} from \"../../../core/utils/object\";\r\nimport {\r\n    isDefined\r\n} from \"../../../core/utils/type\";\r\nimport {\r\n    DataSource\r\n} from \"../../../data/data_source/data_source\";\r\nimport {\r\n    normalizeDataSourceOptions\r\n} from \"../../../data/data_source/utils\";\r\nimport {\r\n    hasResourceValue\r\n} from \"../../../renovation/ui/scheduler/resources/hasResourceValue\";\r\nexport var getValueExpr = resource => resource.valueExpr || \"id\";\r\nexport var getDisplayExpr = resource => resource.displayExpr || \"text\";\r\nexport var getFieldExpr = resource => resource.fieldExpr || resource.field;\r\nexport var getWrappedDataSource = dataSource => {\r\n    if (dataSource instanceof DataSource) {\r\n        return dataSource\r\n    }\r\n    var result = _extends(_extends({}, normalizeDataSourceOptions(dataSource)), {\r\n        pageSize: 0\r\n    });\r\n    if (!Array.isArray(dataSource)) {\r\n        result.filter = dataSource.filter\r\n    }\r\n    return new DataSource(result)\r\n};\r\nexport var createResourcesTree = groups => {\r\n    var leafIndex = 0;\r\n    var make = (group, groupIndex, result, parent) => {\r\n        var _a;\r\n        result = result || [];\r\n        for (var itemIndex = 0; itemIndex < group.items.length; itemIndex++) {\r\n            var currentGroupItem = group.items[itemIndex];\r\n            var resultItem = {\r\n                name: group.name,\r\n                value: currentGroupItem.id,\r\n                title: currentGroupItem.text,\r\n                data: null === (_a = group.data) || void 0 === _a ? void 0 : _a[itemIndex],\r\n                children: [],\r\n                parent: parent || null\r\n            };\r\n            var nextGroupIndex = groupIndex + 1;\r\n            if (groups[nextGroupIndex]) {\r\n                make(groups[nextGroupIndex], nextGroupIndex, resultItem.children, resultItem)\r\n            }\r\n            if (!resultItem.children.length) {\r\n                resultItem.leafIndex = leafIndex;\r\n                leafIndex++\r\n            }\r\n            result.push(resultItem)\r\n        }\r\n        return result\r\n    };\r\n    return make(groups[0], 0)\r\n};\r\nexport var getPathToLeaf = (leafIndex, groups) => {\r\n    var tree = createResourcesTree(groups);\r\n    var findLeafByIndex = (data, index) => {\r\n        for (var i = 0; i < data.length; i++) {\r\n            if (data[i].leafIndex === index) {\r\n                return data[i]\r\n            }\r\n            var _leaf = findLeafByIndex(data[i].children, index);\r\n            if (_leaf) {\r\n                return _leaf\r\n            }\r\n        }\r\n    };\r\n    var makeBranch = (leaf, result) => {\r\n        result = result || [];\r\n        result.push(leaf.value);\r\n        if (leaf.parent) {\r\n            makeBranch(leaf.parent, result)\r\n        }\r\n        return result\r\n    };\r\n    var leaf = findLeafByIndex(tree, leafIndex);\r\n    return makeBranch(leaf).reverse()\r\n};\r\nexport var getCellGroups = (groupIndex, groups) => {\r\n    var result = [];\r\n    if (getGroupCount(groups)) {\r\n        if (groupIndex < 0) {\r\n            return\r\n        }\r\n        var path = getPathToLeaf(groupIndex, groups);\r\n        for (var i = 0; i < groups.length; i++) {\r\n            result.push({\r\n                name: groups[i].name,\r\n                id: path[i]\r\n            })\r\n        }\r\n    }\r\n    return result\r\n};\r\nexport var getGroupCount = groups => {\r\n    var result = 0;\r\n    for (var i = 0, len = groups.length; i < len; i++) {\r\n        if (!i) {\r\n            result = groups[i].items.length\r\n        } else {\r\n            result *= groups[i].items.length\r\n        }\r\n    }\r\n    return result\r\n};\r\nexport var getGroupsObjectFromGroupsArray = groupsArray => groupsArray.reduce((currentGroups, _ref) => {\r\n    var {\r\n        name: name,\r\n        id: id\r\n    } = _ref;\r\n    return _extends(_extends({}, currentGroups), {\r\n        [name]: id\r\n    })\r\n}, {});\r\nexport var getAllGroups = groups => {\r\n    var groupCount = getGroupCount(groups);\r\n    return [...new Array(groupCount)].map((_, groupIndex) => {\r\n        var groupsArray = getCellGroups(groupIndex, groups);\r\n        return getGroupsObjectFromGroupsArray(groupsArray)\r\n    })\r\n};\r\nexport var getResourceByField = (fieldName, loadedResources) => {\r\n    for (var i = 0; i < loadedResources.length; i++) {\r\n        var resource = loadedResources[i];\r\n        if (resource.name === fieldName) {\r\n            return resource.data\r\n        }\r\n    }\r\n    return []\r\n};\r\nexport var createResourceEditorModel = (resources, loadedResources) => resources.map(resource => {\r\n    var dataField = getFieldExpr(resource);\r\n    var dataSource = getResourceByField(dataField, loadedResources);\r\n    return {\r\n        editorOptions: {\r\n            dataSource: dataSource.length ? dataSource : getWrappedDataSource(resource.dataSource),\r\n            displayExpr: getDisplayExpr(resource),\r\n            valueExpr: getValueExpr(resource)\r\n        },\r\n        dataField: dataField,\r\n        editorType: resource.allowMultiple ? \"dxTagBox\" : \"dxSelectBox\",\r\n        label: {\r\n            text: resource.label || dataField\r\n        }\r\n    }\r\n});\r\nexport var isResourceMultiple = (resources, resourceField) => {\r\n    var resource = resources.find(resource => {\r\n        var field = getFieldExpr(resource);\r\n        return field === resourceField\r\n    });\r\n    return !!(null === resource || void 0 === resource ? void 0 : resource.allowMultiple)\r\n};\r\nexport var filterResources = (resources, fields) => resources.filter(resource => {\r\n    var field = getFieldExpr(resource);\r\n    return fields.indexOf(field) > -1\r\n});\r\nexport var getPaintedResources = (resources, groups) => {\r\n    var newGroups = groups || [];\r\n    var result = resources.find(resource => resource.useColorAsDefault);\r\n    if (result) {\r\n        return result\r\n    }\r\n    var newResources = newGroups.length ? filterResources(resources, newGroups) : resources;\r\n    return newResources[newResources.length - 1]\r\n};\r\nexport var getOrLoadResourceItem = (resources, resourceLoaderMap, field, value) => {\r\n    var result = new Deferred;\r\n    resources.filter(resource => getFieldExpr(resource) === field && isDefined(resource.dataSource)).forEach(resource => {\r\n        var wrappedDataSource = getWrappedDataSource(resource.dataSource);\r\n        var valueExpr = getValueExpr(resource);\r\n        if (!resourceLoaderMap.has(field)) {\r\n            resourceLoaderMap.set(field, wrappedDataSource.load())\r\n        }\r\n        resourceLoaderMap.get(field).done(data => {\r\n            var getter = compileGetter(valueExpr);\r\n            var filteredData = data.filter(resource => equalByValue(getter(resource), value));\r\n            result.resolve(filteredData[0])\r\n        }).fail(() => {\r\n            resourceLoaderMap.delete(field);\r\n            result.reject()\r\n        })\r\n    });\r\n    return result.promise()\r\n};\r\nexport var getDataAccessors = (dataAccessors, fieldName, type) => {\r\n    var actions = dataAccessors[type];\r\n    return actions[fieldName]\r\n};\r\nexport var groupAppointmentsByResources = function(config, appointments) {\r\n    var groups = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [];\r\n    var result = {\r\n        0: appointments\r\n    };\r\n    if (groups.length && config.loadedResources.length) {\r\n        result = groupAppointmentsByResourcesCore(config, appointments, config.loadedResources)\r\n    }\r\n    var totalResourceCount = 0;\r\n    config.loadedResources.forEach((resource, index) => {\r\n        if (!index) {\r\n            totalResourceCount = resource.items.length\r\n        } else {\r\n            totalResourceCount *= resource.items.length\r\n        }\r\n    });\r\n    for (var index = 0; index < totalResourceCount; index++) {\r\n        var key = index.toString();\r\n        if (result[key]) {\r\n            continue\r\n        }\r\n        result[key] = []\r\n    }\r\n    return result\r\n};\r\nexport var groupAppointmentsByResourcesCore = (config, appointments, resources) => {\r\n    var tree = createResourcesTree(resources);\r\n    var result = {};\r\n    appointments.forEach(appointment => {\r\n        var treeLeaves = getResourceTreeLeaves((field, action) => getDataAccessors(config.dataAccessors, field, action), tree, appointment);\r\n        for (var i = 0; i < treeLeaves.length; i++) {\r\n            if (!result[treeLeaves[i]]) {\r\n                result[treeLeaves[i]] = []\r\n            }\r\n            result[treeLeaves[i]].push(deepExtendArraySafe({}, appointment, true))\r\n        }\r\n    });\r\n    return result\r\n};\r\nexport var getResourceTreeLeaves = (getDataAccessors, tree, rawAppointment, result) => {\r\n    result = result || [];\r\n    for (var i = 0; i < tree.length; i++) {\r\n        if (!hasGroupItem(getDataAccessors, rawAppointment, tree[i].name, tree[i].value)) {\r\n            continue\r\n        }\r\n        if (isDefined(tree[i].leafIndex)) {\r\n            result.push(tree[i].leafIndex)\r\n        }\r\n        if (tree[i].children) {\r\n            getResourceTreeLeaves(getDataAccessors, tree[i].children, rawAppointment, result)\r\n        }\r\n    }\r\n    return result\r\n};\r\nvar hasGroupItem = (getDataAccessors, rawAppointment, groupName, itemValue) => {\r\n    var resourceValue = getDataAccessors(groupName, \"getter\")(rawAppointment);\r\n    return hasResourceValue(wrapToArray(resourceValue), itemValue)\r\n};\r\nexport var createReducedResourcesTree = (loadedResources, getDataAccessors, appointments) => {\r\n    var tree = createResourcesTree(loadedResources);\r\n    return reduceResourcesTree(getDataAccessors, tree, appointments)\r\n};\r\nexport var reduceResourcesTree = (getDataAccessors, tree, existingAppointments, _result) => {\r\n    _result = _result ? _result.children : [];\r\n    tree.forEach((node, index) => {\r\n        var ok = false;\r\n        var resourceName = node.name;\r\n        var resourceValue = node.value;\r\n        var resourceTitle = node.title;\r\n        var resourceData = node.data;\r\n        var resourceGetter = getDataAccessors(resourceName, \"getter\");\r\n        existingAppointments.forEach(appointment => {\r\n            if (!ok) {\r\n                var resourceFromAppointment = resourceGetter(appointment);\r\n                if (Array.isArray(resourceFromAppointment)) {\r\n                    if (resourceFromAppointment.includes(resourceValue)) {\r\n                        _result.push({\r\n                            name: resourceName,\r\n                            value: resourceValue,\r\n                            title: resourceTitle,\r\n                            data: resourceData,\r\n                            children: []\r\n                        });\r\n                        ok = true\r\n                    }\r\n                } else if (resourceFromAppointment === resourceValue) {\r\n                    _result.push({\r\n                        name: resourceName,\r\n                        value: resourceValue,\r\n                        title: resourceTitle,\r\n                        data: resourceData,\r\n                        children: []\r\n                    });\r\n                    ok = true\r\n                }\r\n            }\r\n        });\r\n        if (ok && node.children && node.children.length) {\r\n            reduceResourcesTree(getDataAccessors, node.children, existingAppointments, _result[index])\r\n        }\r\n    });\r\n    return _result\r\n};\r\nexport var getResourcesDataByGroups = (loadedResources, resources, groups) => {\r\n    if (!groups || !groups.length) {\r\n        return loadedResources\r\n    }\r\n    var fieldNames = {};\r\n    var currentResourcesData = [];\r\n    groups.forEach(group => {\r\n        each(group, (name, value) => {\r\n            fieldNames[name] = value\r\n        })\r\n    });\r\n    var resourceData = loadedResources.filter(_ref2 => {\r\n        var {\r\n            name: name\r\n        } = _ref2;\r\n        return isDefined(fieldNames[name])\r\n    });\r\n    resourceData.forEach(data => currentResourcesData.push(extend({}, data)));\r\n    currentResourcesData.forEach(currentResource => {\r\n        var {\r\n            items: items,\r\n            data: data,\r\n            name: resourceName\r\n        } = currentResource;\r\n        var resource = filterResources(resources, [resourceName])[0] || {};\r\n        var valueExpr = getValueExpr(resource);\r\n        var filteredItems = [];\r\n        var filteredData = [];\r\n        groups.filter(group => isDefined(group[resourceName])).forEach(group => {\r\n            each(group, (name, value) => {\r\n                if (!filteredItems.filter(item => item.id === value && item[valueExpr] === name).length) {\r\n                    var currentItems = items.filter(item => item.id === value);\r\n                    var currentData = data.filter(item => item[valueExpr] === value);\r\n                    filteredItems.push(...currentItems);\r\n                    filteredData.push(...currentData)\r\n                }\r\n            })\r\n        });\r\n        currentResource.items = filteredItems;\r\n        currentResource.data = filteredData\r\n    });\r\n    return currentResourcesData\r\n};\r\nexport var setResourceToAppointment = (resources, dataAccessors, appointment, groups) => {\r\n    var resourcesSetter = dataAccessors.setter;\r\n    for (var name in groups) {\r\n        var resourceData = groups[name];\r\n        var value = isResourceMultiple(resources, name) ? wrapToArray(resourceData) : resourceData;\r\n        resourcesSetter[name](appointment, value)\r\n    }\r\n};\r\nexport var getResourceColor = (resources, resourceLoaderMap, field, value) => {\r\n    var result = new Deferred;\r\n    var resource = filterResources(resources, [field])[0] || {};\r\n    var colorExpr = resource.colorExpr || \"color\";\r\n    var colorGetter = compileGetter(colorExpr);\r\n    getOrLoadResourceItem(resources, resourceLoaderMap, field, value).done(resource => result.resolve(colorGetter(resource))).fail(() => result.reject());\r\n    return result.promise()\r\n};\r\nexport var getAppointmentColor = (resourceConfig, appointmentConfig) => {\r\n    var {\r\n        resources: resources,\r\n        dataAccessors: dataAccessors,\r\n        loadedResources: loadedResources,\r\n        resourceLoaderMap: resourceLoaderMap\r\n    } = resourceConfig;\r\n    var {\r\n        groupIndex: groupIndex,\r\n        groups: groups,\r\n        itemData: itemData\r\n    } = appointmentConfig;\r\n    var paintedResources = getPaintedResources(resources || [], groups);\r\n    if (paintedResources) {\r\n        var field = getFieldExpr(paintedResources);\r\n        var cellGroups = getCellGroups(groupIndex, loadedResources);\r\n        var resourcesDataAccessors = getDataAccessors(dataAccessors, field, \"getter\");\r\n        var resourceValues = wrapToArray(resourcesDataAccessors(itemData));\r\n        var groupId = resourceValues[0];\r\n        for (var i = 0; i < cellGroups.length; i++) {\r\n            if (cellGroups[i].name === field) {\r\n                groupId = cellGroups[i].id;\r\n                break\r\n            }\r\n        }\r\n        return getResourceColor(resources, resourceLoaderMap, field, groupId)\r\n    }\r\n    return (new Deferred).resolve().promise()\r\n};\r\nexport var createExpressions = function() {\r\n    var resources = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];\r\n    var result = {\r\n        getter: {},\r\n        setter: {}\r\n    };\r\n    resources.forEach(resource => {\r\n        var field = getFieldExpr(resource);\r\n        result.getter[field] = compileGetter(field);\r\n        result.setter[field] = compileSetter(field)\r\n    });\r\n    return result\r\n};\r\nvar getTransformedResourceData = (resource, data) => {\r\n    var valueGetter = compileGetter(getValueExpr(resource));\r\n    var displayGetter = compileGetter(getDisplayExpr(resource));\r\n    return data.map(item => {\r\n        var result = {\r\n            id: valueGetter(item),\r\n            text: displayGetter(item)\r\n        };\r\n        if (item.color) {\r\n            result.color = item.color\r\n        }\r\n        return result\r\n    })\r\n};\r\nexport var loadResources = (groups, resources, resourceLoaderMap) => {\r\n    var result = new Deferred;\r\n    var deferreds = [];\r\n    var newGroups = groups || [];\r\n    var newResources = resources || [];\r\n    var loadedResources = [];\r\n    filterResources(newResources, newGroups).forEach(resource => {\r\n        var deferred = new Deferred;\r\n        var name = getFieldExpr(resource);\r\n        deferreds.push(deferred);\r\n        var dataSourcePromise = getWrappedDataSource(resource.dataSource).load();\r\n        resourceLoaderMap.set(name, dataSourcePromise);\r\n        dataSourcePromise.done(data => {\r\n            var items = getTransformedResourceData(resource, data);\r\n            deferred.resolve({\r\n                name: name,\r\n                items: items,\r\n                data: data\r\n            })\r\n        }).fail(() => deferred.reject())\r\n    });\r\n    if (!deferreds.length) {\r\n        return result.resolve(loadedResources)\r\n    }\r\n    when.apply(null, deferreds).done((function() {\r\n        for (var _len = arguments.length, resources = new Array(_len), _key = 0; _key < _len; _key++) {\r\n            resources[_key] = arguments[_key]\r\n        }\r\n        var hasEmpty = resources.some(r => 0 === r.items.length);\r\n        loadedResources = hasEmpty ? [] : resources;\r\n        result.resolve(loadedResources)\r\n    })).fail(() => result.reject());\r\n    return result.promise()\r\n};\r\nexport var getNormalizedResources = (rawAppointment, dataAccessors, resources) => {\r\n    var result = {};\r\n    each(dataAccessors.resources.getter, fieldName => {\r\n        var value = dataAccessors.resources.getter[fieldName](rawAppointment);\r\n        if (isDefined(value)) {\r\n            var isMultiple = isResourceMultiple(resources, fieldName);\r\n            var resourceValue = isMultiple ? wrapToArray(value) : value;\r\n            result[fieldName] = resourceValue\r\n        }\r\n    });\r\n    return result\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}