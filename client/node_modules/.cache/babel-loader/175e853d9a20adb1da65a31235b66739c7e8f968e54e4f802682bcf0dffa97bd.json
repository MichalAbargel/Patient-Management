{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/scheduler/utils/recurrence/excludeFromRecurrence.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createAppointmentAdapter } from \"../../../../../ui/scheduler/appointmentAdapter\";\nimport dateSerialization from \"../../../../../core/utils/date_serialization\";\nvar FULL_DATE_FORMAT = \"yyyyMMddTHHmmss\";\nvar UTC_FULL_DATE_FORMAT = \"\".concat(FULL_DATE_FORMAT, \"Z\");\nvar getSerializedDate = (date, startDate, isAllDay) => {\n  if (isAllDay) {\n    date.setHours(startDate.getHours(), startDate.getMinutes(), startDate.getSeconds(), startDate.getMilliseconds());\n  }\n  return dateSerialization.serializeDate(date, UTC_FULL_DATE_FORMAT);\n};\nvar createRecurrenceException = (appointmentAdapter, exceptionDate) => {\n  var result = [];\n  if (appointmentAdapter.recurrenceException) {\n    result.push(appointmentAdapter.recurrenceException);\n  }\n  result.push(getSerializedDate(exceptionDate, appointmentAdapter.startDate, appointmentAdapter.allDay));\n  return result.join();\n};\nexport var excludeFromRecurrence = (appointment, exceptionDate, dataAccessors, timeZoneCalculator) => {\n  var appointmentAdapter = createAppointmentAdapter(_extends({}, appointment), dataAccessors, timeZoneCalculator);\n  appointmentAdapter.recurrenceException = createRecurrenceException(appointmentAdapter, exceptionDate);\n  return appointmentAdapter;\n};","map":{"version":3,"names":["_extends","createAppointmentAdapter","dateSerialization","FULL_DATE_FORMAT","UTC_FULL_DATE_FORMAT","concat","getSerializedDate","date","startDate","isAllDay","setHours","getHours","getMinutes","getSeconds","getMilliseconds","serializeDate","createRecurrenceException","appointmentAdapter","exceptionDate","result","recurrenceException","push","allDay","join","excludeFromRecurrence","appointment","dataAccessors","timeZoneCalculator"],"sources":["C:/Users/Michal Abargel/Desktop/FULLSTACK_PROJECTS/PrivateLessones/F(x)/client/gui/node_modules/devextreme/esm/renovation/ui/scheduler/utils/recurrence/excludeFromRecurrence.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/scheduler/utils/recurrence/excludeFromRecurrence.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport {\r\n    createAppointmentAdapter\r\n} from \"../../../../../ui/scheduler/appointmentAdapter\";\r\nimport dateSerialization from \"../../../../../core/utils/date_serialization\";\r\nvar FULL_DATE_FORMAT = \"yyyyMMddTHHmmss\";\r\nvar UTC_FULL_DATE_FORMAT = \"\".concat(FULL_DATE_FORMAT, \"Z\");\r\nvar getSerializedDate = (date, startDate, isAllDay) => {\r\n    if (isAllDay) {\r\n        date.setHours(startDate.getHours(), startDate.getMinutes(), startDate.getSeconds(), startDate.getMilliseconds())\r\n    }\r\n    return dateSerialization.serializeDate(date, UTC_FULL_DATE_FORMAT)\r\n};\r\nvar createRecurrenceException = (appointmentAdapter, exceptionDate) => {\r\n    var result = [];\r\n    if (appointmentAdapter.recurrenceException) {\r\n        result.push(appointmentAdapter.recurrenceException)\r\n    }\r\n    result.push(getSerializedDate(exceptionDate, appointmentAdapter.startDate, appointmentAdapter.allDay));\r\n    return result.join()\r\n};\r\nexport var excludeFromRecurrence = (appointment, exceptionDate, dataAccessors, timeZoneCalculator) => {\r\n    var appointmentAdapter = createAppointmentAdapter(_extends({}, appointment), dataAccessors, timeZoneCalculator);\r\n    appointmentAdapter.recurrenceException = createRecurrenceException(appointmentAdapter, exceptionDate);\r\n    return appointmentAdapter\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,SACIC,wBAAwB,QACrB,gDAAgD;AACvD,OAAOC,iBAAiB,MAAM,8CAA8C;AAC5E,IAAIC,gBAAgB,GAAG,iBAAiB;AACxC,IAAIC,oBAAoB,GAAG,EAAE,CAACC,MAAM,CAACF,gBAAgB,EAAE,GAAG,CAAC;AAC3D,IAAIG,iBAAiB,GAAGA,CAACC,IAAI,EAAEC,SAAS,EAAEC,QAAQ,KAAK;EACnD,IAAIA,QAAQ,EAAE;IACVF,IAAI,CAACG,QAAQ,CAACF,SAAS,CAACG,QAAQ,CAAC,CAAC,EAAEH,SAAS,CAACI,UAAU,CAAC,CAAC,EAAEJ,SAAS,CAACK,UAAU,CAAC,CAAC,EAAEL,SAAS,CAACM,eAAe,CAAC,CAAC,CAAC;EACpH;EACA,OAAOZ,iBAAiB,CAACa,aAAa,CAACR,IAAI,EAAEH,oBAAoB,CAAC;AACtE,CAAC;AACD,IAAIY,yBAAyB,GAAGA,CAACC,kBAAkB,EAAEC,aAAa,KAAK;EACnE,IAAIC,MAAM,GAAG,EAAE;EACf,IAAIF,kBAAkB,CAACG,mBAAmB,EAAE;IACxCD,MAAM,CAACE,IAAI,CAACJ,kBAAkB,CAACG,mBAAmB,CAAC;EACvD;EACAD,MAAM,CAACE,IAAI,CAACf,iBAAiB,CAACY,aAAa,EAAED,kBAAkB,CAACT,SAAS,EAAES,kBAAkB,CAACK,MAAM,CAAC,CAAC;EACtG,OAAOH,MAAM,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC;AACD,OAAO,IAAIC,qBAAqB,GAAGA,CAACC,WAAW,EAAEP,aAAa,EAAEQ,aAAa,EAAEC,kBAAkB,KAAK;EAClG,IAAIV,kBAAkB,GAAGhB,wBAAwB,CAACD,QAAQ,CAAC,CAAC,CAAC,EAAEyB,WAAW,CAAC,EAAEC,aAAa,EAAEC,kBAAkB,CAAC;EAC/GV,kBAAkB,CAACG,mBAAmB,GAAGJ,yBAAyB,CAACC,kBAAkB,EAAEC,aAAa,CAAC;EACrG,OAAOD,kBAAkB;AAC7B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}