{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/shaders/ui.scheduler.current_time_shader.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../../core/renderer\";\nvar DATE_TIME_SHADER_CLASS = \"dx-scheduler-date-time-shader\";\nclass CurrentTimeShader {\n  constructor(workSpace) {\n    this._workSpace = workSpace;\n    this._$container = this._workSpace._dateTableScrollable.$content();\n  }\n  render() {\n    this.initShaderElements();\n    this.renderShader();\n    this._shader.forEach((shader, index) => {\n      this._$container.append(shader);\n    });\n  }\n  initShaderElements() {\n    this._$shader = this.createShader();\n    this._shader = [];\n    this._shader.push(this._$shader);\n  }\n  renderShader() {}\n  createShader() {\n    return $(\"<div>\").addClass(DATE_TIME_SHADER_CLASS);\n  }\n  clean() {\n    this._$container && this._$container.find(\".\" + DATE_TIME_SHADER_CLASS).remove();\n  }\n}\nexport default CurrentTimeShader;","map":{"version":3,"names":["$","DATE_TIME_SHADER_CLASS","CurrentTimeShader","constructor","workSpace","_workSpace","_$container","_dateTableScrollable","$content","render","initShaderElements","renderShader","_shader","forEach","shader","index","append","_$shader","createShader","push","addClass","clean","find","remove"],"sources":["C:/Users/Michal Abargel/Desktop/FULLSTACK_PROJECTS/Patient-Management/client/node_modules/devextreme/esm/ui/scheduler/shaders/ui.scheduler.current_time_shader.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/shaders/ui.scheduler.current_time_shader.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../../core/renderer\";\r\nvar DATE_TIME_SHADER_CLASS = \"dx-scheduler-date-time-shader\";\r\nclass CurrentTimeShader {\r\n    constructor(workSpace) {\r\n        this._workSpace = workSpace;\r\n        this._$container = this._workSpace._dateTableScrollable.$content()\r\n    }\r\n    render() {\r\n        this.initShaderElements();\r\n        this.renderShader();\r\n        this._shader.forEach((shader, index) => {\r\n            this._$container.append(shader)\r\n        })\r\n    }\r\n    initShaderElements() {\r\n        this._$shader = this.createShader();\r\n        this._shader = [];\r\n        this._shader.push(this._$shader)\r\n    }\r\n    renderShader() {}\r\n    createShader() {\r\n        return $(\"<div>\").addClass(DATE_TIME_SHADER_CLASS)\r\n    }\r\n    clean() {\r\n        this._$container && this._$container.find(\".\" + DATE_TIME_SHADER_CLASS).remove()\r\n    }\r\n}\r\nexport default CurrentTimeShader;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,CAAC,MAAM,wBAAwB;AACtC,IAAIC,sBAAsB,GAAG,+BAA+B;AAC5D,MAAMC,iBAAiB,CAAC;EACpBC,WAAWA,CAACC,SAAS,EAAE;IACnB,IAAI,CAACC,UAAU,GAAGD,SAAS;IAC3B,IAAI,CAACE,WAAW,GAAG,IAAI,CAACD,UAAU,CAACE,oBAAoB,CAACC,QAAQ,CAAC,CAAC;EACtE;EACAC,MAAMA,CAAA,EAAG;IACL,IAAI,CAACC,kBAAkB,CAAC,CAAC;IACzB,IAAI,CAACC,YAAY,CAAC,CAAC;IACnB,IAAI,CAACC,OAAO,CAACC,OAAO,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAK;MACpC,IAAI,CAACT,WAAW,CAACU,MAAM,CAACF,MAAM,CAAC;IACnC,CAAC,CAAC;EACN;EACAJ,kBAAkBA,CAAA,EAAG;IACjB,IAAI,CAACO,QAAQ,GAAG,IAAI,CAACC,YAAY,CAAC,CAAC;IACnC,IAAI,CAACN,OAAO,GAAG,EAAE;IACjB,IAAI,CAACA,OAAO,CAACO,IAAI,CAAC,IAAI,CAACF,QAAQ,CAAC;EACpC;EACAN,YAAYA,CAAA,EAAG,CAAC;EAChBO,YAAYA,CAAA,EAAG;IACX,OAAOlB,CAAC,CAAC,OAAO,CAAC,CAACoB,QAAQ,CAACnB,sBAAsB,CAAC;EACtD;EACAoB,KAAKA,CAAA,EAAG;IACJ,IAAI,CAACf,WAAW,IAAI,IAAI,CAACA,WAAW,CAACgB,IAAI,CAAC,GAAG,GAAGrB,sBAAsB,CAAC,CAACsB,MAAM,CAAC,CAAC;EACpF;AACJ;AACA,eAAerB,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}