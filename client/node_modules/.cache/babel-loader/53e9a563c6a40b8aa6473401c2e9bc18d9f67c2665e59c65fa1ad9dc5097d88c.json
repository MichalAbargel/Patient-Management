{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/scheduler/appointments/rendering_strategies/m_strategy_agenda.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport dateUtils from \"../../../../core/utils/date\";\nimport { each } from \"../../../../core/utils/iterator\";\nimport { createAppointmentAdapter } from \"../../../../ui/scheduler/appointmentAdapter\";\nimport { ExpressionUtils } from \"../../../../ui/scheduler/expressionUtils\";\nimport { groupAppointmentsByResources } from \"../../resources/m_utils\";\nimport { getAppointmentTakesSeveralDays, replaceWrongEndDate } from \"../data_provider/m_utils\";\nimport BaseRenderingStrategy from \"./m_strategy_base\";\nclass AgendaRenderingStrategy extends BaseRenderingStrategy {\n  get instance() {\n    return this.options.instance;\n  }\n  get agendaDuration() {\n    return this.options.agendaDuration;\n  }\n  getAppointmentMinSize() {}\n  getDeltaTime() {}\n  keepAppointmentSettings() {\n    return true;\n  }\n  getAppointmentGeometry(geometry) {\n    return geometry;\n  }\n  groupAppointmentByResources(appointments) {\n    var groups = this.instance._getCurrentViewOption(\"groups\");\n    var config = {\n      loadedResources: this.options.loadedResources,\n      resources: this.options.resources,\n      dataAccessors: this.dataAccessors.resources\n    };\n    return groupAppointmentsByResources(config, appointments, groups);\n  }\n  createTaskPositionMap(appointments) {\n    var height;\n    var appointmentsByResources;\n    this.calculateRows(appointments, this.agendaDuration, this.currentDate);\n    if (appointments.length) {\n      height = this.instance.fire(\"getAgendaVerticalStepHeight\");\n      appointmentsByResources = this.groupAppointmentByResources(appointments);\n      var groupedAppts = [];\n      each(appointmentsByResources, (i, appts) => {\n        var additionalAppointments = [];\n        var recurrentIndexes = [];\n        each(appts, (index, appointment) => {\n          var recurrenceBatch = this.instance.getAppointmentsInstance()._processRecurrenceAppointment(appointment, index);\n          var appointmentBatch = null;\n          if (!recurrenceBatch.indexes.length) {\n            appointmentBatch = this.instance.getAppointmentsInstance()._processLongAppointment(appointment);\n            additionalAppointments = additionalAppointments.concat(appointmentBatch.parts);\n          }\n          additionalAppointments = additionalAppointments.concat(recurrenceBatch.parts);\n          recurrentIndexes = recurrentIndexes.concat(recurrenceBatch.indexes);\n        });\n        this.instance.getAppointmentsInstance()._reduceRecurrenceAppointments(recurrentIndexes, appts);\n        this.instance.getAppointmentsInstance()._combineAppointments(appts, additionalAppointments);\n        groupedAppts = groupedAppts.concat(appts);\n      });\n      Array.prototype.splice.apply(appointments, [0, appointments.length].concat(groupedAppts));\n    }\n    var result = [];\n    var sortedIndex = 0;\n    appointments.forEach((appt, index) => {\n      result.push([{\n        height: height,\n        width: \"100%\",\n        sortedIndex: sortedIndex++,\n        groupIndex: this._calculateGroupIndex(index, appointmentsByResources),\n        agendaSettings: appt.settings\n      }]);\n      delete appt.settings;\n    });\n    return result;\n  }\n  _calculateGroupIndex(apptIndex, appointmentsByResources) {\n    var resultInd;\n    var counter = 0;\n    for (var i in appointmentsByResources) {\n      var countApptInGroup = appointmentsByResources[i].length;\n      if (apptIndex >= counter && apptIndex < counter + countApptInGroup) {\n        resultInd = Number(i);\n        break;\n      }\n      counter += countApptInGroup;\n    }\n    return resultInd;\n  }\n  _getDeltaWidth(args, initialSize) {}\n  _getAppointmentMaxWidth() {\n    return this.cellWidth;\n  }\n  _needVerifyItemSize() {\n    return false;\n  }\n  _getAppointmentParts(geometry, settings) {}\n  _reduceMultiWeekAppointment() {}\n  calculateAppointmentHeight() {\n    return 0;\n  }\n  calculateAppointmentWidth() {\n    return 0;\n  }\n  isAppointmentGreaterThan(etalon, comparisonParameters) {}\n  isAllDay() {\n    return false;\n  }\n  _sortCondition() {}\n  _rowCondition(a, b) {}\n  _columnCondition(a, b) {}\n  _findIndexByKey(arr, iKey, jKey, iValue, jValue) {}\n  _markAppointmentAsVirtual() {}\n  getDropDownAppointmentWidth() {}\n  getCollectorLeftOffset() {}\n  getCollectorTopOffset() {}\n  replaceWrongAppointmentEndDate(rawAppointment, startDate, endDate) {\n    var adapter = createAppointmentAdapter(rawAppointment, this.dataAccessors, this.timeZoneCalculator);\n    replaceWrongEndDate(adapter, startDate, endDate, this.cellDuration, this.dataAccessors);\n  }\n  calculateRows(appointments, agendaDuration, currentDate, needClearSettings) {\n    this._rows = [];\n    currentDate = dateUtils.trimTime(new Date(currentDate));\n    var groupedAppointments = this.groupAppointmentByResources(appointments);\n    each(groupedAppointments, (_, currentAppointments) => {\n      var groupResult = [];\n      var appts = {\n        indexes: [],\n        parts: []\n      };\n      if (!currentAppointments.length) {\n        this._rows.push([]);\n        return true;\n      }\n      each(currentAppointments, (index, appointment) => {\n        var startDate = ExpressionUtils.getField(this.dataAccessors, \"startDate\", appointment);\n        var endDate = ExpressionUtils.getField(this.dataAccessors, \"endDate\", appointment);\n        this.replaceWrongAppointmentEndDate(appointment, startDate, endDate);\n        needClearSettings && delete appointment.settings;\n        var result = this.instance.getAppointmentsInstance()._processRecurrenceAppointment(appointment, index, false);\n        appts.parts = appts.parts.concat(result.parts);\n        appts.indexes = appts.indexes.concat(result.indexes);\n      });\n      this.instance.getAppointmentsInstance()._reduceRecurrenceAppointments(appts.indexes, currentAppointments);\n      currentAppointments.push(...appts.parts);\n      var appointmentCount = currentAppointments.length;\n      for (var i = 0; i < agendaDuration; i++) {\n        var day = new Date(currentDate);\n        day.setMilliseconds(day.getMilliseconds() + 864e5 * i);\n        if (void 0 === groupResult[i]) {\n          groupResult[i] = 0;\n        }\n        for (var j = 0; j < appointmentCount; j++) {\n          var appointmentData = currentAppointments[j].settings || currentAppointments[j];\n          var adapter = createAppointmentAdapter(currentAppointments[j], this.dataAccessors, this.timeZoneCalculator);\n          var appointmentIsLong = getAppointmentTakesSeveralDays(adapter);\n          var appointmentIsRecurrence = ExpressionUtils.getField(this.dataAccessors, \"recurrenceRule\", currentAppointments[j]);\n          if (this.instance.fire(\"dayHasAppointment\", day, appointmentData, true) || !appointmentIsRecurrence && appointmentIsLong && this.instance.fire(\"dayHasAppointment\", day, currentAppointments[j], true)) {\n            groupResult[i] += 1;\n          }\n        }\n      }\n      this._rows.push(groupResult);\n    });\n    return this._rows;\n  }\n  _iterateRow(row, obj, index) {\n    for (var i = 0; i < row.length; i++) {\n      obj.counter += row[i];\n      if (obj.counter >= index) {\n        obj.indexInRow = i;\n        break;\n      }\n    }\n  }\n  getDateByIndex(index, rows, startViewDate) {\n    var obj = {\n      counter: 0,\n      indexInRow: 0\n    };\n    index++;\n    for (var i = 0; i < rows.length; i++) {\n      this._iterateRow(rows[i], obj, index);\n      if (obj.indexInRow) {\n        break;\n      }\n    }\n    return new Date(new Date(startViewDate).setDate(startViewDate.getDate() + obj.indexInRow));\n  }\n  getAppointmentDataCalculator() {\n    return ($appointment, originalStartDate) => {\n      var apptIndex = $appointment.index();\n      var startViewDate = this.instance.getStartViewDate();\n      var calculatedStartDate = this.getDateByIndex(apptIndex, this._rows, startViewDate);\n      var wrappedOriginalStartDate = new Date(originalStartDate);\n      return {\n        startDate: new Date(calculatedStartDate.setHours(wrappedOriginalStartDate.getHours(), wrappedOriginalStartDate.getMinutes(), wrappedOriginalStartDate.getSeconds(), wrappedOriginalStartDate.getMilliseconds()))\n      };\n    };\n  }\n}\nexport default AgendaRenderingStrategy;","map":{"version":3,"names":["dateUtils","each","createAppointmentAdapter","ExpressionUtils","groupAppointmentsByResources","getAppointmentTakesSeveralDays","replaceWrongEndDate","BaseRenderingStrategy","AgendaRenderingStrategy","instance","options","agendaDuration","getAppointmentMinSize","getDeltaTime","keepAppointmentSettings","getAppointmentGeometry","geometry","groupAppointmentByResources","appointments","groups","_getCurrentViewOption","config","loadedResources","resources","dataAccessors","createTaskPositionMap","height","appointmentsByResources","calculateRows","currentDate","length","fire","groupedAppts","i","appts","additionalAppointments","recurrentIndexes","index","appointment","recurrenceBatch","getAppointmentsInstance","_processRecurrenceAppointment","appointmentBatch","indexes","_processLongAppointment","concat","parts","_reduceRecurrenceAppointments","_combineAppointments","Array","prototype","splice","apply","result","sortedIndex","forEach","appt","push","width","groupIndex","_calculateGroupIndex","agendaSettings","settings","apptIndex","resultInd","counter","countApptInGroup","Number","_getDeltaWidth","args","initialSize","_getAppointmentMaxWidth","cellWidth","_needVerifyItemSize","_getAppointmentParts","_reduceMultiWeekAppointment","calculateAppointmentHeight","calculateAppointmentWidth","isAppointmentGreaterThan","etalon","comparisonParameters","isAllDay","_sortCondition","_rowCondition","a","b","_columnCondition","_findIndexByKey","arr","iKey","jKey","iValue","jValue","_markAppointmentAsVirtual","getDropDownAppointmentWidth","getCollectorLeftOffset","getCollectorTopOffset","replaceWrongAppointmentEndDate","rawAppointment","startDate","endDate","adapter","timeZoneCalculator","cellDuration","needClearSettings","_rows","trimTime","Date","groupedAppointments","_","currentAppointments","groupResult","getField","appointmentCount","day","setMilliseconds","getMilliseconds","j","appointmentData","appointmentIsLong","appointmentIsRecurrence","_iterateRow","row","obj","indexInRow","getDateByIndex","rows","startViewDate","setDate","getDate","getAppointmentDataCalculator","$appointment","originalStartDate","getStartViewDate","calculatedStartDate","wrappedOriginalStartDate","setHours","getHours","getMinutes","getSeconds"],"sources":["C:/Users/Michal Abargel/Desktop/FULLSTACK_PROJECTS/PrivateLessones/F(x)/client/gui/node_modules/devextreme/esm/__internal/scheduler/appointments/rendering_strategies/m_strategy_agenda.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/scheduler/appointments/rendering_strategies/m_strategy_agenda.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport dateUtils from \"../../../../core/utils/date\";\r\nimport {\r\n    each\r\n} from \"../../../../core/utils/iterator\";\r\nimport {\r\n    createAppointmentAdapter\r\n} from \"../../../../ui/scheduler/appointmentAdapter\";\r\nimport {\r\n    ExpressionUtils\r\n} from \"../../../../ui/scheduler/expressionUtils\";\r\nimport {\r\n    groupAppointmentsByResources\r\n} from \"../../resources/m_utils\";\r\nimport {\r\n    getAppointmentTakesSeveralDays,\r\n    replaceWrongEndDate\r\n} from \"../data_provider/m_utils\";\r\nimport BaseRenderingStrategy from \"./m_strategy_base\";\r\nclass AgendaRenderingStrategy extends BaseRenderingStrategy {\r\n    get instance() {\r\n        return this.options.instance\r\n    }\r\n    get agendaDuration() {\r\n        return this.options.agendaDuration\r\n    }\r\n    getAppointmentMinSize() {}\r\n    getDeltaTime() {}\r\n    keepAppointmentSettings() {\r\n        return true\r\n    }\r\n    getAppointmentGeometry(geometry) {\r\n        return geometry\r\n    }\r\n    groupAppointmentByResources(appointments) {\r\n        var groups = this.instance._getCurrentViewOption(\"groups\");\r\n        var config = {\r\n            loadedResources: this.options.loadedResources,\r\n            resources: this.options.resources,\r\n            dataAccessors: this.dataAccessors.resources\r\n        };\r\n        return groupAppointmentsByResources(config, appointments, groups)\r\n    }\r\n    createTaskPositionMap(appointments) {\r\n        var height;\r\n        var appointmentsByResources;\r\n        this.calculateRows(appointments, this.agendaDuration, this.currentDate);\r\n        if (appointments.length) {\r\n            height = this.instance.fire(\"getAgendaVerticalStepHeight\");\r\n            appointmentsByResources = this.groupAppointmentByResources(appointments);\r\n            var groupedAppts = [];\r\n            each(appointmentsByResources, (i, appts) => {\r\n                var additionalAppointments = [];\r\n                var recurrentIndexes = [];\r\n                each(appts, (index, appointment) => {\r\n                    var recurrenceBatch = this.instance.getAppointmentsInstance()._processRecurrenceAppointment(appointment, index);\r\n                    var appointmentBatch = null;\r\n                    if (!recurrenceBatch.indexes.length) {\r\n                        appointmentBatch = this.instance.getAppointmentsInstance()._processLongAppointment(appointment);\r\n                        additionalAppointments = additionalAppointments.concat(appointmentBatch.parts)\r\n                    }\r\n                    additionalAppointments = additionalAppointments.concat(recurrenceBatch.parts);\r\n                    recurrentIndexes = recurrentIndexes.concat(recurrenceBatch.indexes)\r\n                });\r\n                this.instance.getAppointmentsInstance()._reduceRecurrenceAppointments(recurrentIndexes, appts);\r\n                this.instance.getAppointmentsInstance()._combineAppointments(appts, additionalAppointments);\r\n                groupedAppts = groupedAppts.concat(appts)\r\n            });\r\n            Array.prototype.splice.apply(appointments, [0, appointments.length].concat(groupedAppts))\r\n        }\r\n        var result = [];\r\n        var sortedIndex = 0;\r\n        appointments.forEach((appt, index) => {\r\n            result.push([{\r\n                height: height,\r\n                width: \"100%\",\r\n                sortedIndex: sortedIndex++,\r\n                groupIndex: this._calculateGroupIndex(index, appointmentsByResources),\r\n                agendaSettings: appt.settings\r\n            }]);\r\n            delete appt.settings\r\n        });\r\n        return result\r\n    }\r\n    _calculateGroupIndex(apptIndex, appointmentsByResources) {\r\n        var resultInd;\r\n        var counter = 0;\r\n        for (var i in appointmentsByResources) {\r\n            var countApptInGroup = appointmentsByResources[i].length;\r\n            if (apptIndex >= counter && apptIndex < counter + countApptInGroup) {\r\n                resultInd = Number(i);\r\n                break\r\n            }\r\n            counter += countApptInGroup\r\n        }\r\n        return resultInd\r\n    }\r\n    _getDeltaWidth(args, initialSize) {}\r\n    _getAppointmentMaxWidth() {\r\n        return this.cellWidth\r\n    }\r\n    _needVerifyItemSize() {\r\n        return false\r\n    }\r\n    _getAppointmentParts(geometry, settings) {}\r\n    _reduceMultiWeekAppointment() {}\r\n    calculateAppointmentHeight() {\r\n        return 0\r\n    }\r\n    calculateAppointmentWidth() {\r\n        return 0\r\n    }\r\n    isAppointmentGreaterThan(etalon, comparisonParameters) {}\r\n    isAllDay() {\r\n        return false\r\n    }\r\n    _sortCondition() {}\r\n    _rowCondition(a, b) {}\r\n    _columnCondition(a, b) {}\r\n    _findIndexByKey(arr, iKey, jKey, iValue, jValue) {}\r\n    _markAppointmentAsVirtual() {}\r\n    getDropDownAppointmentWidth() {}\r\n    getCollectorLeftOffset() {}\r\n    getCollectorTopOffset() {}\r\n    replaceWrongAppointmentEndDate(rawAppointment, startDate, endDate) {\r\n        var adapter = createAppointmentAdapter(rawAppointment, this.dataAccessors, this.timeZoneCalculator);\r\n        replaceWrongEndDate(adapter, startDate, endDate, this.cellDuration, this.dataAccessors)\r\n    }\r\n    calculateRows(appointments, agendaDuration, currentDate, needClearSettings) {\r\n        this._rows = [];\r\n        currentDate = dateUtils.trimTime(new Date(currentDate));\r\n        var groupedAppointments = this.groupAppointmentByResources(appointments);\r\n        each(groupedAppointments, (_, currentAppointments) => {\r\n            var groupResult = [];\r\n            var appts = {\r\n                indexes: [],\r\n                parts: []\r\n            };\r\n            if (!currentAppointments.length) {\r\n                this._rows.push([]);\r\n                return true\r\n            }\r\n            each(currentAppointments, (index, appointment) => {\r\n                var startDate = ExpressionUtils.getField(this.dataAccessors, \"startDate\", appointment);\r\n                var endDate = ExpressionUtils.getField(this.dataAccessors, \"endDate\", appointment);\r\n                this.replaceWrongAppointmentEndDate(appointment, startDate, endDate);\r\n                needClearSettings && delete appointment.settings;\r\n                var result = this.instance.getAppointmentsInstance()._processRecurrenceAppointment(appointment, index, false);\r\n                appts.parts = appts.parts.concat(result.parts);\r\n                appts.indexes = appts.indexes.concat(result.indexes)\r\n            });\r\n            this.instance.getAppointmentsInstance()._reduceRecurrenceAppointments(appts.indexes, currentAppointments);\r\n            currentAppointments.push(...appts.parts);\r\n            var appointmentCount = currentAppointments.length;\r\n            for (var i = 0; i < agendaDuration; i++) {\r\n                var day = new Date(currentDate);\r\n                day.setMilliseconds(day.getMilliseconds() + 864e5 * i);\r\n                if (void 0 === groupResult[i]) {\r\n                    groupResult[i] = 0\r\n                }\r\n                for (var j = 0; j < appointmentCount; j++) {\r\n                    var appointmentData = currentAppointments[j].settings || currentAppointments[j];\r\n                    var adapter = createAppointmentAdapter(currentAppointments[j], this.dataAccessors, this.timeZoneCalculator);\r\n                    var appointmentIsLong = getAppointmentTakesSeveralDays(adapter);\r\n                    var appointmentIsRecurrence = ExpressionUtils.getField(this.dataAccessors, \"recurrenceRule\", currentAppointments[j]);\r\n                    if (this.instance.fire(\"dayHasAppointment\", day, appointmentData, true) || !appointmentIsRecurrence && appointmentIsLong && this.instance.fire(\"dayHasAppointment\", day, currentAppointments[j], true)) {\r\n                        groupResult[i] += 1\r\n                    }\r\n                }\r\n            }\r\n            this._rows.push(groupResult)\r\n        });\r\n        return this._rows\r\n    }\r\n    _iterateRow(row, obj, index) {\r\n        for (var i = 0; i < row.length; i++) {\r\n            obj.counter += row[i];\r\n            if (obj.counter >= index) {\r\n                obj.indexInRow = i;\r\n                break\r\n            }\r\n        }\r\n    }\r\n    getDateByIndex(index, rows, startViewDate) {\r\n        var obj = {\r\n            counter: 0,\r\n            indexInRow: 0\r\n        };\r\n        index++;\r\n        for (var i = 0; i < rows.length; i++) {\r\n            this._iterateRow(rows[i], obj, index);\r\n            if (obj.indexInRow) {\r\n                break\r\n            }\r\n        }\r\n        return new Date(new Date(startViewDate).setDate(startViewDate.getDate() + obj.indexInRow))\r\n    }\r\n    getAppointmentDataCalculator() {\r\n        return ($appointment, originalStartDate) => {\r\n            var apptIndex = $appointment.index();\r\n            var startViewDate = this.instance.getStartViewDate();\r\n            var calculatedStartDate = this.getDateByIndex(apptIndex, this._rows, startViewDate);\r\n            var wrappedOriginalStartDate = new Date(originalStartDate);\r\n            return {\r\n                startDate: new Date(calculatedStartDate.setHours(wrappedOriginalStartDate.getHours(), wrappedOriginalStartDate.getMinutes(), wrappedOriginalStartDate.getSeconds(), wrappedOriginalStartDate.getMilliseconds()))\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default AgendaRenderingStrategy;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}