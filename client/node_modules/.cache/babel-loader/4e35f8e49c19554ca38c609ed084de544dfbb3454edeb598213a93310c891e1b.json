{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/scheduler/appointment/utils/getAppointmentTakesAllDay.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { isDefined } from \"../../../../../core/utils/type\";\nimport dateUtils from \"../../../../../core/utils/date\";\nvar getAppointmentDurationInHours = (startDate, endDate) => (endDate.getTime() - startDate.getTime()) / dateUtils.dateToMilliseconds(\"hour\");\nvar appointmentHasShortDayDuration = (startDate, endDate, viewStartDayHour, viewEndDayHour) => {\n  var appointmentDurationInHours = getAppointmentDurationInHours(startDate, endDate);\n  var viewDurationInHours = viewEndDayHour - viewStartDayHour;\n  var startDateHours = startDate.getHours();\n  var endDateHours = endDate.getHours();\n  return appointmentDurationInHours >= viewDurationInHours && startDateHours === viewStartDayHour && endDateHours === viewEndDayHour;\n};\nexport var getAppointmentTakesAllDay = (appointmentAdapter, viewStartDayHour, viewEndDayHour, allDayPanelMode) => {\n  var hasAllDay = () => appointmentAdapter.allDay;\n  switch (allDayPanelMode) {\n    case \"hidden\":\n      return false;\n    case \"allDay\":\n      return hasAllDay();\n    case \"all\":\n    default:\n      if (hasAllDay()) {\n        return true;\n      }\n      var {\n        endDate: endDate,\n        startDate: startDate\n      } = appointmentAdapter;\n      if (!isDefined(endDate)) {\n        return false;\n      }\n      var appointmentDurationInHours = getAppointmentDurationInHours(startDate, endDate);\n      return appointmentDurationInHours >= 24 || appointmentHasShortDayDuration(startDate, endDate, viewStartDayHour, viewEndDayHour);\n  }\n};","map":{"version":3,"names":["isDefined","dateUtils","getAppointmentDurationInHours","startDate","endDate","getTime","dateToMilliseconds","appointmentHasShortDayDuration","viewStartDayHour","viewEndDayHour","appointmentDurationInHours","viewDurationInHours","startDateHours","getHours","endDateHours","getAppointmentTakesAllDay","appointmentAdapter","allDayPanelMode","hasAllDay","allDay"],"sources":["C:/Users/Michal Abargel/Desktop/FULLSTACK_PROJECTS/PrivateLessones/F(x)/client/gui/node_modules/devextreme/esm/renovation/ui/scheduler/appointment/utils/getAppointmentTakesAllDay.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/scheduler/appointment/utils/getAppointmentTakesAllDay.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isDefined\r\n} from \"../../../../../core/utils/type\";\r\nimport dateUtils from \"../../../../../core/utils/date\";\r\nvar getAppointmentDurationInHours = (startDate, endDate) => (endDate.getTime() - startDate.getTime()) / dateUtils.dateToMilliseconds(\"hour\");\r\nvar appointmentHasShortDayDuration = (startDate, endDate, viewStartDayHour, viewEndDayHour) => {\r\n    var appointmentDurationInHours = getAppointmentDurationInHours(startDate, endDate);\r\n    var viewDurationInHours = viewEndDayHour - viewStartDayHour;\r\n    var startDateHours = startDate.getHours();\r\n    var endDateHours = endDate.getHours();\r\n    return appointmentDurationInHours >= viewDurationInHours && startDateHours === viewStartDayHour && endDateHours === viewEndDayHour\r\n};\r\nexport var getAppointmentTakesAllDay = (appointmentAdapter, viewStartDayHour, viewEndDayHour, allDayPanelMode) => {\r\n    var hasAllDay = () => appointmentAdapter.allDay;\r\n    switch (allDayPanelMode) {\r\n        case \"hidden\":\r\n            return false;\r\n        case \"allDay\":\r\n            return hasAllDay();\r\n        case \"all\":\r\n        default:\r\n            if (hasAllDay()) {\r\n                return true\r\n            }\r\n            var {\r\n                endDate: endDate, startDate: startDate\r\n            } = appointmentAdapter;\r\n            if (!isDefined(endDate)) {\r\n                return false\r\n            }\r\n            var appointmentDurationInHours = getAppointmentDurationInHours(startDate, endDate);\r\n            return appointmentDurationInHours >= 24 || appointmentHasShortDayDuration(startDate, endDate, viewStartDayHour, viewEndDayHour)\r\n    }\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,SAAS,QACN,gCAAgC;AACvC,OAAOC,SAAS,MAAM,gCAAgC;AACtD,IAAIC,6BAA6B,GAAGA,CAACC,SAAS,EAAEC,OAAO,KAAK,CAACA,OAAO,CAACC,OAAO,CAAC,CAAC,GAAGF,SAAS,CAACE,OAAO,CAAC,CAAC,IAAIJ,SAAS,CAACK,kBAAkB,CAAC,MAAM,CAAC;AAC5I,IAAIC,8BAA8B,GAAGA,CAACJ,SAAS,EAAEC,OAAO,EAAEI,gBAAgB,EAAEC,cAAc,KAAK;EAC3F,IAAIC,0BAA0B,GAAGR,6BAA6B,CAACC,SAAS,EAAEC,OAAO,CAAC;EAClF,IAAIO,mBAAmB,GAAGF,cAAc,GAAGD,gBAAgB;EAC3D,IAAII,cAAc,GAAGT,SAAS,CAACU,QAAQ,CAAC,CAAC;EACzC,IAAIC,YAAY,GAAGV,OAAO,CAACS,QAAQ,CAAC,CAAC;EACrC,OAAOH,0BAA0B,IAAIC,mBAAmB,IAAIC,cAAc,KAAKJ,gBAAgB,IAAIM,YAAY,KAAKL,cAAc;AACtI,CAAC;AACD,OAAO,IAAIM,yBAAyB,GAAGA,CAACC,kBAAkB,EAAER,gBAAgB,EAAEC,cAAc,EAAEQ,eAAe,KAAK;EAC9G,IAAIC,SAAS,GAAGA,CAAA,KAAMF,kBAAkB,CAACG,MAAM;EAC/C,QAAQF,eAAe;IACnB,KAAK,QAAQ;MACT,OAAO,KAAK;IAChB,KAAK,QAAQ;MACT,OAAOC,SAAS,CAAC,CAAC;IACtB,KAAK,KAAK;IACV;MACI,IAAIA,SAAS,CAAC,CAAC,EAAE;QACb,OAAO,IAAI;MACf;MACA,IAAI;QACAd,OAAO,EAAEA,OAAO;QAAED,SAAS,EAAEA;MACjC,CAAC,GAAGa,kBAAkB;MACtB,IAAI,CAAChB,SAAS,CAACI,OAAO,CAAC,EAAE;QACrB,OAAO,KAAK;MAChB;MACA,IAAIM,0BAA0B,GAAGR,6BAA6B,CAACC,SAAS,EAAEC,OAAO,CAAC;MAClF,OAAOM,0BAA0B,IAAI,EAAE,IAAIH,8BAA8B,CAACJ,SAAS,EAAEC,OAAO,EAAEI,gBAAgB,EAAEC,cAAc,CAAC;EACvI;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}