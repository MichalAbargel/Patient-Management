{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/scheduler/appointments/m_text_utils.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport dateUtils from \"../../../core/utils/date\";\nimport dateLocalization from \"../../../localization/date\";\nexport var createFormattedDateText = options => {\n  var {\n    startDate: startDate,\n    endDate: endDate,\n    allDay: allDay,\n    format: format\n  } = options;\n  var formatType = format || getFormatType(startDate, endDate, allDay);\n  return formatDates(startDate, endDate, formatType);\n};\nexport var getFormatType = (startDate, endDate, isAllDay, isDateAndTimeView) => {\n  if (isAllDay) {\n    return \"DATE\";\n  }\n  if (isDateAndTimeView && dateUtils.sameDate(startDate, endDate)) {\n    return \"TIME\";\n  }\n  return \"DATETIME\";\n};\nexport var formatDates = (startDate, endDate, formatType) => {\n  var isSameDate = startDate.getDate() === endDate.getDate();\n  switch (formatType) {\n    case \"DATETIME\":\n      return [dateLocalization.format(startDate, \"monthandday\"), \" \", dateLocalization.format(startDate, \"shorttime\"), \" - \", isSameDate ? \"\" : \"\".concat(dateLocalization.format(endDate, \"monthandday\"), \" \"), dateLocalization.format(endDate, \"shorttime\")].join(\"\");\n    case \"TIME\":\n      return \"\".concat(dateLocalization.format(startDate, \"shorttime\"), \" - \").concat(dateLocalization.format(endDate, \"shorttime\"));\n    case \"DATE\":\n      return \"\".concat(dateLocalization.format(startDate, \"monthandday\")).concat(isSameDate ? \"\" : \" - \".concat(dateLocalization.format(endDate, \"monthandday\")));\n  }\n};","map":{"version":3,"names":["dateUtils","dateLocalization","createFormattedDateText","options","startDate","endDate","allDay","format","formatType","getFormatType","formatDates","isAllDay","isDateAndTimeView","sameDate","isSameDate","getDate","concat","join"],"sources":["C:/Users/Michal Abargel/Desktop/FULLSTACK_PROJECTS/Patient-Management/client/node_modules/devextreme/esm/__internal/scheduler/appointments/m_text_utils.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/scheduler/appointments/m_text_utils.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport dateUtils from \"../../../core/utils/date\";\r\nimport dateLocalization from \"../../../localization/date\";\r\nexport var createFormattedDateText = options => {\r\n    var {\r\n        startDate: startDate,\r\n        endDate: endDate,\r\n        allDay: allDay,\r\n        format: format\r\n    } = options;\r\n    var formatType = format || getFormatType(startDate, endDate, allDay);\r\n    return formatDates(startDate, endDate, formatType)\r\n};\r\nexport var getFormatType = (startDate, endDate, isAllDay, isDateAndTimeView) => {\r\n    if (isAllDay) {\r\n        return \"DATE\"\r\n    }\r\n    if (isDateAndTimeView && dateUtils.sameDate(startDate, endDate)) {\r\n        return \"TIME\"\r\n    }\r\n    return \"DATETIME\"\r\n};\r\nexport var formatDates = (startDate, endDate, formatType) => {\r\n    var isSameDate = startDate.getDate() === endDate.getDate();\r\n    switch (formatType) {\r\n        case \"DATETIME\":\r\n            return [dateLocalization.format(startDate, \"monthandday\"), \" \", dateLocalization.format(startDate, \"shorttime\"), \" - \", isSameDate ? \"\" : \"\".concat(dateLocalization.format(endDate, \"monthandday\"), \" \"), dateLocalization.format(endDate, \"shorttime\")].join(\"\");\r\n        case \"TIME\":\r\n            return \"\".concat(dateLocalization.format(startDate, \"shorttime\"), \" - \").concat(dateLocalization.format(endDate, \"shorttime\"));\r\n        case \"DATE\":\r\n            return \"\".concat(dateLocalization.format(startDate, \"monthandday\")).concat(isSameDate ? \"\" : \" - \".concat(dateLocalization.format(endDate, \"monthandday\")))\r\n    }\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,SAAS,MAAM,0BAA0B;AAChD,OAAOC,gBAAgB,MAAM,4BAA4B;AACzD,OAAO,IAAIC,uBAAuB,GAAGC,OAAO,IAAI;EAC5C,IAAI;IACAC,SAAS,EAAEA,SAAS;IACpBC,OAAO,EAAEA,OAAO;IAChBC,MAAM,EAAEA,MAAM;IACdC,MAAM,EAAEA;EACZ,CAAC,GAAGJ,OAAO;EACX,IAAIK,UAAU,GAAGD,MAAM,IAAIE,aAAa,CAACL,SAAS,EAAEC,OAAO,EAAEC,MAAM,CAAC;EACpE,OAAOI,WAAW,CAACN,SAAS,EAAEC,OAAO,EAAEG,UAAU,CAAC;AACtD,CAAC;AACD,OAAO,IAAIC,aAAa,GAAGA,CAACL,SAAS,EAAEC,OAAO,EAAEM,QAAQ,EAAEC,iBAAiB,KAAK;EAC5E,IAAID,QAAQ,EAAE;IACV,OAAO,MAAM;EACjB;EACA,IAAIC,iBAAiB,IAAIZ,SAAS,CAACa,QAAQ,CAACT,SAAS,EAAEC,OAAO,CAAC,EAAE;IAC7D,OAAO,MAAM;EACjB;EACA,OAAO,UAAU;AACrB,CAAC;AACD,OAAO,IAAIK,WAAW,GAAGA,CAACN,SAAS,EAAEC,OAAO,EAAEG,UAAU,KAAK;EACzD,IAAIM,UAAU,GAAGV,SAAS,CAACW,OAAO,CAAC,CAAC,KAAKV,OAAO,CAACU,OAAO,CAAC,CAAC;EAC1D,QAAQP,UAAU;IACd,KAAK,UAAU;MACX,OAAO,CAACP,gBAAgB,CAACM,MAAM,CAACH,SAAS,EAAE,aAAa,CAAC,EAAE,GAAG,EAAEH,gBAAgB,CAACM,MAAM,CAACH,SAAS,EAAE,WAAW,CAAC,EAAE,KAAK,EAAEU,UAAU,GAAG,EAAE,GAAG,EAAE,CAACE,MAAM,CAACf,gBAAgB,CAACM,MAAM,CAACF,OAAO,EAAE,aAAa,CAAC,EAAE,GAAG,CAAC,EAAEJ,gBAAgB,CAACM,MAAM,CAACF,OAAO,EAAE,WAAW,CAAC,CAAC,CAACY,IAAI,CAAC,EAAE,CAAC;IACtQ,KAAK,MAAM;MACP,OAAO,EAAE,CAACD,MAAM,CAACf,gBAAgB,CAACM,MAAM,CAACH,SAAS,EAAE,WAAW,CAAC,EAAE,KAAK,CAAC,CAACY,MAAM,CAACf,gBAAgB,CAACM,MAAM,CAACF,OAAO,EAAE,WAAW,CAAC,CAAC;IAClI,KAAK,MAAM;MACP,OAAO,EAAE,CAACW,MAAM,CAACf,gBAAgB,CAACM,MAAM,CAACH,SAAS,EAAE,aAAa,CAAC,CAAC,CAACY,MAAM,CAACF,UAAU,GAAG,EAAE,GAAG,KAAK,CAACE,MAAM,CAACf,gBAAgB,CAACM,MAAM,CAACF,OAAO,EAAE,aAAa,CAAC,CAAC,CAAC;EACnK;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}