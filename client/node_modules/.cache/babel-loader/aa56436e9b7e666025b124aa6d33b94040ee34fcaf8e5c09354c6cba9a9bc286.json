{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/workspaces/view_model/view_data_generator_month.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getToday, setOptionHour } from \"../../../../renovation/ui/scheduler/view_model/to_test/views/utils/base\";\nimport { ViewDataGenerator } from \"./view_data_generator\";\nimport dateUtils from \"../../../../core/utils/date\";\nimport { calculateCellIndex, calculateStartViewDate, getCellText, isFirstCellInMonthWithIntervalCount, getViewStartByOptions } from \"../../../../renovation/ui/scheduler/view_model/to_test/views/utils/month\";\nimport { calculateAlignedWeeksBetweenDates } from \"./utils\";\nimport dateLocalization from \"../../../../localization/date\";\nvar DAY_IN_MILLISECONDS = dateUtils.dateToMilliseconds(\"day\");\nvar DAYS_IN_WEEK = 7;\nexport class ViewDataGeneratorMonth extends ViewDataGenerator {\n  get tableAllDay() {\n    return;\n  }\n  getCellData(rowIndex, columnIndex, options, allDay) {\n    var data = super.getCellData(rowIndex, columnIndex, options, false);\n    var startDate = data.startDate;\n    var {\n      indicatorTime: indicatorTime,\n      timeZoneCalculator: timeZoneCalculator,\n      intervalCount: intervalCount\n    } = options;\n    data.today = this.isCurrentDate(startDate, indicatorTime, timeZoneCalculator);\n    data.otherMonth = this.isOtherMonth(startDate, this._minVisibleDate, this._maxVisibleDate);\n    data.firstDayOfMonth = isFirstCellInMonthWithIntervalCount(startDate, intervalCount);\n    data.text = getCellText(startDate, intervalCount);\n    return data;\n  }\n  isCurrentDate(date, indicatorTime, timeZoneCalculator) {\n    return dateUtils.sameDate(date, getToday(indicatorTime, timeZoneCalculator));\n  }\n  isOtherMonth(cellDate, minDate, maxDate) {\n    return !dateUtils.dateInRange(cellDate, minDate, maxDate, \"date\");\n  }\n  _calculateCellIndex(rowIndex, columnIndex, rowCount, columnCount) {\n    return calculateCellIndex(rowIndex, columnIndex, rowCount, columnCount);\n  }\n  calculateEndDate(startDate, interval, endDayHour) {\n    return setOptionHour(startDate, endDayHour);\n  }\n  getInterval() {\n    return DAY_IN_MILLISECONDS;\n  }\n  _calculateStartViewDate(options) {\n    return calculateStartViewDate(options.currentDate, options.startDayHour, options.startDate, options.intervalCount, this.getFirstDayOfWeek(options.firstDayOfWeek));\n  }\n  _setVisibilityDates(options) {\n    var {\n      intervalCount: intervalCount,\n      startDate: startDate,\n      currentDate: currentDate\n    } = options;\n    var firstMonthDate = dateUtils.getFirstMonthDate(startDate);\n    var viewStart = getViewStartByOptions(startDate, currentDate, intervalCount, firstMonthDate);\n    this._minVisibleDate = new Date(viewStart.setDate(1));\n    var nextMonthDate = new Date(viewStart.setMonth(viewStart.getMonth() + intervalCount));\n    this._maxVisibleDate = new Date(nextMonthDate.setDate(0));\n  }\n  getCellCount() {\n    return DAYS_IN_WEEK;\n  }\n  getRowCount(options) {\n    var _options$firstDayOfWe;\n    var startDate = new Date(options.currentDate);\n    startDate.setDate(1);\n    var endDate = new Date(startDate);\n    endDate.setMonth(endDate.getMonth() + options.intervalCount);\n    endDate.setDate(0);\n    return calculateAlignedWeeksBetweenDates(startDate, endDate, null !== (_options$firstDayOfWe = options.firstDayOfWeek) && void 0 !== _options$firstDayOfWe ? _options$firstDayOfWe : dateLocalization.firstDayOfWeekIndex());\n  }\n  getCellCountInDay() {\n    return 1;\n  }\n  setHiddenInterval() {\n    this.hiddenInterval = 0;\n  }\n}","map":{"version":3,"names":["getToday","setOptionHour","ViewDataGenerator","dateUtils","calculateCellIndex","calculateStartViewDate","getCellText","isFirstCellInMonthWithIntervalCount","getViewStartByOptions","calculateAlignedWeeksBetweenDates","dateLocalization","DAY_IN_MILLISECONDS","dateToMilliseconds","DAYS_IN_WEEK","ViewDataGeneratorMonth","tableAllDay","getCellData","rowIndex","columnIndex","options","allDay","data","startDate","indicatorTime","timeZoneCalculator","intervalCount","today","isCurrentDate","otherMonth","isOtherMonth","_minVisibleDate","_maxVisibleDate","firstDayOfMonth","text","date","sameDate","cellDate","minDate","maxDate","dateInRange","_calculateCellIndex","rowCount","columnCount","calculateEndDate","interval","endDayHour","getInterval","_calculateStartViewDate","currentDate","startDayHour","getFirstDayOfWeek","firstDayOfWeek","_setVisibilityDates","firstMonthDate","getFirstMonthDate","viewStart","Date","setDate","nextMonthDate","setMonth","getMonth","getCellCount","getRowCount","_options$firstDayOfWe","endDate","firstDayOfWeekIndex","getCellCountInDay","setHiddenInterval","hiddenInterval"],"sources":["C:/Users/Michal Abargel/Desktop/FULLSTACK_PROJECTS/PrivateLessones/F(x)/client/gui/node_modules/devextreme/esm/ui/scheduler/workspaces/view_model/view_data_generator_month.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/workspaces/view_model/view_data_generator_month.js)\r\n * Version: 23.1.5\r\n * Build date: Wed Aug 30 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getToday,\r\n    setOptionHour\r\n} from \"../../../../renovation/ui/scheduler/view_model/to_test/views/utils/base\";\r\nimport {\r\n    ViewDataGenerator\r\n} from \"./view_data_generator\";\r\nimport dateUtils from \"../../../../core/utils/date\";\r\nimport {\r\n    calculateCellIndex,\r\n    calculateStartViewDate,\r\n    getCellText,\r\n    isFirstCellInMonthWithIntervalCount,\r\n    getViewStartByOptions\r\n} from \"../../../../renovation/ui/scheduler/view_model/to_test/views/utils/month\";\r\nimport {\r\n    calculateAlignedWeeksBetweenDates\r\n} from \"./utils\";\r\nimport dateLocalization from \"../../../../localization/date\";\r\nvar DAY_IN_MILLISECONDS = dateUtils.dateToMilliseconds(\"day\");\r\nvar DAYS_IN_WEEK = 7;\r\nexport class ViewDataGeneratorMonth extends ViewDataGenerator {\r\n    get tableAllDay() {\r\n        return\r\n    }\r\n    getCellData(rowIndex, columnIndex, options, allDay) {\r\n        var data = super.getCellData(rowIndex, columnIndex, options, false);\r\n        var startDate = data.startDate;\r\n        var {\r\n            indicatorTime: indicatorTime,\r\n            timeZoneCalculator: timeZoneCalculator,\r\n            intervalCount: intervalCount\r\n        } = options;\r\n        data.today = this.isCurrentDate(startDate, indicatorTime, timeZoneCalculator);\r\n        data.otherMonth = this.isOtherMonth(startDate, this._minVisibleDate, this._maxVisibleDate);\r\n        data.firstDayOfMonth = isFirstCellInMonthWithIntervalCount(startDate, intervalCount);\r\n        data.text = getCellText(startDate, intervalCount);\r\n        return data\r\n    }\r\n    isCurrentDate(date, indicatorTime, timeZoneCalculator) {\r\n        return dateUtils.sameDate(date, getToday(indicatorTime, timeZoneCalculator))\r\n    }\r\n    isOtherMonth(cellDate, minDate, maxDate) {\r\n        return !dateUtils.dateInRange(cellDate, minDate, maxDate, \"date\")\r\n    }\r\n    _calculateCellIndex(rowIndex, columnIndex, rowCount, columnCount) {\r\n        return calculateCellIndex(rowIndex, columnIndex, rowCount, columnCount)\r\n    }\r\n    calculateEndDate(startDate, interval, endDayHour) {\r\n        return setOptionHour(startDate, endDayHour)\r\n    }\r\n    getInterval() {\r\n        return DAY_IN_MILLISECONDS\r\n    }\r\n    _calculateStartViewDate(options) {\r\n        return calculateStartViewDate(options.currentDate, options.startDayHour, options.startDate, options.intervalCount, this.getFirstDayOfWeek(options.firstDayOfWeek))\r\n    }\r\n    _setVisibilityDates(options) {\r\n        var {\r\n            intervalCount: intervalCount,\r\n            startDate: startDate,\r\n            currentDate: currentDate\r\n        } = options;\r\n        var firstMonthDate = dateUtils.getFirstMonthDate(startDate);\r\n        var viewStart = getViewStartByOptions(startDate, currentDate, intervalCount, firstMonthDate);\r\n        this._minVisibleDate = new Date(viewStart.setDate(1));\r\n        var nextMonthDate = new Date(viewStart.setMonth(viewStart.getMonth() + intervalCount));\r\n        this._maxVisibleDate = new Date(nextMonthDate.setDate(0))\r\n    }\r\n    getCellCount() {\r\n        return DAYS_IN_WEEK\r\n    }\r\n    getRowCount(options) {\r\n        var _options$firstDayOfWe;\r\n        var startDate = new Date(options.currentDate);\r\n        startDate.setDate(1);\r\n        var endDate = new Date(startDate);\r\n        endDate.setMonth(endDate.getMonth() + options.intervalCount);\r\n        endDate.setDate(0);\r\n        return calculateAlignedWeeksBetweenDates(startDate, endDate, null !== (_options$firstDayOfWe = options.firstDayOfWeek) && void 0 !== _options$firstDayOfWe ? _options$firstDayOfWe : dateLocalization.firstDayOfWeekIndex())\r\n    }\r\n    getCellCountInDay() {\r\n        return 1\r\n    }\r\n    setHiddenInterval() {\r\n        this.hiddenInterval = 0\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}